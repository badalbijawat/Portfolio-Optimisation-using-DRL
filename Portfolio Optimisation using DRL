{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/badalbijawat/Portfolio-Optimisation-using-DRL/blob/main/Copy_of_FinRL_Ensemble_StockTrading_ICAIF_2020.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "gXaoZs2lh1hi"
      },
      "source": [
        "# Deep Reinforcement Learning for Stock Trading from Scratch: Multiple Stock Trading Using Ensemble Strategy\n",
        "\n",
        "Tutorials to use OpenAI DRL to trade multiple stocks using ensemble strategy in one Jupyter Notebook | Presented at ICAIF 2020\n",
        "\n",
        "* This notebook is the reimplementation of our paper: Deep Reinforcement Learning for Automated Stock Trading: An Ensemble Strategy, using FinRL.\n",
        "* Check out medium blog for detailed explanations: https://medium.com/@ai4finance/deep-reinforcement-learning-for-automated-stock-trading-f1dad0126a02\n",
        "* Please report any issues to our Github: https://github.com/AI4Finance-LLC/FinRL-Library/issues\n",
        "* **Pytorch Version** \n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "lGunVt8oLCVS"
      },
      "source": [
        "# Content"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "HOzAKQ-SLGX6"
      },
      "source": [
        "* [1. Problem Definition](#0)\n",
        "* [2. Getting Started - Load Python packages](#1)\n",
        "    * [2.1. Install Packages](#1.1)    \n",
        "    * [2.2. Check Additional Packages](#1.2)\n",
        "    * [2.3. Import Packages](#1.3)\n",
        "    * [2.4. Create Folders](#1.4)\n",
        "* [3. Download Data](#2)\n",
        "* [4. Preprocess Data](#3)        \n",
        "    * [4.1. Technical Indicators](#3.1)\n",
        "    * [4.2. Perform Feature Engineering](#3.2)\n",
        "* [5.Build Environment](#4)  \n",
        "    * [5.1. Training & Trade Data Split](#4.1)\n",
        "    * [5.2. User-defined Environment](#4.2)   \n",
        "    * [5.3. Initialize Environment](#4.3)    \n",
        "* [6.Implement DRL Algorithms](#5)  \n",
        "* [7.Backtesting Performance](#6)  \n",
        "    * [7.1. BackTestStats](#6.1)\n",
        "    * [7.2. BackTestPlot](#6.2)   \n",
        "    * [7.3. Baseline Stats](#6.3)   \n",
        "    * [7.3. Compare to Stock Market Index](#6.4)             "
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "sApkDlD9LIZv"
      },
      "source": [
        "<a id='0'></a>\n",
        "# Part 1. Problem Definition"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "HjLD2TZSLKZ-"
      },
      "source": [
        "This problem is to design an automated trading solution for single stock trading. We model the stock trading process as a Markov Decision Process (MDP). We then formulate our trading goal as a maximization problem.\n",
        "\n",
        "The algorithm is trained using Deep Reinforcement Learning (DRL) algorithms and the components of the reinforcement learning environment are:\n",
        "\n",
        "\n",
        "* Action: The action space describes the allowed actions that the agent interacts with the\n",
        "environment. Normally, a ∈ A includes three actions: a ∈ {−1, 0, 1}, where −1, 0, 1 represent\n",
        "selling, holding, and buying one stock. Also, an action can be carried upon multiple shares. We use\n",
        "an action space {−k, ..., −1, 0, 1, ..., k}, where k denotes the number of shares. For example, \"Buy\n",
        "10 shares of AAPL\" or \"Sell 10 shares of AAPL\" are 10 or −10, respectively\n",
        "\n",
        "* Reward function: r(s, a, s′) is the incentive mechanism for an agent to learn a better action. The change of the portfolio value when action a is taken at state s and arriving at new state s',  i.e., r(s, a, s′) = v′ − v, where v′ and v represent the portfolio\n",
        "values at state s′ and s, respectively\n",
        "\n",
        "* State: The state space describes the observations that the agent receives from the environment. Just as a human trader needs to analyze various information before executing a trade, so\n",
        "our trading agent observes many different features to better learn in an interactive environment.\n",
        "\n",
        "* Environment: Dow 30 consituents\n",
        "\n",
        "\n",
        "The data of the single stock that we will be using for this case study is obtained from Yahoo Finance API. The data contains Open-High-Low-Close price and volume.\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Ffsre789LY08"
      },
      "source": [
        "<a id='1'></a>\n",
        "# Part 2. Getting Started- Load Python Packages"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Uy5_PTmOh1hj"
      },
      "source": [
        "<a id='1.1'></a>\n",
        "## 2.1. Install all the packages through FinRL library\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "mPT0ipYE28wL",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "10b20f76-e47f-4ead-e3e0-ebb34e88da16"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting git+https://github.com/AI4Finance-LLC/FinRL-Library.git\n",
            "  Cloning https://github.com/AI4Finance-LLC/FinRL-Library.git to /tmp/pip-req-build-hthvya_r\n",
            "  Running command git clone -q https://github.com/AI4Finance-LLC/FinRL-Library.git /tmp/pip-req-build-hthvya_r\n",
            "Collecting pyfolio@ git+https://github.com/quantopian/pyfolio.git#egg=pyfolio-0.9.2\n",
            "  Cloning https://github.com/quantopian/pyfolio.git to /tmp/pip-install-axp1ytn_/pyfolio_459393218b9e44d5bb382cdbd00211dc\n",
            "  Running command git clone -q https://github.com/quantopian/pyfolio.git /tmp/pip-install-axp1ytn_/pyfolio_459393218b9e44d5bb382cdbd00211dc\n",
            "Collecting elegantrl@ git+https://github.com/AI4Finance-Foundation/ElegantRL.git#egg=elegantrl\n",
            "  Cloning https://github.com/AI4Finance-Foundation/ElegantRL.git to /tmp/pip-install-axp1ytn_/elegantrl_8567295bdde64c129a70d388ed0f1537\n",
            "  Running command git clone -q https://github.com/AI4Finance-Foundation/ElegantRL.git /tmp/pip-install-axp1ytn_/elegantrl_8567295bdde64c129a70d388ed0f1537\n",
            "Requirement already satisfied: numpy>=1.17.3 in /usr/local/lib/python3.7/dist-packages (from finrl==0.3.5) (1.19.5)\n",
            "Requirement already satisfied: pandas>=1.1.5 in /usr/local/lib/python3.7/dist-packages (from finrl==0.3.5) (1.3.5)\n",
            "Collecting stockstats>=0.4.0\n",
            "  Downloading stockstats-0.4.1-py2.py3-none-any.whl (19 kB)\n",
            "Collecting yfinance\n",
            "  Downloading yfinance-0.1.70-py2.py3-none-any.whl (26 kB)\n",
            "Collecting elegantrl\n",
            "  Downloading elegantrl-0.3.3-py3-none-any.whl (234 kB)\n",
            "\u001b[K     |████████████████████████████████| 234 kB 7.8 MB/s \n",
            "\u001b[?25hRequirement already satisfied: matplotlib in /usr/local/lib/python3.7/dist-packages (from finrl==0.3.5) (3.2.2)\n",
            "Requirement already satisfied: scikit-learn>=0.21.0 in /usr/local/lib/python3.7/dist-packages (from finrl==0.3.5) (1.0.2)\n",
            "Requirement already satisfied: gym>=0.17 in /usr/local/lib/python3.7/dist-packages (from finrl==0.3.5) (0.17.3)\n",
            "Collecting stable-baselines3[extra]\n",
            "  Downloading stable_baselines3-1.4.0-py3-none-any.whl (176 kB)\n",
            "\u001b[K     |████████████████████████████████| 176 kB 57.3 MB/s \n",
            "\u001b[?25hCollecting ray[default]\n",
            "  Downloading ray-1.10.0-cp37-cp37m-manylinux2014_x86_64.whl (59.6 MB)\n",
            "\u001b[K     |████████████████████████████████| 59.6 MB 61 kB/s \n",
            "\u001b[?25hCollecting lz4\n",
            "  Downloading lz4-3.1.10-cp37-cp37m-manylinux2010_x86_64.whl (1.8 MB)\n",
            "\u001b[K     |████████████████████████████████| 1.8 MB 38.6 MB/s \n",
            "\u001b[?25hCollecting tensorboardX\n",
            "  Downloading tensorboardX-2.4.1-py2.py3-none-any.whl (124 kB)\n",
            "\u001b[K     |████████████████████████████████| 124 kB 59.3 MB/s \n",
            "\u001b[?25hCollecting gputil\n",
            "  Downloading GPUtil-1.4.0.tar.gz (5.5 kB)\n",
            "Collecting exchange_calendars\n",
            "  Downloading exchange_calendars-3.5.1.tar.gz (147 kB)\n",
            "\u001b[K     |████████████████████████████████| 147 kB 56.2 MB/s \n",
            "\u001b[?25hCollecting alpaca_trade_api\n",
            "  Downloading alpaca_trade_api-1.5.0-py3-none-any.whl (45 kB)\n",
            "\u001b[K     |████████████████████████████████| 45 kB 2.9 MB/s \n",
            "\u001b[?25hCollecting ccxt>=1.66.32\n",
            "  Downloading ccxt-1.72.37-py2.py3-none-any.whl (2.4 MB)\n",
            "\u001b[K     |████████████████████████████████| 2.4 MB 44.0 MB/s \n",
            "\u001b[?25hCollecting jqdatasdk\n",
            "  Downloading jqdatasdk-1.8.10-py3-none-any.whl (153 kB)\n",
            "\u001b[K     |████████████████████████████████| 153 kB 60.6 MB/s \n",
            "\u001b[?25hCollecting wrds\n",
            "  Downloading wrds-3.1.1-py3-none-any.whl (12 kB)\n",
            "Requirement already satisfied: pytest in /usr/local/lib/python3.7/dist-packages (from finrl==0.3.5) (3.6.4)\n",
            "Requirement already satisfied: setuptools>=41.4.0 in /usr/local/lib/python3.7/dist-packages (from finrl==0.3.5) (57.4.0)\n",
            "Requirement already satisfied: wheel>=0.33.6 in /usr/local/lib/python3.7/dist-packages (from finrl==0.3.5) (0.37.1)\n",
            "Collecting pre-commit\n",
            "  Downloading pre_commit-2.17.0-py2.py3-none-any.whl (195 kB)\n",
            "\u001b[K     |████████████████████████████████| 195 kB 52.1 MB/s \n",
            "\u001b[?25hCollecting pybullet\n",
            "  Downloading pybullet-3.2.1-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.whl (90.8 MB)\n",
            "\u001b[K     |████████████████████████████████| 90.8 MB 211 bytes/s \n",
            "\u001b[?25hRequirement already satisfied: torch in /usr/local/lib/python3.7/dist-packages (from elegantrl@ git+https://github.com/AI4Finance-Foundation/ElegantRL.git#egg=elegantrl->finrl==0.3.5) (1.10.0+cu111)\n",
            "Requirement already satisfied: opencv-python in /usr/local/lib/python3.7/dist-packages (from elegantrl@ git+https://github.com/AI4Finance-Foundation/ElegantRL.git#egg=elegantrl->finrl==0.3.5) (4.1.2.30)\n",
            "Collecting box2d-py\n",
            "  Downloading box2d_py-2.3.8-cp37-cp37m-manylinux1_x86_64.whl (448 kB)\n",
            "\u001b[K     |████████████████████████████████| 448 kB 44.1 MB/s \n",
            "\u001b[?25hRequirement already satisfied: ipython>=3.2.3 in /usr/local/lib/python3.7/dist-packages (from pyfolio@ git+https://github.com/quantopian/pyfolio.git#egg=pyfolio-0.9.2->finrl==0.3.5) (5.5.0)\n",
            "Requirement already satisfied: pytz>=2014.10 in /usr/local/lib/python3.7/dist-packages (from pyfolio@ git+https://github.com/quantopian/pyfolio.git#egg=pyfolio-0.9.2->finrl==0.3.5) (2018.9)\n",
            "Requirement already satisfied: scipy>=0.14.0 in /usr/local/lib/python3.7/dist-packages (from pyfolio@ git+https://github.com/quantopian/pyfolio.git#egg=pyfolio-0.9.2->finrl==0.3.5) (1.4.1)\n",
            "Requirement already satisfied: seaborn>=0.7.1 in /usr/local/lib/python3.7/dist-packages (from pyfolio@ git+https://github.com/quantopian/pyfolio.git#egg=pyfolio-0.9.2->finrl==0.3.5) (0.11.2)\n",
            "Collecting empyrical>=0.5.0\n",
            "  Downloading empyrical-0.5.5.tar.gz (52 kB)\n",
            "\u001b[K     |████████████████████████████████| 52 kB 1.3 MB/s \n",
            "\u001b[?25hRequirement already satisfied: requests>=2.18.4 in /usr/local/lib/python3.7/dist-packages (from ccxt>=1.66.32->finrl==0.3.5) (2.23.0)\n",
            "Collecting aiodns>=1.1.1\n",
            "  Downloading aiodns-3.0.0-py3-none-any.whl (5.0 kB)\n",
            "Collecting yarl==1.7.2\n",
            "  Downloading yarl-1.7.2-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (271 kB)\n",
            "\u001b[K     |████████████████████████████████| 271 kB 66.4 MB/s \n",
            "\u001b[?25hCollecting cryptography>=2.6.1\n",
            "  Downloading cryptography-36.0.1-cp36-abi3-manylinux_2_24_x86_64.whl (3.6 MB)\n",
            "\u001b[K     |████████████████████████████████| 3.6 MB 40.4 MB/s \n",
            "\u001b[?25hCollecting aiohttp>=3.8\n",
            "  Downloading aiohttp-3.8.1-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (1.1 MB)\n",
            "\u001b[K     |████████████████████████████████| 1.1 MB 36.1 MB/s \n",
            "\u001b[?25hRequirement already satisfied: certifi>=2018.1.18 in /usr/local/lib/python3.7/dist-packages (from ccxt>=1.66.32->finrl==0.3.5) (2021.10.8)\n",
            "Requirement already satisfied: idna>=2.0 in /usr/local/lib/python3.7/dist-packages (from yarl==1.7.2->ccxt>=1.66.32->finrl==0.3.5) (2.10)\n",
            "Collecting multidict>=4.0\n",
            "  Downloading multidict-6.0.2-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (94 kB)\n",
            "\u001b[K     |████████████████████████████████| 94 kB 2.5 MB/s \n",
            "\u001b[?25hRequirement already satisfied: typing-extensions>=3.7.4 in /usr/local/lib/python3.7/dist-packages (from yarl==1.7.2->ccxt>=1.66.32->finrl==0.3.5) (3.10.0.2)\n",
            "Collecting pycares>=4.0.0\n",
            "  Downloading pycares-4.1.2-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (291 kB)\n",
            "\u001b[K     |████████████████████████████████| 291 kB 49.3 MB/s \n",
            "\u001b[?25hCollecting frozenlist>=1.1.1\n",
            "  Downloading frozenlist-1.3.0-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (144 kB)\n",
            "\u001b[K     |████████████████████████████████| 144 kB 45.9 MB/s \n",
            "\u001b[?25hCollecting aiosignal>=1.1.2\n",
            "  Downloading aiosignal-1.2.0-py3-none-any.whl (8.2 kB)\n",
            "Requirement already satisfied: charset-normalizer<3.0,>=2.0 in /usr/local/lib/python3.7/dist-packages (from aiohttp>=3.8->ccxt>=1.66.32->finrl==0.3.5) (2.0.11)\n",
            "Requirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.7/dist-packages (from aiohttp>=3.8->ccxt>=1.66.32->finrl==0.3.5) (21.4.0)\n",
            "Collecting async-timeout<5.0,>=4.0.0a3\n",
            "  Downloading async_timeout-4.0.2-py3-none-any.whl (5.8 kB)\n",
            "Collecting asynctest==0.13.0\n",
            "  Downloading asynctest-0.13.0-py3-none-any.whl (26 kB)\n",
            "Requirement already satisfied: cffi>=1.12 in /usr/local/lib/python3.7/dist-packages (from cryptography>=2.6.1->ccxt>=1.66.32->finrl==0.3.5) (1.15.0)\n",
            "Requirement already satisfied: pycparser in /usr/local/lib/python3.7/dist-packages (from cffi>=1.12->cryptography>=2.6.1->ccxt>=1.66.32->finrl==0.3.5) (2.21)\n",
            "Requirement already satisfied: pandas-datareader>=0.2 in /usr/local/lib/python3.7/dist-packages (from empyrical>=0.5.0->pyfolio@ git+https://github.com/quantopian/pyfolio.git#egg=pyfolio-0.9.2->finrl==0.3.5) (0.9.0)\n",
            "Requirement already satisfied: cloudpickle<1.7.0,>=1.2.0 in /usr/local/lib/python3.7/dist-packages (from gym>=0.17->finrl==0.3.5) (1.3.0)\n",
            "Requirement already satisfied: pyglet<=1.5.0,>=1.4.0 in /usr/local/lib/python3.7/dist-packages (from gym>=0.17->finrl==0.3.5) (1.5.0)\n",
            "Requirement already satisfied: prompt-toolkit<2.0.0,>=1.0.4 in /usr/local/lib/python3.7/dist-packages (from ipython>=3.2.3->pyfolio@ git+https://github.com/quantopian/pyfolio.git#egg=pyfolio-0.9.2->finrl==0.3.5) (1.0.18)\n",
            "Requirement already satisfied: decorator in /usr/local/lib/python3.7/dist-packages (from ipython>=3.2.3->pyfolio@ git+https://github.com/quantopian/pyfolio.git#egg=pyfolio-0.9.2->finrl==0.3.5) (4.4.2)\n",
            "Requirement already satisfied: pexpect in /usr/local/lib/python3.7/dist-packages (from ipython>=3.2.3->pyfolio@ git+https://github.com/quantopian/pyfolio.git#egg=pyfolio-0.9.2->finrl==0.3.5) (4.8.0)\n",
            "Requirement already satisfied: pickleshare in /usr/local/lib/python3.7/dist-packages (from ipython>=3.2.3->pyfolio@ git+https://github.com/quantopian/pyfolio.git#egg=pyfolio-0.9.2->finrl==0.3.5) (0.7.5)\n",
            "Requirement already satisfied: pygments in /usr/local/lib/python3.7/dist-packages (from ipython>=3.2.3->pyfolio@ git+https://github.com/quantopian/pyfolio.git#egg=pyfolio-0.9.2->finrl==0.3.5) (2.6.1)\n",
            "Requirement already satisfied: simplegeneric>0.8 in /usr/local/lib/python3.7/dist-packages (from ipython>=3.2.3->pyfolio@ git+https://github.com/quantopian/pyfolio.git#egg=pyfolio-0.9.2->finrl==0.3.5) (0.8.1)\n",
            "Requirement already satisfied: traitlets>=4.2 in /usr/local/lib/python3.7/dist-packages (from ipython>=3.2.3->pyfolio@ git+https://github.com/quantopian/pyfolio.git#egg=pyfolio-0.9.2->finrl==0.3.5) (5.1.1)\n",
            "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.7/dist-packages (from matplotlib->finrl==0.3.5) (0.11.0)\n",
            "Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib->finrl==0.3.5) (3.0.7)\n",
            "Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib->finrl==0.3.5) (1.3.2)\n",
            "Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib->finrl==0.3.5) (2.8.2)\n",
            "Requirement already satisfied: lxml in /usr/local/lib/python3.7/dist-packages (from pandas-datareader>=0.2->empyrical>=0.5.0->pyfolio@ git+https://github.com/quantopian/pyfolio.git#egg=pyfolio-0.9.2->finrl==0.3.5) (4.2.6)\n",
            "Requirement already satisfied: wcwidth in /usr/local/lib/python3.7/dist-packages (from prompt-toolkit<2.0.0,>=1.0.4->ipython>=3.2.3->pyfolio@ git+https://github.com/quantopian/pyfolio.git#egg=pyfolio-0.9.2->finrl==0.3.5) (0.2.5)\n",
            "Requirement already satisfied: six>=1.9.0 in /usr/local/lib/python3.7/dist-packages (from prompt-toolkit<2.0.0,>=1.0.4->ipython>=3.2.3->pyfolio@ git+https://github.com/quantopian/pyfolio.git#egg=pyfolio-0.9.2->finrl==0.3.5) (1.15.0)\n",
            "Requirement already satisfied: future in /usr/local/lib/python3.7/dist-packages (from pyglet<=1.5.0,>=1.4.0->gym>=0.17->finrl==0.3.5) (0.16.0)\n",
            "Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests>=2.18.4->ccxt>=1.66.32->finrl==0.3.5) (1.24.3)\n",
            "Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests>=2.18.4->ccxt>=1.66.32->finrl==0.3.5) (3.0.4)\n",
            "Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.7/dist-packages (from scikit-learn>=0.21.0->finrl==0.3.5) (1.1.0)\n",
            "Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from scikit-learn>=0.21.0->finrl==0.3.5) (3.1.0)\n",
            "Collecting websockets<10,>=8.0\n",
            "  Downloading websockets-9.1-cp37-cp37m-manylinux2010_x86_64.whl (103 kB)\n",
            "\u001b[K     |████████████████████████████████| 103 kB 44.8 MB/s \n",
            "\u001b[?25hCollecting msgpack==1.0.2\n",
            "  Downloading msgpack-1.0.2-cp37-cp37m-manylinux1_x86_64.whl (273 kB)\n",
            "\u001b[K     |████████████████████████████████| 273 kB 49.3 MB/s \n",
            "\u001b[?25hCollecting PyYAML==5.4.1\n",
            "  Downloading PyYAML-5.4.1-cp37-cp37m-manylinux1_x86_64.whl (636 kB)\n",
            "\u001b[K     |████████████████████████████████| 636 kB 43.9 MB/s \n",
            "\u001b[?25hCollecting websocket-client<2,>=0.56.0\n",
            "  Downloading websocket_client-1.2.3-py3-none-any.whl (53 kB)\n",
            "\u001b[K     |████████████████████████████████| 53 kB 1.4 MB/s \n",
            "\u001b[?25hCollecting alpaca_trade_api\n",
            "  Downloading alpaca_trade_api-1.4.3-py3-none-any.whl (36 kB)\n",
            "  Downloading alpaca_trade_api-1.4.2-py3-none-any.whl (36 kB)\n",
            "  Downloading alpaca_trade_api-1.4.1-py3-none-any.whl (36 kB)\n",
            "  Downloading alpaca_trade_api-1.4.0-py3-none-any.whl (34 kB)\n",
            "  Downloading alpaca_trade_api-1.3.0-py3-none-any.whl (43 kB)\n",
            "\u001b[K     |████████████████████████████████| 43 kB 1.1 MB/s \n",
            "\u001b[?25h  Downloading alpaca_trade_api-1.2.3-py3-none-any.whl (40 kB)\n",
            "\u001b[K     |████████████████████████████████| 40 kB 3.3 MB/s \n",
            "\u001b[?25hCollecting pyluach\n",
            "  Downloading pyluach-1.3.0-py3-none-any.whl (17 kB)\n",
            "Requirement already satisfied: toolz in /usr/local/lib/python3.7/dist-packages (from exchange_calendars->finrl==0.3.5) (0.11.2)\n",
            "Requirement already satisfied: korean_lunar_calendar in /usr/local/lib/python3.7/dist-packages (from exchange_calendars->finrl==0.3.5) (0.2.1)\n",
            "Requirement already satisfied: SQLAlchemy>=1.2.8 in /usr/local/lib/python3.7/dist-packages (from jqdatasdk->finrl==0.3.5) (1.4.31)\n",
            "Collecting thriftpy2>=0.3.9\n",
            "  Downloading thriftpy2-0.4.14.tar.gz (361 kB)\n",
            "\u001b[K     |████████████████████████████████| 361 kB 46.1 MB/s \n",
            "\u001b[?25hCollecting pymysql>=0.7.6\n",
            "  Downloading PyMySQL-1.0.2-py3-none-any.whl (43 kB)\n",
            "\u001b[K     |████████████████████████████████| 43 kB 1.6 MB/s \n",
            "\u001b[?25hRequirement already satisfied: greenlet!=0.4.17 in /usr/local/lib/python3.7/dist-packages (from SQLAlchemy>=1.2.8->jqdatasdk->finrl==0.3.5) (1.1.2)\n",
            "Requirement already satisfied: importlib-metadata in /usr/local/lib/python3.7/dist-packages (from SQLAlchemy>=1.2.8->jqdatasdk->finrl==0.3.5) (4.10.1)\n",
            "Collecting ply<4.0,>=3.4\n",
            "  Downloading ply-3.11-py2.py3-none-any.whl (49 kB)\n",
            "\u001b[K     |████████████████████████████████| 49 kB 4.5 MB/s \n",
            "\u001b[?25hRequirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata->SQLAlchemy>=1.2.8->jqdatasdk->finrl==0.3.5) (3.7.0)\n",
            "Requirement already satisfied: ptyprocess>=0.5 in /usr/local/lib/python3.7/dist-packages (from pexpect->ipython>=3.2.3->pyfolio@ git+https://github.com/quantopian/pyfolio.git#egg=pyfolio-0.9.2->finrl==0.3.5) (0.7.0)\n",
            "Collecting pyyaml>=5.1\n",
            "  Downloading PyYAML-6.0-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (596 kB)\n",
            "\u001b[K     |████████████████████████████████| 596 kB 25.4 MB/s \n",
            "\u001b[?25hCollecting virtualenv>=20.0.8\n",
            "  Downloading virtualenv-20.13.1-py2.py3-none-any.whl (8.6 MB)\n",
            "\u001b[K     |████████████████████████████████| 8.6 MB 30.9 MB/s \n",
            "\u001b[?25hCollecting nodeenv>=0.11.1\n",
            "  Downloading nodeenv-1.6.0-py2.py3-none-any.whl (21 kB)\n",
            "Requirement already satisfied: toml in /usr/local/lib/python3.7/dist-packages (from pre-commit->finrl==0.3.5) (0.10.2)\n",
            "Collecting identify>=1.0.0\n",
            "  Downloading identify-2.4.8-py2.py3-none-any.whl (98 kB)\n",
            "\u001b[K     |████████████████████████████████| 98 kB 6.6 MB/s \n",
            "\u001b[?25hCollecting cfgv>=2.0.0\n",
            "  Downloading cfgv-3.3.1-py2.py3-none-any.whl (7.3 kB)\n",
            "Collecting platformdirs<3,>=2\n",
            "  Downloading platformdirs-2.4.1-py3-none-any.whl (14 kB)\n",
            "Collecting distlib<1,>=0.3.1\n",
            "  Downloading distlib-0.3.4-py2.py3-none-any.whl (461 kB)\n",
            "\u001b[K     |████████████████████████████████| 461 kB 56.0 MB/s \n",
            "\u001b[?25hRequirement already satisfied: filelock<4,>=3.2 in /usr/local/lib/python3.7/dist-packages (from virtualenv>=20.0.8->pre-commit->finrl==0.3.5) (3.4.2)\n",
            "Requirement already satisfied: pluggy<0.8,>=0.5 in /usr/local/lib/python3.7/dist-packages (from pytest->finrl==0.3.5) (0.7.1)\n",
            "Requirement already satisfied: py>=1.5.0 in /usr/local/lib/python3.7/dist-packages (from pytest->finrl==0.3.5) (1.11.0)\n",
            "Requirement already satisfied: atomicwrites>=1.0 in /usr/local/lib/python3.7/dist-packages (from pytest->finrl==0.3.5) (1.4.0)\n",
            "Requirement already satisfied: more-itertools>=4.0.0 in /usr/local/lib/python3.7/dist-packages (from pytest->finrl==0.3.5) (8.12.0)\n",
            "Requirement already satisfied: jsonschema in /usr/local/lib/python3.7/dist-packages (from ray[default]->finrl==0.3.5) (4.3.3)\n",
            "Requirement already satisfied: click>=7.0 in /usr/local/lib/python3.7/dist-packages (from ray[default]->finrl==0.3.5) (7.1.2)\n",
            "Collecting redis>=3.5.0\n",
            "  Downloading redis-4.1.2-py3-none-any.whl (173 kB)\n",
            "\u001b[K     |████████████████████████████████| 173 kB 44.4 MB/s \n",
            "\u001b[?25hRequirement already satisfied: protobuf>=3.15.3 in /usr/local/lib/python3.7/dist-packages (from ray[default]->finrl==0.3.5) (3.17.3)\n",
            "Requirement already satisfied: grpcio>=1.28.1 in /usr/local/lib/python3.7/dist-packages (from ray[default]->finrl==0.3.5) (1.43.0)\n",
            "Collecting aiohttp-cors\n",
            "  Downloading aiohttp_cors-0.7.0-py3-none-any.whl (27 kB)\n",
            "Collecting gpustat>=1.0.0b1\n",
            "  Downloading gpustat-1.0.0b1.tar.gz (82 kB)\n",
            "\u001b[K     |████████████████████████████████| 82 kB 181 kB/s \n",
            "\u001b[?25hCollecting opencensus\n",
            "  Downloading opencensus-0.8.0-py2.py3-none-any.whl (128 kB)\n",
            "\u001b[K     |████████████████████████████████| 128 kB 42.7 MB/s \n",
            "\u001b[?25hCollecting colorful\n",
            "  Downloading colorful-0.5.4-py2.py3-none-any.whl (201 kB)\n",
            "\u001b[K     |████████████████████████████████| 201 kB 68.1 MB/s \n",
            "\u001b[?25hCollecting py-spy>=0.2.0\n",
            "  Downloading py_spy-0.3.11-py2.py3-none-manylinux_2_5_x86_64.manylinux1_x86_64.whl (3.0 MB)\n",
            "\u001b[K     |████████████████████████████████| 3.0 MB 42.9 MB/s \n",
            "\u001b[?25hRequirement already satisfied: smart-open in /usr/local/lib/python3.7/dist-packages (from ray[default]->finrl==0.3.5) (5.2.1)\n",
            "Collecting aioredis<2\n",
            "  Downloading aioredis-1.3.1-py3-none-any.whl (65 kB)\n",
            "\u001b[K     |████████████████████████████████| 65 kB 2.8 MB/s \n",
            "\u001b[?25hRequirement already satisfied: prometheus-client>=0.7.1 in /usr/local/lib/python3.7/dist-packages (from ray[default]->finrl==0.3.5) (0.13.1)\n",
            "Collecting hiredis\n",
            "  Downloading hiredis-2.0.0-cp37-cp37m-manylinux2010_x86_64.whl (85 kB)\n",
            "\u001b[K     |████████████████████████████████| 85 kB 3.7 MB/s \n",
            "\u001b[?25hRequirement already satisfied: nvidia-ml-py3>=7.352.0 in /usr/local/lib/python3.7/dist-packages (from gpustat>=1.0.0b1->ray[default]->finrl==0.3.5) (7.352.0)\n",
            "Requirement already satisfied: psutil in /usr/local/lib/python3.7/dist-packages (from gpustat>=1.0.0b1->ray[default]->finrl==0.3.5) (5.4.8)\n",
            "Collecting blessed>=1.17.1\n",
            "  Downloading blessed-1.19.1-py2.py3-none-any.whl (58 kB)\n",
            "\u001b[K     |████████████████████████████████| 58 kB 4.9 MB/s \n",
            "\u001b[?25hRequirement already satisfied: packaging>=20.4 in /usr/local/lib/python3.7/dist-packages (from redis>=3.5.0->ray[default]->finrl==0.3.5) (21.3)\n",
            "Collecting deprecated>=1.2.3\n",
            "  Downloading Deprecated-1.2.13-py2.py3-none-any.whl (9.6 kB)\n",
            "Requirement already satisfied: wrapt<2,>=1.10 in /usr/local/lib/python3.7/dist-packages (from deprecated>=1.2.3->redis>=3.5.0->ray[default]->finrl==0.3.5) (1.13.3)\n",
            "Requirement already satisfied: importlib-resources>=1.4.0 in /usr/local/lib/python3.7/dist-packages (from jsonschema->ray[default]->finrl==0.3.5) (5.4.0)\n",
            "Requirement already satisfied: pyrsistent!=0.17.0,!=0.17.1,!=0.17.2,>=0.14.0 in /usr/local/lib/python3.7/dist-packages (from jsonschema->ray[default]->finrl==0.3.5) (0.18.1)\n",
            "Collecting opencensus-context==0.1.2\n",
            "  Downloading opencensus_context-0.1.2-py2.py3-none-any.whl (4.4 kB)\n",
            "Requirement already satisfied: google-api-core<3.0.0,>=1.0.0 in /usr/local/lib/python3.7/dist-packages (from opencensus->ray[default]->finrl==0.3.5) (1.26.3)\n",
            "Requirement already satisfied: google-auth<2.0dev,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from google-api-core<3.0.0,>=1.0.0->opencensus->ray[default]->finrl==0.3.5) (1.35.0)\n",
            "Requirement already satisfied: googleapis-common-protos<2.0dev,>=1.6.0 in /usr/local/lib/python3.7/dist-packages (from google-api-core<3.0.0,>=1.0.0->opencensus->ray[default]->finrl==0.3.5) (1.54.0)\n",
            "Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.7/dist-packages (from google-auth<2.0dev,>=1.21.1->google-api-core<3.0.0,>=1.0.0->opencensus->ray[default]->finrl==0.3.5) (0.2.8)\n",
            "Requirement already satisfied: rsa<5,>=3.1.4 in /usr/local/lib/python3.7/dist-packages (from google-auth<2.0dev,>=1.21.1->google-api-core<3.0.0,>=1.0.0->opencensus->ray[default]->finrl==0.3.5) (4.8)\n",
            "Requirement already satisfied: cachetools<5.0,>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from google-auth<2.0dev,>=1.21.1->google-api-core<3.0.0,>=1.0.0->opencensus->ray[default]->finrl==0.3.5) (4.2.4)\n",
            "Requirement already satisfied: pyasn1<0.5.0,>=0.4.6 in /usr/local/lib/python3.7/dist-packages (from pyasn1-modules>=0.2.1->google-auth<2.0dev,>=1.21.1->google-api-core<3.0.0,>=1.0.0->opencensus->ray[default]->finrl==0.3.5) (0.4.8)\n",
            "Requirement already satisfied: tabulate in /usr/local/lib/python3.7/dist-packages (from ray[default]->finrl==0.3.5) (0.8.9)\n",
            "Requirement already satisfied: tensorboard>=2.2.0 in /usr/local/lib/python3.7/dist-packages (from stable-baselines3[extra]->finrl==0.3.5) (2.7.0)\n",
            "Collecting atari-py==0.2.6\n",
            "  Downloading atari_py-0.2.6-cp37-cp37m-manylinux1_x86_64.whl (2.8 MB)\n",
            "\u001b[K     |████████████████████████████████| 2.8 MB 38.7 MB/s \n",
            "\u001b[?25hRequirement already satisfied: pillow in /usr/local/lib/python3.7/dist-packages (from stable-baselines3[extra]->finrl==0.3.5) (7.1.2)\n",
            "Requirement already satisfied: absl-py>=0.4 in /usr/local/lib/python3.7/dist-packages (from tensorboard>=2.2.0->stable-baselines3[extra]->finrl==0.3.5) (1.0.0)\n",
            "Requirement already satisfied: tensorboard-data-server<0.7.0,>=0.6.0 in /usr/local/lib/python3.7/dist-packages (from tensorboard>=2.2.0->stable-baselines3[extra]->finrl==0.3.5) (0.6.1)\n",
            "Requirement already satisfied: werkzeug>=0.11.15 in /usr/local/lib/python3.7/dist-packages (from tensorboard>=2.2.0->stable-baselines3[extra]->finrl==0.3.5) (1.0.1)\n",
            "Requirement already satisfied: google-auth-oauthlib<0.5,>=0.4.1 in /usr/local/lib/python3.7/dist-packages (from tensorboard>=2.2.0->stable-baselines3[extra]->finrl==0.3.5) (0.4.6)\n",
            "Requirement already satisfied: tensorboard-plugin-wit>=1.6.0 in /usr/local/lib/python3.7/dist-packages (from tensorboard>=2.2.0->stable-baselines3[extra]->finrl==0.3.5) (1.8.1)\n",
            "Requirement already satisfied: markdown>=2.6.8 in /usr/local/lib/python3.7/dist-packages (from tensorboard>=2.2.0->stable-baselines3[extra]->finrl==0.3.5) (3.3.6)\n",
            "Requirement already satisfied: requests-oauthlib>=0.7.0 in /usr/local/lib/python3.7/dist-packages (from google-auth-oauthlib<0.5,>=0.4.1->tensorboard>=2.2.0->stable-baselines3[extra]->finrl==0.3.5) (1.3.1)\n",
            "Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.7/dist-packages (from requests-oauthlib>=0.7.0->google-auth-oauthlib<0.5,>=0.4.1->tensorboard>=2.2.0->stable-baselines3[extra]->finrl==0.3.5) (3.2.0)\n",
            "Collecting psycopg2-binary\n",
            "  Downloading psycopg2_binary-2.9.3-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.0 MB)\n",
            "\u001b[K     |████████████████████████████████| 3.0 MB 53.3 MB/s \n",
            "\u001b[?25hCollecting mock\n",
            "  Downloading mock-4.0.3-py3-none-any.whl (28 kB)\n",
            "Collecting requests>=2.18.4\n",
            "  Downloading requests-2.27.1-py2.py3-none-any.whl (63 kB)\n",
            "\u001b[K     |████████████████████████████████| 63 kB 1.5 MB/s \n",
            "\u001b[?25hCollecting lxml\n",
            "  Downloading lxml-4.7.1-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl (6.4 MB)\n",
            "\u001b[K     |████████████████████████████████| 6.4 MB 40.6 MB/s \n",
            "\u001b[?25hRequirement already satisfied: multitasking>=0.0.7 in /usr/local/lib/python3.7/dist-packages (from yfinance->finrl==0.3.5) (0.0.10)\n",
            "\u001b[33mWARNING: The candidate selected for download or install is a yanked version: 'atari-py' candidate (version 0.2.6 at https://files.pythonhosted.org/packages/8f/ba/1d22e9d2f332f07aaa57041f5dd569c2cb40a92bd6374a0b743ec3dfae97/atari_py-0.2.6-cp37-cp37m-manylinux1_x86_64.whl#sha256=d9e2c25d39783867c2f29d1dd9d3a659fc56036456d07dc9efe8bd7bb31a07d7 (from https://pypi.org/simple/atari-py/))\n",
            "Reason for being yanked: re-release with new wheels\u001b[0m\n",
            "Building wheels for collected packages: finrl, elegantrl, pyfolio, empyrical, exchange-calendars, gputil, thriftpy2, gpustat\n",
            "  Building wheel for finrl (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for finrl: filename=finrl-0.3.5-py3-none-any.whl size=3885394 sha256=b03fd8c399c11a743b5a37f738fc9e76b7f26c7d83abbe2cd8263ca35b3e725c\n",
            "  Stored in directory: /tmp/pip-ephem-wheel-cache-dfgl9268/wheels/17/ff/bd/1bc602a0352762b0b24041b88536d803ae343ed0a711fcf55e\n",
            "  Building wheel for elegantrl (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for elegantrl: filename=elegantrl-0.3.3-py3-none-any.whl size=187885 sha256=2a80dd9b8f74e9ec811d4c55804a4f5022e8fc47faebc3f805fa755350322137\n",
            "  Stored in directory: /tmp/pip-ephem-wheel-cache-dfgl9268/wheels/99/85/5e/86cb3a9f47adfca5e248295e93113e1b298d60883126d62c84\n",
            "  Building wheel for pyfolio (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for pyfolio: filename=pyfolio-0.9.2+75.g4b901f6-py3-none-any.whl size=75774 sha256=21e6b159d5f0242ce3c5637b756a4862fd23ad43627e54999b7b0aa2a8f85676\n",
            "  Stored in directory: /tmp/pip-ephem-wheel-cache-dfgl9268/wheels/ef/09/e5/2c1bf37c050d22557c080deb1be986d06424627c04aeca19b9\n",
            "  Building wheel for empyrical (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for empyrical: filename=empyrical-0.5.5-py3-none-any.whl size=39780 sha256=4fd70285e8d489ee812834d6876e7911be6b9ea246f144835beb752c48d5dd78\n",
            "  Stored in directory: /root/.cache/pip/wheels/d9/91/4b/654fcff57477efcf149eaca236da2fce991526cbab431bf312\n",
            "  Building wheel for exchange-calendars (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for exchange-calendars: filename=exchange_calendars-3.5.1-py3-none-any.whl size=179603 sha256=722848f717b3f131762f25367864fa9f2038765da1e09c980dab57968c475609\n",
            "  Stored in directory: /root/.cache/pip/wheels/23/3c/5e/daa68c2efa75e621711c5b0a4eb50e0c338f98cfc00a883fb3\n",
            "  Building wheel for gputil (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for gputil: filename=GPUtil-1.4.0-py3-none-any.whl size=7411 sha256=1a136480af182bd639ce7b57ac84672eb2de8dd36c1644ac59307dcd15e8d938\n",
            "  Stored in directory: /root/.cache/pip/wheels/6e/f8/83/534c52482d6da64622ddbf72cd93c35d2ef2881b78fd08ff0c\n",
            "  Building wheel for thriftpy2 (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for thriftpy2: filename=thriftpy2-0.4.14-cp37-cp37m-linux_x86_64.whl size=944298 sha256=7a18cefc3037a730f6730d67d43ea910cb4d069002e8f2df7baf93a4cf8f1ae8\n",
            "  Stored in directory: /root/.cache/pip/wheels/2a/f5/49/9c0d851aa64b58db72883cf9393cc824d536bdf13f5c83cff4\n",
            "  Building wheel for gpustat (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for gpustat: filename=gpustat-1.0.0b1-py3-none-any.whl size=15979 sha256=9ea6c7610030a603eb479ebf88eb862deff4fcf5ae8988a9282d5d54aabb4451\n",
            "  Stored in directory: /root/.cache/pip/wheels/1a/16/e2/3e2437fba4c4b6a97a97bd96fce5d14e66cff5c4966fb1cc8c\n",
            "Successfully built finrl elegantrl pyfolio empyrical exchange-calendars gputil thriftpy2 gpustat\n",
            "Installing collected packages: requests, multidict, frozenlist, yarl, lxml, deprecated, asynctest, async-timeout, aiosignal, redis, pyyaml, pycares, ply, platformdirs, opencensus-context, msgpack, hiredis, distlib, blessed, aiohttp, websockets, websocket-client, virtualenv, thriftpy2, tensorboardX, stable-baselines3, ray, pymysql, pyluach, pybullet, py-spy, psycopg2-binary, opencensus, nodeenv, mock, identify, gpustat, empyrical, cryptography, colorful, cfgv, box2d-py, atari-py, aioredis, aiohttp-cors, aiodns, yfinance, wrds, stockstats, pyfolio, pre-commit, lz4, jqdatasdk, gputil, exchange-calendars, elegantrl, ccxt, alpaca-trade-api, finrl\n",
            "  Attempting uninstall: requests\n",
            "    Found existing installation: requests 2.23.0\n",
            "    Uninstalling requests-2.23.0:\n",
            "      Successfully uninstalled requests-2.23.0\n",
            "  Attempting uninstall: lxml\n",
            "    Found existing installation: lxml 4.2.6\n",
            "    Uninstalling lxml-4.2.6:\n",
            "      Successfully uninstalled lxml-4.2.6\n",
            "  Attempting uninstall: pyyaml\n",
            "    Found existing installation: PyYAML 3.13\n",
            "    Uninstalling PyYAML-3.13:\n",
            "      Successfully uninstalled PyYAML-3.13\n",
            "  Attempting uninstall: msgpack\n",
            "    Found existing installation: msgpack 1.0.3\n",
            "    Uninstalling msgpack-1.0.3:\n",
            "      Successfully uninstalled msgpack-1.0.3\n",
            "  Attempting uninstall: atari-py\n",
            "    Found existing installation: atari-py 0.2.9\n",
            "    Uninstalling atari-py-0.2.9:\n",
            "      Successfully uninstalled atari-py-0.2.9\n",
            "\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n",
            "google-colab 1.0.0 requires requests~=2.23.0, but you have requests 2.27.1 which is incompatible.\n",
            "datascience 0.10.6 requires folium==0.2.1, but you have folium 0.8.3 which is incompatible.\u001b[0m\n",
            "Successfully installed aiodns-3.0.0 aiohttp-3.8.1 aiohttp-cors-0.7.0 aioredis-1.3.1 aiosignal-1.2.0 alpaca-trade-api-1.2.3 async-timeout-4.0.2 asynctest-0.13.0 atari-py-0.2.6 blessed-1.19.1 box2d-py-2.3.8 ccxt-1.72.37 cfgv-3.3.1 colorful-0.5.4 cryptography-36.0.1 deprecated-1.2.13 distlib-0.3.4 elegantrl-0.3.3 empyrical-0.5.5 exchange-calendars-3.5.1 finrl-0.3.5 frozenlist-1.3.0 gpustat-1.0.0b1 gputil-1.4.0 hiredis-2.0.0 identify-2.4.8 jqdatasdk-1.8.10 lxml-4.7.1 lz4-3.1.10 mock-4.0.3 msgpack-1.0.2 multidict-6.0.2 nodeenv-1.6.0 opencensus-0.8.0 opencensus-context-0.1.2 platformdirs-2.4.1 ply-3.11 pre-commit-2.17.0 psycopg2-binary-2.9.3 py-spy-0.3.11 pybullet-3.2.1 pycares-4.1.2 pyfolio-0.9.2+75.g4b901f6 pyluach-1.3.0 pymysql-1.0.2 pyyaml-6.0 ray-1.10.0 redis-4.1.2 requests-2.27.1 stable-baselines3-1.4.0 stockstats-0.4.1 tensorboardX-2.4.1 thriftpy2-0.4.14 virtualenv-20.13.1 websocket-client-1.2.3 websockets-9.1 wrds-3.1.1 yarl-1.7.2 yfinance-0.1.70\n"
          ]
        }
      ],
      "source": [
        "# ## install finrl library\n",
        "!pip install git+https://github.com/AI4Finance-LLC/FinRL-Library.git"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "osBHhVysOEzi"
      },
      "source": [
        "\n",
        "<a id='1.2'></a>\n",
        "## 2.2. Check if the additional packages needed are present, if not install them. \n",
        "* Yahoo Finance API\n",
        "* pandas\n",
        "* numpy\n",
        "* matplotlib\n",
        "* stockstats\n",
        "* OpenAI gym\n",
        "* stable-baselines\n",
        "* tensorflow\n",
        "* pyfolio"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "nGv01K8Sh1hn"
      },
      "source": [
        "<a id='1.3'></a>\n",
        "## 2.3. Import Packages"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "EeMK7Uentj1V"
      },
      "outputs": [],
      "source": [
        "import warnings\n",
        "warnings.filterwarnings(\"ignore\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "lPqeTTwoh1hn"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib\n",
        "import matplotlib.pyplot as plt\n",
        "# matplotlib.use('Agg')\n",
        "import datetime\n",
        "\n",
        "%matplotlib inline\n",
        "from finrl.apps import config\n",
        "from finrl.finrl_meta.preprocessor.yahoodownloader import YahooDownloader\n",
        "from finrl.finrl_meta.preprocessor.preprocessors import FeatureEngineer, data_split\n",
        "from finrl.finrl_meta.env_stock_trading.env_stocktrading import StockTradingEnv\n",
        "from finrl.drl_agents.stablebaselines3.models import DRLAgent,DRLEnsembleAgent\n",
        "from finrl.plot import backtest_stats, backtest_plot, get_daily_return, get_baseline\n",
        "\n",
        "from pprint import pprint\n",
        "\n",
        "import sys\n",
        "sys.path.append(\"../FinRL-Library\")\n",
        "\n",
        "import itertools"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "T2owTj985RW4"
      },
      "source": [
        "<a id='1.4'></a>\n",
        "## 2.4. Create Folders"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "w9A8CN5R5PuZ"
      },
      "outputs": [],
      "source": [
        "import os\n",
        "if not os.path.exists(\"./\" + config.DATA_SAVE_DIR):\n",
        "    os.makedirs(\"./\" + config.DATA_SAVE_DIR)\n",
        "if not os.path.exists(\"./\" + config.TRAINED_MODEL_DIR):\n",
        "    os.makedirs(\"./\" + config.TRAINED_MODEL_DIR)\n",
        "if not os.path.exists(\"./\" + config.TENSORBOARD_LOG_DIR):\n",
        "    os.makedirs(\"./\" + config.TENSORBOARD_LOG_DIR)\n",
        "if not os.path.exists(\"./\" + config.RESULTS_DIR):\n",
        "    os.makedirs(\"./\" + config.RESULTS_DIR)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "A289rQWMh1hq"
      },
      "source": [
        "<a id='2'></a>\n",
        "# Part 3. Download Data\n",
        "Yahoo Finance is a website that provides stock data, financial news, financial reports, etc. All the data provided by Yahoo Finance is free.\n",
        "* FinRL uses a class **YahooDownloader** to fetch data from Yahoo Finance API\n",
        "* Call Limit: Using the Public API (without authentication), you are limited to 2,000 requests per hour per IP (or up to a total of 48,000 requests a day).\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "NPeQ7iS-LoMm"
      },
      "source": [
        "\n",
        "\n",
        "-----\n",
        "class YahooDownloader:\n",
        "    Provides methods for retrieving daily stock data from\n",
        "    Yahoo Finance API\n",
        "\n",
        "    Attributes\n",
        "    ----------\n",
        "        start_date : str\n",
        "            start date of the data (modified from config.py)\n",
        "        end_date : str\n",
        "            end date of the data (modified from config.py)\n",
        "        ticker_list : list\n",
        "            a list of stock tickers (modified from config.py)\n",
        "\n",
        "    Methods\n",
        "    -------\n",
        "    fetch_data()\n",
        "        Fetches data from yahoo API\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "h3XJnvrbLp-C"
      },
      "outputs": [],
      "source": [
        "# from config.py start_date is a string\n",
        "config.START_DATE = '2008-01-01'"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "JzqRRTOX6aFu",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f7a4af17-2f54-4ff9-856d-d1249df5c7e2"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "['AXP', 'AMGN', 'AAPL', 'BA', 'CAT', 'CSCO', 'CVX', 'GS', 'HD', 'HON', 'IBM', 'INTC', 'JNJ', 'KO', 'JPM', 'MCD', 'MMM', 'MRK', 'MSFT', 'NKE', 'PG', 'TRV', 'UNH', 'CRM', 'VZ', 'V', 'WBA', 'WMT', 'DIS', 'DOW']\n"
          ]
        }
      ],
      "source": [
        "print(config.DOW_30_TICKER)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "yCKm4om-s9kE",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "86537c2a-dac9-461e-ce48-fcd3dc86eb45"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[*********************100%***********************]  1 of 1 completed\n",
            "[*********************100%***********************]  1 of 1 completed\n",
            "[*********************100%***********************]  1 of 1 completed\n",
            "[*********************100%***********************]  1 of 1 completed\n",
            "[*********************100%***********************]  1 of 1 completed\n",
            "[*********************100%***********************]  1 of 1 completed\n",
            "[*********************100%***********************]  1 of 1 completed\n",
            "[*********************100%***********************]  1 of 1 completed\n",
            "[*********************100%***********************]  1 of 1 completed\n",
            "[*********************100%***********************]  1 of 1 completed\n",
            "[*********************100%***********************]  1 of 1 completed\n",
            "[*********************100%***********************]  1 of 1 completed\n",
            "[*********************100%***********************]  1 of 1 completed\n",
            "[*********************100%***********************]  1 of 1 completed\n",
            "[*********************100%***********************]  1 of 1 completed\n",
            "[*********************100%***********************]  1 of 1 completed\n",
            "[*********************100%***********************]  1 of 1 completed\n",
            "[*********************100%***********************]  1 of 1 completed\n",
            "[*********************100%***********************]  1 of 1 completed\n",
            "[*********************100%***********************]  1 of 1 completed\n",
            "[*********************100%***********************]  1 of 1 completed\n",
            "[*********************100%***********************]  1 of 1 completed\n",
            "[*********************100%***********************]  1 of 1 completed\n",
            "[*********************100%***********************]  1 of 1 completed\n",
            "[*********************100%***********************]  1 of 1 completed\n",
            "[*********************100%***********************]  1 of 1 completed\n",
            "[*********************100%***********************]  1 of 1 completed\n",
            "[*********************100%***********************]  1 of 1 completed\n",
            "[*********************100%***********************]  1 of 1 completed\n",
            "[*********************100%***********************]  1 of 1 completed\n",
            "Shape of DataFrame:  (101615, 8)\n"
          ]
        }
      ],
      "source": [
        "df = YahooDownloader(start_date = '2008-01-01',\n",
        "                     end_date = '2021-10-31',\n",
        "                     ticker_list = config.DOW_30_TICKER).fetch_data()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "GiRuFOTOtj1Y",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "outputId": "9260a803-9ecc-4037-d43d-85b42dd1de62"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-9fc193fd-5c05-4eff-bda5-6b1d27a32bf0\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>date</th>\n",
              "      <th>open</th>\n",
              "      <th>high</th>\n",
              "      <th>low</th>\n",
              "      <th>close</th>\n",
              "      <th>volume</th>\n",
              "      <th>tic</th>\n",
              "      <th>day</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2008-01-02</td>\n",
              "      <td>7.116786</td>\n",
              "      <td>7.152143</td>\n",
              "      <td>6.876786</td>\n",
              "      <td>5.958446</td>\n",
              "      <td>1079178800</td>\n",
              "      <td>AAPL</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2008-01-02</td>\n",
              "      <td>46.599998</td>\n",
              "      <td>47.040001</td>\n",
              "      <td>46.259998</td>\n",
              "      <td>36.034904</td>\n",
              "      <td>7934400</td>\n",
              "      <td>AMGN</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2008-01-02</td>\n",
              "      <td>52.090000</td>\n",
              "      <td>52.320000</td>\n",
              "      <td>50.790001</td>\n",
              "      <td>40.592690</td>\n",
              "      <td>8053700</td>\n",
              "      <td>AXP</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2008-01-02</td>\n",
              "      <td>87.570000</td>\n",
              "      <td>87.839996</td>\n",
              "      <td>86.000000</td>\n",
              "      <td>63.481628</td>\n",
              "      <td>4303000</td>\n",
              "      <td>BA</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2008-01-02</td>\n",
              "      <td>72.559998</td>\n",
              "      <td>72.669998</td>\n",
              "      <td>70.050003</td>\n",
              "      <td>47.403042</td>\n",
              "      <td>6337800</td>\n",
              "      <td>CAT</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9fc193fd-5c05-4eff-bda5-6b1d27a32bf0')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-9fc193fd-5c05-4eff-bda5-6b1d27a32bf0 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-9fc193fd-5c05-4eff-bda5-6b1d27a32bf0');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "         date       open       high  ...      volume   tic  day\n",
              "0  2008-01-02   7.116786   7.152143  ...  1079178800  AAPL    2\n",
              "1  2008-01-02  46.599998  47.040001  ...     7934400  AMGN    2\n",
              "2  2008-01-02  52.090000  52.320000  ...     8053700   AXP    2\n",
              "3  2008-01-02  87.570000  87.839996  ...     4303000    BA    2\n",
              "4  2008-01-02  72.559998  72.669998  ...     6337800   CAT    2\n",
              "\n",
              "[5 rows x 8 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ],
      "source": [
        "df.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "DSw4ZEzVtj1Z"
      },
      "outputs": [],
      "source": [
        "df.tail()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "CV3HrZHLh1hy"
      },
      "outputs": [],
      "source": [
        "df.shape"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "4hYkeaPiICHS"
      },
      "outputs": [],
      "source": [
        "df.sort_values(['date','tic']).head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "a2vryMsdNL9H"
      },
      "outputs": [],
      "source": [
        "len(df.tic.unique())"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "XcNyXa7RNPrF"
      },
      "outputs": [],
      "source": [
        "df.tic.value_counts()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "uqC6c40Zh1iH"
      },
      "source": [
        "# Part 4: Preprocess Data\n",
        "Data preprocessing is a crucial step for training a high quality machine learning model. We need to check for missing data and do feature engineering in order to convert the data into a model-ready state.\n",
        "* Add technical indicators. In practical trading, various information needs to be taken into account, for example the historical stock prices, current holding shares, technical indicators, etc. In this article, we demonstrate two trend-following technical indicators: MACD and RSI.\n",
        "* Add turbulence index. Risk-aversion reflects whether an investor will choose to preserve the capital. It also influences one's trading strategy when facing different market volatility level. To control the risk in a worst-case scenario, such as financial crisis of 2007–2008, FinRL employs the financial turbulence index that measures extreme asset price fluctuation."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "kM5bH9uroCeg"
      },
      "outputs": [],
      "source": [
        "tech_indicators = ['macd',\n",
        " 'rsi_30',\n",
        " 'cci_30',\n",
        " 'dx_30']"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "jgXfBcjxtj1a",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "963dba1f-df97-4cfd-c747-6a671d85278d"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Successfully added technical indicators\n",
            "Successfully added turbulence index\n"
          ]
        }
      ],
      "source": [
        "fe = FeatureEngineer(\n",
        "                    use_technical_indicator=True,\n",
        "                    tech_indicator_list = tech_indicators,\n",
        "                    use_turbulence=True,\n",
        "                    user_defined_feature = False)\n",
        "\n",
        "processed = fe.preprocess_data(df)\n",
        "processed = processed.copy()\n",
        "processed = processed.fillna(0)\n",
        "processed = processed.replace(np.inf,0)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "grvhGJJII3Xn",
        "outputId": "3c27b533-cf46-4a66-9af5-c6bbf6bf8d59",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 167
        }
      },
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-1-4bccdb67e073>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mprocessed\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msample\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m: name 'processed' is not defined"
          ]
        }
      ],
      "source": [
        "processed.sample(5)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "FCSr2-u0U7MR"
      },
      "source": [
        ""
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "-QsYaY0Dh1iw"
      },
      "source": [
        "<a id='4'></a>\n",
        "# Part 5. Design Environment\n",
        "Considering the stochastic and interactive nature of the automated stock trading tasks, a financial task is modeled as a **Markov Decision Process (MDP)** problem. The training process involves observing stock price change, taking an action and reward's calculation to have the agent adjusting its strategy accordingly. By interacting with the environment, the trading agent will derive a trading strategy with the maximized rewards as time proceeds.\n",
        "\n",
        "Our trading environments, based on OpenAI Gym framework, simulate live stock markets with real market data according to the principle of time-driven simulation.\n",
        "\n",
        "The action space describes the allowed actions that the agent interacts with the environment. Normally, action a includes three actions: {-1, 0, 1}, where -1, 0, 1 represent selling, holding, and buying one share. Also, an action can be carried upon multiple shares. We use an action space {-k,…,-1, 0, 1, …, k}, where k denotes the number of shares to buy and -k denotes the number of shares to sell. For example, \"Buy 10 shares of AAPL\" or \"Sell 10 shares of AAPL\" are 10 or -10, respectively. The continuous action space needs to be normalized to [-1, 1], since the policy is defined on a Gaussian distribution, which needs to be normalized and symmetric."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Q2zqII8rMIqn",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "677eb628-4626-449c-f8e9-9e78cacd0dc0"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Stock Dimension: 28, State Space: 169\n"
          ]
        }
      ],
      "source": [
        "stock_dimension = len(processed.tic.unique())\n",
        "state_space = 1 + 2*stock_dimension + len(tech_indicators)*stock_dimension\n",
        "print(f\"Stock Dimension: {stock_dimension}, State Space: {state_space}\")\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "AWyp84Ltto19"
      },
      "outputs": [],
      "source": [
        "env_kwargs = {\n",
        "    \"hmax\": 100, \n",
        "    \"initial_amount\": 1000000, \n",
        "    \"buy_cost_pct\": 0.001, \n",
        "    \"sell_cost_pct\": 0.001, \n",
        "    \"state_space\": state_space, \n",
        "    \"stock_dim\": stock_dimension, \n",
        "    \"tech_indicator_list\": tech_indicators,\n",
        "    \"action_space\": stock_dimension, \n",
        "    \"reward_scaling\": 1e-4,\n",
        "    \"print_verbosity\":5\n",
        "    \n",
        "}"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "HMNR5nHjh1iz"
      },
      "source": [
        "<a id='5'></a>\n",
        "# Part 6: Implement DRL Algorithms\n",
        "* The implementation of the DRL algorithms are based on **OpenAI Baselines** and **Stable Baselines**. Stable Baselines is a fork of OpenAI Baselines, with a major structural refactoring, and code cleanups.\n",
        "* FinRL library includes fine-tuned standard DRL algorithms, such as DQN, DDPG,\n",
        "Multi-Agent DDPG, PPO, SAC, A2C and TD3. We also allow users to\n",
        "design their own DRL algorithms by adapting these DRL algorithms.\n",
        "\n",
        "* In this notebook, we are training and validating 3 agents (A2C, PPO, DDPG) using Rolling-window Ensemble Method ([reference code](https://github.com/AI4Finance-LLC/Deep-Reinforcement-Learning-for-Automated-Stock-Trading-Ensemble-Strategy-ICAIF-2020/blob/80415db8fa7b2179df6bd7e81ce4fe8dbf913806/model/models.py#L92))"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "v-gthCxMtj1d"
      },
      "outputs": [],
      "source": [
        "rebalance_window = 63 # rebalance_window is the number of days to retrain the model\n",
        "validation_window = 63 # validation_window is the number of days to do validation and trading (e.g. if validation_window=63, then both validation and trading period will be 63 days)\n",
        "train_start = '2009-01-01'\n",
        "train_end = '2020-07-01'\n",
        "val_test_start = '2020-01-01'\n",
        "val_test_end = '2021-10-31'\n",
        "\n",
        "ensemble_agent = DRLEnsembleAgent(df=processed,\n",
        "                 train_period=(train_start,train_end),\n",
        "                 val_test_period=(val_test_start,val_test_end),\n",
        "                 rebalance_window=rebalance_window, \n",
        "                 validation_window=validation_window, \n",
        "                 **env_kwargs)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "KsfEHa_Etj1d",
        "scrolled": false
      },
      "outputs": [],
      "source": [
        "# A2C_model_kwargs = {\n",
        "#                     'n_steps': 5,\n",
        "#                     'ent_coef': 0.01,\n",
        "#                     'learning_rate': 0.0005\n",
        "#                     }\n",
        "\n",
        "# PPO_model_kwargs = {\n",
        "#                     \"ent_coef\":0.01,\n",
        "#                     \"n_steps\": 2048,\n",
        "#                     \"learning_rate\": 0.00025,\n",
        "#                     \"batch_size\": 64\n",
        "#                     }\n",
        "\n",
        "# DDPG_model_kwargs = {\n",
        "#                       #\"action_noise\":\"ornstein_uhlenbeck\",\n",
        "#                       \"buffer_size\": 100_000,\n",
        "#                       \"learning_rate\": 0.000005,\n",
        "#                       \"batch_size\": 64\n",
        "#                     }\n",
        "\n",
        "# timesteps_dict = {'a2c' : 30_000, \n",
        "#                  'ppo' : 100_000, \n",
        "#                  'ddpg' : 10_000\n",
        "#                  }\n",
        "\n",
        "\n",
        "# timesteps_dict = {'a2c' : 10_000, \n",
        "#                  'ppo' : 10_000, \n",
        "#                  'ddpg' : 10_000\n",
        "#                  }"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "2n-3nNt_X9I_"
      },
      "outputs": [],
      "source": [
        "A2C_model_kwargs = {\n",
        "                 \"n_steps\": 5, \"ent_coef\": 0.005, \"learning_rate\": 0.0002\n",
        "                    }\n",
        "\n",
        "PPO_model_kwargs = {\n",
        "                    \"n_steps\": 2048,\n",
        "    \"ent_coef\": 0.005,\n",
        "    \"learning_rate\": 0.0001,\n",
        "    \"batch_size\": 128,\n",
        "                    }\n",
        "\n",
        "DDPG_model_kwargs = {\n",
        "                      #\"action_noise\":\"ornstein_uhlenbeck\",\n",
        "                     \"batch_size\": 128, \"buffer_size\": 50000, \"learning_rate\": 0.001\n",
        "                    }\n",
        "\n",
        "timesteps_dict = {'a2c' : 50_000, \n",
        "                 'ppo' : 80_000, \n",
        "                 'ddpg' : 50_000\n",
        "                 }\n",
        "\n",
        "\n",
        "timesteps_dict = {'a2c' : 50_000, \n",
        "                 'ppo' : 80_000, \n",
        "                 'ddpg' : 50_000\n",
        "                 }"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_1lyCECstj1e",
        "scrolled": true,
        "outputId": "621493c1-2686-44b7-c364-71f72e3e19b4"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[1;30;43mStreaming output truncated to the last 5000 lines.\u001b[0m\n",
            "|    explained_variance | 0.0306     |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 699        |\n",
            "|    policy_loss        | 114        |\n",
            "|    reward             | 0.16316074 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 10.3       |\n",
            "--------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 800       |\n",
            "|    time_elapsed       | 49        |\n",
            "|    total_timesteps    | 4000      |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.7     |\n",
            "|    explained_variance | -1.19e-07 |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 799       |\n",
            "|    policy_loss        | -78.4     |\n",
            "|    reward             | 2.2702467 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 5.23      |\n",
            "-------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 900       |\n",
            "|    time_elapsed       | 55        |\n",
            "|    total_timesteps    | 4500      |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.7     |\n",
            "|    explained_variance | -0.176    |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 899       |\n",
            "|    policy_loss        | 60.3      |\n",
            "|    reward             | 1.2785308 |\n",
            "|    std                | 0.999     |\n",
            "|    value_loss         | 2.93      |\n",
            "-------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 81        |\n",
            "|    iterations         | 1000      |\n",
            "|    time_elapsed       | 61        |\n",
            "|    total_timesteps    | 5000      |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.7     |\n",
            "|    explained_variance | 5.3e-06   |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 999       |\n",
            "|    policy_loss        | -129      |\n",
            "|    reward             | 0.9394595 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 17.6      |\n",
            "-------------------------------------\n",
            "------------------------------------\n",
            "| time/                 |          |\n",
            "|    fps                | 81       |\n",
            "|    iterations         | 1100     |\n",
            "|    time_elapsed       | 67       |\n",
            "|    total_timesteps    | 5500     |\n",
            "| train/                |          |\n",
            "|    entropy_loss       | -39.7    |\n",
            "|    explained_variance | 0        |\n",
            "|    learning_rate      | 0.0002   |\n",
            "|    n_updates          | 1099     |\n",
            "|    policy_loss        | 241      |\n",
            "|    reward             | 8.468274 |\n",
            "|    std                | 1        |\n",
            "|    value_loss         | 46.1     |\n",
            "------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 81        |\n",
            "|    iterations         | 1200      |\n",
            "|    time_elapsed       | 73        |\n",
            "|    total_timesteps    | 6000      |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.7     |\n",
            "|    explained_variance | -1.19e-07 |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 1199      |\n",
            "|    policy_loss        | -231      |\n",
            "|    reward             | 7.272255  |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 35        |\n",
            "-------------------------------------\n",
            "---------------------------------------\n",
            "| time/                 |             |\n",
            "|    fps                | 81          |\n",
            "|    iterations         | 1300        |\n",
            "|    time_elapsed       | 79          |\n",
            "|    total_timesteps    | 6500        |\n",
            "| train/                |             |\n",
            "|    entropy_loss       | -39.7       |\n",
            "|    explained_variance | 0.00355     |\n",
            "|    learning_rate      | 0.0002      |\n",
            "|    n_updates          | 1299        |\n",
            "|    policy_loss        | 19.6        |\n",
            "|    reward             | -0.89604497 |\n",
            "|    std                | 1           |\n",
            "|    value_loss         | 2.19        |\n",
            "---------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 81         |\n",
            "|    iterations         | 1400       |\n",
            "|    time_elapsed       | 85         |\n",
            "|    total_timesteps    | 7000       |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.8      |\n",
            "|    explained_variance | -0.0949    |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 1399       |\n",
            "|    policy_loss        | -42.6      |\n",
            "|    reward             | -2.6944704 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 1.72       |\n",
            "--------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 81        |\n",
            "|    iterations         | 1500      |\n",
            "|    time_elapsed       | 92        |\n",
            "|    total_timesteps    | 7500      |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.7     |\n",
            "|    explained_variance | 0.11      |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 1499      |\n",
            "|    policy_loss        | -94.5     |\n",
            "|    reward             | 2.1877034 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 7.82      |\n",
            "-------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 81         |\n",
            "|    iterations         | 1600       |\n",
            "|    time_elapsed       | 98         |\n",
            "|    total_timesteps    | 8000       |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.7      |\n",
            "|    explained_variance | 0          |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 1599       |\n",
            "|    policy_loss        | -164       |\n",
            "|    reward             | 0.24301854 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 19.5       |\n",
            "--------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 81        |\n",
            "|    iterations         | 1700      |\n",
            "|    time_elapsed       | 104       |\n",
            "|    total_timesteps    | 8500      |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.7     |\n",
            "|    explained_variance | 0.0288    |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 1699      |\n",
            "|    policy_loss        | 101       |\n",
            "|    reward             | -5.591507 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 10.8      |\n",
            "-------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 81         |\n",
            "|    iterations         | 1800       |\n",
            "|    time_elapsed       | 111        |\n",
            "|    total_timesteps    | 9000       |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.8      |\n",
            "|    explained_variance | 0          |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 1799       |\n",
            "|    policy_loss        | 35         |\n",
            "|    reward             | -3.0181046 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 5.23       |\n",
            "--------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 1900      |\n",
            "|    time_elapsed       | 117       |\n",
            "|    total_timesteps    | 9500      |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.8     |\n",
            "|    explained_variance | 0.0023    |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 1899      |\n",
            "|    policy_loss        | 31.6      |\n",
            "|    reward             | 0.6893016 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 1.51      |\n",
            "-------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 80         |\n",
            "|    iterations         | 2000       |\n",
            "|    time_elapsed       | 123        |\n",
            "|    total_timesteps    | 10000      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.7      |\n",
            "|    explained_variance | 0.51       |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 1999       |\n",
            "|    policy_loss        | 17.2       |\n",
            "|    reward             | -1.7981548 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 0.742      |\n",
            "--------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 2100      |\n",
            "|    time_elapsed       | 130       |\n",
            "|    total_timesteps    | 10500     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.7     |\n",
            "|    explained_variance | -0.763    |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 2099      |\n",
            "|    policy_loss        | -14.5     |\n",
            "|    reward             | -1.685864 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 1.61      |\n",
            "-------------------------------------\n",
            "---------------------------------------\n",
            "| time/                 |             |\n",
            "|    fps                | 80          |\n",
            "|    iterations         | 2200        |\n",
            "|    time_elapsed       | 136         |\n",
            "|    total_timesteps    | 11000       |\n",
            "| train/                |             |\n",
            "|    entropy_loss       | -39.8       |\n",
            "|    explained_variance | 0.413       |\n",
            "|    learning_rate      | 0.0002      |\n",
            "|    n_updates          | 2199        |\n",
            "|    policy_loss        | -216        |\n",
            "|    reward             | -0.22578698 |\n",
            "|    std                | 1           |\n",
            "|    value_loss         | 26.3        |\n",
            "---------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 2300      |\n",
            "|    time_elapsed       | 142       |\n",
            "|    total_timesteps    | 11500     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.8     |\n",
            "|    explained_variance | -0.169    |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 2299      |\n",
            "|    policy_loss        | -70.7     |\n",
            "|    reward             | 2.8920233 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 8.9       |\n",
            "-------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 2400      |\n",
            "|    time_elapsed       | 148       |\n",
            "|    total_timesteps    | 12000     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.8     |\n",
            "|    explained_variance | 0.249     |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 2399      |\n",
            "|    policy_loss        | 90        |\n",
            "|    reward             | -8.569951 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 15.8      |\n",
            "-------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 2500      |\n",
            "|    time_elapsed       | 154       |\n",
            "|    total_timesteps    | 12500     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.8     |\n",
            "|    explained_variance | -0.0285   |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 2499      |\n",
            "|    policy_loss        | -105      |\n",
            "|    reward             | 0.9313339 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 10.8      |\n",
            "-------------------------------------\n",
            "---------------------------------------\n",
            "| time/                 |             |\n",
            "|    fps                | 80          |\n",
            "|    iterations         | 2600        |\n",
            "|    time_elapsed       | 160         |\n",
            "|    total_timesteps    | 13000       |\n",
            "| train/                |             |\n",
            "|    entropy_loss       | -39.7       |\n",
            "|    explained_variance | -0.409      |\n",
            "|    learning_rate      | 0.0002      |\n",
            "|    n_updates          | 2599        |\n",
            "|    policy_loss        | 21.2        |\n",
            "|    reward             | -0.24612004 |\n",
            "|    std                | 1           |\n",
            "|    value_loss         | 0.322       |\n",
            "---------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 2700      |\n",
            "|    time_elapsed       | 167       |\n",
            "|    total_timesteps    | 13500     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.7     |\n",
            "|    explained_variance | -0.59     |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 2699      |\n",
            "|    policy_loss        | 115       |\n",
            "|    reward             | 0.9174554 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 11.4      |\n",
            "-------------------------------------\n",
            "---------------------------------------\n",
            "| time/                 |             |\n",
            "|    fps                | 80          |\n",
            "|    iterations         | 2800        |\n",
            "|    time_elapsed       | 173         |\n",
            "|    total_timesteps    | 14000       |\n",
            "| train/                |             |\n",
            "|    entropy_loss       | -39.7       |\n",
            "|    explained_variance | 0.153       |\n",
            "|    learning_rate      | 0.0002      |\n",
            "|    n_updates          | 2799        |\n",
            "|    policy_loss        | 54.6        |\n",
            "|    reward             | 0.097132094 |\n",
            "|    std                | 1           |\n",
            "|    value_loss         | 2.18        |\n",
            "---------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 2900      |\n",
            "|    time_elapsed       | 179       |\n",
            "|    total_timesteps    | 14500     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.7     |\n",
            "|    explained_variance | -0.147    |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 2899      |\n",
            "|    policy_loss        | 87.3      |\n",
            "|    reward             | 1.1540486 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 7.3       |\n",
            "-------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 3000      |\n",
            "|    time_elapsed       | 185       |\n",
            "|    total_timesteps    | 15000     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.7     |\n",
            "|    explained_variance | 0.0128    |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 2999      |\n",
            "|    policy_loss        | 152       |\n",
            "|    reward             | 5.5456114 |\n",
            "|    std                | 0.999     |\n",
            "|    value_loss         | 32        |\n",
            "-------------------------------------\n",
            "day: 3019, episode: 5\n",
            "begin_total_asset: 1000000.00\n",
            "end_total_asset: 4901372.80\n",
            "total_reward: 3901372.80\n",
            "total_cost: 295453.29\n",
            "total_trades: 76177\n",
            "Sharpe: 0.735\n",
            "=================================\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 3100      |\n",
            "|    time_elapsed       | 191       |\n",
            "|    total_timesteps    | 15500     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.7     |\n",
            "|    explained_variance | -0.176    |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 3099      |\n",
            "|    policy_loss        | -7.73     |\n",
            "|    reward             | -0.216227 |\n",
            "|    std                | 0.999     |\n",
            "|    value_loss         | 0.496     |\n",
            "-------------------------------------\n",
            "---------------------------------------\n",
            "| time/                 |             |\n",
            "|    fps                | 80          |\n",
            "|    iterations         | 3200        |\n",
            "|    time_elapsed       | 198         |\n",
            "|    total_timesteps    | 16000       |\n",
            "| train/                |             |\n",
            "|    entropy_loss       | -39.7       |\n",
            "|    explained_variance | -0.675      |\n",
            "|    learning_rate      | 0.0002      |\n",
            "|    n_updates          | 3199        |\n",
            "|    policy_loss        | -63         |\n",
            "|    reward             | -0.43647248 |\n",
            "|    std                | 0.999       |\n",
            "|    value_loss         | 2.86        |\n",
            "---------------------------------------\n",
            "---------------------------------------\n",
            "| time/                 |             |\n",
            "|    fps                | 80          |\n",
            "|    iterations         | 3300        |\n",
            "|    time_elapsed       | 204         |\n",
            "|    total_timesteps    | 16500       |\n",
            "| train/                |             |\n",
            "|    entropy_loss       | -39.7       |\n",
            "|    explained_variance | -0.121      |\n",
            "|    learning_rate      | 0.0002      |\n",
            "|    n_updates          | 3299        |\n",
            "|    policy_loss        | -23.1       |\n",
            "|    reward             | -0.11045068 |\n",
            "|    std                | 1           |\n",
            "|    value_loss         | 1.53        |\n",
            "---------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 80         |\n",
            "|    iterations         | 3400       |\n",
            "|    time_elapsed       | 210        |\n",
            "|    total_timesteps    | 17000      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.7      |\n",
            "|    explained_variance | -0.0442    |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 3399       |\n",
            "|    policy_loss        | 111        |\n",
            "|    reward             | -1.6659474 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 13.8       |\n",
            "--------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 3500      |\n",
            "|    time_elapsed       | 216       |\n",
            "|    total_timesteps    | 17500     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.7     |\n",
            "|    explained_variance | -0.125    |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 3499      |\n",
            "|    policy_loss        | 423       |\n",
            "|    reward             | 1.2911834 |\n",
            "|    std                | 0.999     |\n",
            "|    value_loss         | 108       |\n",
            "-------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 80         |\n",
            "|    iterations         | 3600       |\n",
            "|    time_elapsed       | 222        |\n",
            "|    total_timesteps    | 18000      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.7      |\n",
            "|    explained_variance | -0.0443    |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 3599       |\n",
            "|    policy_loss        | 369        |\n",
            "|    reward             | -4.3417754 |\n",
            "|    std                | 0.999      |\n",
            "|    value_loss         | 133        |\n",
            "--------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 3700      |\n",
            "|    time_elapsed       | 228       |\n",
            "|    total_timesteps    | 18500     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.7     |\n",
            "|    explained_variance | 0.128     |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 3699      |\n",
            "|    policy_loss        | -230      |\n",
            "|    reward             | 1.6815177 |\n",
            "|    std                | 0.999     |\n",
            "|    value_loss         | 32.9      |\n",
            "-------------------------------------\n",
            "------------------------------------\n",
            "| time/                 |          |\n",
            "|    fps                | 80       |\n",
            "|    iterations         | 3800     |\n",
            "|    time_elapsed       | 235      |\n",
            "|    total_timesteps    | 19000    |\n",
            "| train/                |          |\n",
            "|    entropy_loss       | -39.7    |\n",
            "|    explained_variance | -0.298   |\n",
            "|    learning_rate      | 0.0002   |\n",
            "|    n_updates          | 3799     |\n",
            "|    policy_loss        | -86.6    |\n",
            "|    reward             | 1.129397 |\n",
            "|    std                | 1        |\n",
            "|    value_loss         | 8.25     |\n",
            "------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 3900      |\n",
            "|    time_elapsed       | 241       |\n",
            "|    total_timesteps    | 19500     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.7     |\n",
            "|    explained_variance | 0         |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 3899      |\n",
            "|    policy_loss        | 95        |\n",
            "|    reward             | 0.6095757 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 9.23      |\n",
            "-------------------------------------\n",
            "---------------------------------------\n",
            "| time/                 |             |\n",
            "|    fps                | 80          |\n",
            "|    iterations         | 4000        |\n",
            "|    time_elapsed       | 246         |\n",
            "|    total_timesteps    | 20000       |\n",
            "| train/                |             |\n",
            "|    entropy_loss       | -39.7       |\n",
            "|    explained_variance | 0.248       |\n",
            "|    learning_rate      | 0.0002      |\n",
            "|    n_updates          | 3999        |\n",
            "|    policy_loss        | -78         |\n",
            "|    reward             | -0.54844546 |\n",
            "|    std                | 1           |\n",
            "|    value_loss         | 4.8         |\n",
            "---------------------------------------\n",
            "---------------------------------------\n",
            "| time/                 |             |\n",
            "|    fps                | 80          |\n",
            "|    iterations         | 4100        |\n",
            "|    time_elapsed       | 253         |\n",
            "|    total_timesteps    | 20500       |\n",
            "| train/                |             |\n",
            "|    entropy_loss       | -39.7       |\n",
            "|    explained_variance | -0.204      |\n",
            "|    learning_rate      | 0.0002      |\n",
            "|    n_updates          | 4099        |\n",
            "|    policy_loss        | 51.9        |\n",
            "|    reward             | -0.43378547 |\n",
            "|    std                | 1           |\n",
            "|    value_loss         | 5.1         |\n",
            "---------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 81         |\n",
            "|    iterations         | 4200       |\n",
            "|    time_elapsed       | 259        |\n",
            "|    total_timesteps    | 21000      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.7      |\n",
            "|    explained_variance | 0          |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 4199       |\n",
            "|    policy_loss        | 284        |\n",
            "|    reward             | 0.75092685 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 62         |\n",
            "--------------------------------------\n",
            "---------------------------------------\n",
            "| time/                 |             |\n",
            "|    fps                | 81          |\n",
            "|    iterations         | 4300        |\n",
            "|    time_elapsed       | 265         |\n",
            "|    total_timesteps    | 21500       |\n",
            "| train/                |             |\n",
            "|    entropy_loss       | -39.7       |\n",
            "|    explained_variance | 0.0313      |\n",
            "|    learning_rate      | 0.0002      |\n",
            "|    n_updates          | 4299        |\n",
            "|    policy_loss        | 78.6        |\n",
            "|    reward             | -0.45205277 |\n",
            "|    std                | 1           |\n",
            "|    value_loss         | 6.03        |\n",
            "---------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 81        |\n",
            "|    iterations         | 4400      |\n",
            "|    time_elapsed       | 271       |\n",
            "|    total_timesteps    | 22000     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.7     |\n",
            "|    explained_variance | -0.771    |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 4399      |\n",
            "|    policy_loss        | 48        |\n",
            "|    reward             | -3.002304 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 2.7       |\n",
            "-------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 81        |\n",
            "|    iterations         | 4500      |\n",
            "|    time_elapsed       | 277       |\n",
            "|    total_timesteps    | 22500     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.7     |\n",
            "|    explained_variance | -0.279    |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 4499      |\n",
            "|    policy_loss        | -10.7     |\n",
            "|    reward             | 1.5356628 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 0.703     |\n",
            "-------------------------------------\n",
            "------------------------------------\n",
            "| time/                 |          |\n",
            "|    fps                | 80       |\n",
            "|    iterations         | 4600     |\n",
            "|    time_elapsed       | 284      |\n",
            "|    total_timesteps    | 23000    |\n",
            "| train/                |          |\n",
            "|    entropy_loss       | -39.7    |\n",
            "|    explained_variance | 0        |\n",
            "|    learning_rate      | 0.0002   |\n",
            "|    n_updates          | 4599     |\n",
            "|    policy_loss        | -95.1    |\n",
            "|    reward             | 2.682607 |\n",
            "|    std                | 1        |\n",
            "|    value_loss         | 7.92     |\n",
            "------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 80         |\n",
            "|    iterations         | 4700       |\n",
            "|    time_elapsed       | 290        |\n",
            "|    total_timesteps    | 23500      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.8      |\n",
            "|    explained_variance | -0.00488   |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 4699       |\n",
            "|    policy_loss        | 186        |\n",
            "|    reward             | -1.9425846 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 29.7       |\n",
            "--------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 4800      |\n",
            "|    time_elapsed       | 296       |\n",
            "|    total_timesteps    | 24000     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.8     |\n",
            "|    explained_variance | 0.0642    |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 4799      |\n",
            "|    policy_loss        | 96.8      |\n",
            "|    reward             | 2.7404134 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 12.3      |\n",
            "-------------------------------------\n",
            "---------------------------------------\n",
            "| time/                 |             |\n",
            "|    fps                | 80          |\n",
            "|    iterations         | 4900        |\n",
            "|    time_elapsed       | 303         |\n",
            "|    total_timesteps    | 24500       |\n",
            "| train/                |             |\n",
            "|    entropy_loss       | -39.7       |\n",
            "|    explained_variance | -0.00656    |\n",
            "|    learning_rate      | 0.0002      |\n",
            "|    n_updates          | 4899        |\n",
            "|    policy_loss        | -55.9       |\n",
            "|    reward             | -0.30701262 |\n",
            "|    std                | 1           |\n",
            "|    value_loss         | 2.78        |\n",
            "---------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 80         |\n",
            "|    iterations         | 5000       |\n",
            "|    time_elapsed       | 309        |\n",
            "|    total_timesteps    | 25000      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.7      |\n",
            "|    explained_variance | -0.111     |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 4999       |\n",
            "|    policy_loss        | 39.4       |\n",
            "|    reward             | -0.5053702 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 4.06       |\n",
            "--------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 80         |\n",
            "|    iterations         | 5100       |\n",
            "|    time_elapsed       | 315        |\n",
            "|    total_timesteps    | 25500      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.7      |\n",
            "|    explained_variance | 0.238      |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 5099       |\n",
            "|    policy_loss        | 51.1       |\n",
            "|    reward             | -0.6698627 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 1.93       |\n",
            "--------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 5200      |\n",
            "|    time_elapsed       | 321       |\n",
            "|    total_timesteps    | 26000     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.8     |\n",
            "|    explained_variance | -0.00939  |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 5199      |\n",
            "|    policy_loss        | 93.7      |\n",
            "|    reward             | -0.744245 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 6.87      |\n",
            "-------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 5300      |\n",
            "|    time_elapsed       | 328       |\n",
            "|    total_timesteps    | 26500     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.7     |\n",
            "|    explained_variance | -0.0403   |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 5299      |\n",
            "|    policy_loss        | 138       |\n",
            "|    reward             | -3.359303 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 26        |\n",
            "-------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 5400      |\n",
            "|    time_elapsed       | 334       |\n",
            "|    total_timesteps    | 27000     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.8     |\n",
            "|    explained_variance | 0         |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 5399      |\n",
            "|    policy_loss        | 794       |\n",
            "|    reward             | 2.6852841 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 594       |\n",
            "-------------------------------------\n",
            "---------------------------------------\n",
            "| time/                 |             |\n",
            "|    fps                | 80          |\n",
            "|    iterations         | 5500        |\n",
            "|    time_elapsed       | 340         |\n",
            "|    total_timesteps    | 27500       |\n",
            "| train/                |             |\n",
            "|    entropy_loss       | -39.8       |\n",
            "|    explained_variance | 0.00105     |\n",
            "|    learning_rate      | 0.0002      |\n",
            "|    n_updates          | 5499        |\n",
            "|    policy_loss        | 12.4        |\n",
            "|    reward             | 0.073634826 |\n",
            "|    std                | 1           |\n",
            "|    value_loss         | 0.218       |\n",
            "---------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 80         |\n",
            "|    iterations         | 5600       |\n",
            "|    time_elapsed       | 346        |\n",
            "|    total_timesteps    | 28000      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.8      |\n",
            "|    explained_variance | 1.19e-07   |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 5599       |\n",
            "|    policy_loss        | -43        |\n",
            "|    reward             | -1.4077321 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 1.67       |\n",
            "--------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 80         |\n",
            "|    iterations         | 5700       |\n",
            "|    time_elapsed       | 352        |\n",
            "|    total_timesteps    | 28500      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.8      |\n",
            "|    explained_variance | 0.000244   |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 5699       |\n",
            "|    policy_loss        | -24.9      |\n",
            "|    reward             | 0.89983565 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 0.838      |\n",
            "--------------------------------------\n",
            "---------------------------------------\n",
            "| time/                 |             |\n",
            "|    fps                | 80          |\n",
            "|    iterations         | 5800        |\n",
            "|    time_elapsed       | 358         |\n",
            "|    total_timesteps    | 29000       |\n",
            "| train/                |             |\n",
            "|    entropy_loss       | -39.8       |\n",
            "|    explained_variance | -0.736      |\n",
            "|    learning_rate      | 0.0002      |\n",
            "|    n_updates          | 5799        |\n",
            "|    policy_loss        | 141         |\n",
            "|    reward             | 0.116729334 |\n",
            "|    std                | 1           |\n",
            "|    value_loss         | 12.2        |\n",
            "---------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 80         |\n",
            "|    iterations         | 5900       |\n",
            "|    time_elapsed       | 364        |\n",
            "|    total_timesteps    | 29500      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.7      |\n",
            "|    explained_variance | -1.19e-07  |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 5899       |\n",
            "|    policy_loss        | -63.6      |\n",
            "|    reward             | -5.0060105 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 4.61       |\n",
            "--------------------------------------\n",
            "----------------------------------------\n",
            "| time/                 |              |\n",
            "|    fps                | 80           |\n",
            "|    iterations         | 6000         |\n",
            "|    time_elapsed       | 370          |\n",
            "|    total_timesteps    | 30000        |\n",
            "| train/                |              |\n",
            "|    entropy_loss       | -39.8        |\n",
            "|    explained_variance | -0.0364      |\n",
            "|    learning_rate      | 0.0002       |\n",
            "|    n_updates          | 5999         |\n",
            "|    policy_loss        | -631         |\n",
            "|    reward             | -0.059845038 |\n",
            "|    std                | 1            |\n",
            "|    value_loss         | 292          |\n",
            "----------------------------------------\n",
            "day: 3019, episode: 10\n",
            "begin_total_asset: 1000000.00\n",
            "end_total_asset: 5246453.51\n",
            "total_reward: 4246453.51\n",
            "total_cost: 132762.44\n",
            "total_trades: 62304\n",
            "Sharpe: 0.857\n",
            "=================================\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 6100      |\n",
            "|    time_elapsed       | 376       |\n",
            "|    total_timesteps    | 30500     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.8     |\n",
            "|    explained_variance | 0.345     |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 6099      |\n",
            "|    policy_loss        | 37.4      |\n",
            "|    reward             | 0.9701688 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 0.943     |\n",
            "-------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 6200      |\n",
            "|    time_elapsed       | 383       |\n",
            "|    total_timesteps    | 31000     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.8     |\n",
            "|    explained_variance | 0.149     |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 6199      |\n",
            "|    policy_loss        | 49.4      |\n",
            "|    reward             | 1.9496266 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 1.83      |\n",
            "-------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 80         |\n",
            "|    iterations         | 6300       |\n",
            "|    time_elapsed       | 389        |\n",
            "|    total_timesteps    | 31500      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.8      |\n",
            "|    explained_variance | 0.101      |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 6299       |\n",
            "|    policy_loss        | 221        |\n",
            "|    reward             | -1.2065107 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 29.8       |\n",
            "--------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 80         |\n",
            "|    iterations         | 6400       |\n",
            "|    time_elapsed       | 395        |\n",
            "|    total_timesteps    | 32000      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.8      |\n",
            "|    explained_variance | 0.043      |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 6399       |\n",
            "|    policy_loss        | 272        |\n",
            "|    reward             | -4.4303293 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 65.1       |\n",
            "--------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 6500      |\n",
            "|    time_elapsed       | 401       |\n",
            "|    total_timesteps    | 32500     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.8     |\n",
            "|    explained_variance | -1.19e-07 |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 6499      |\n",
            "|    policy_loss        | 201       |\n",
            "|    reward             | 4.936555  |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 74.8      |\n",
            "-------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 80         |\n",
            "|    iterations         | 6600       |\n",
            "|    time_elapsed       | 407        |\n",
            "|    total_timesteps    | 33000      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.8      |\n",
            "|    explained_variance | 0.0381     |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 6599       |\n",
            "|    policy_loss        | 154        |\n",
            "|    reward             | -2.7832727 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 21         |\n",
            "--------------------------------------\n",
            "---------------------------------------\n",
            "| time/                 |             |\n",
            "|    fps                | 80          |\n",
            "|    iterations         | 6700        |\n",
            "|    time_elapsed       | 413         |\n",
            "|    total_timesteps    | 33500       |\n",
            "| train/                |             |\n",
            "|    entropy_loss       | -39.8       |\n",
            "|    explained_variance | 0.052       |\n",
            "|    learning_rate      | 0.0002      |\n",
            "|    n_updates          | 6699        |\n",
            "|    policy_loss        | -93.8       |\n",
            "|    reward             | -0.35570198 |\n",
            "|    std                | 1           |\n",
            "|    value_loss         | 8.28        |\n",
            "---------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 81         |\n",
            "|    iterations         | 6800       |\n",
            "|    time_elapsed       | 419        |\n",
            "|    total_timesteps    | 34000      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.8      |\n",
            "|    explained_variance | 0.0477     |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 6799       |\n",
            "|    policy_loss        | -37.8      |\n",
            "|    reward             | 0.45237443 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 1.91       |\n",
            "--------------------------------------\n",
            "---------------------------------------\n",
            "| time/                 |             |\n",
            "|    fps                | 80          |\n",
            "|    iterations         | 6900        |\n",
            "|    time_elapsed       | 426         |\n",
            "|    total_timesteps    | 34500       |\n",
            "| train/                |             |\n",
            "|    entropy_loss       | -39.8       |\n",
            "|    explained_variance | 0           |\n",
            "|    learning_rate      | 0.0002      |\n",
            "|    n_updates          | 6899        |\n",
            "|    policy_loss        | -73.2       |\n",
            "|    reward             | -0.42877123 |\n",
            "|    std                | 1           |\n",
            "|    value_loss         | 10.1        |\n",
            "---------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 7000      |\n",
            "|    time_elapsed       | 432       |\n",
            "|    total_timesteps    | 35000     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.8     |\n",
            "|    explained_variance | 0.000241  |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 6999      |\n",
            "|    policy_loss        | 383       |\n",
            "|    reward             | 7.4134345 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 89.7      |\n",
            "-------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 7100      |\n",
            "|    time_elapsed       | 438       |\n",
            "|    total_timesteps    | 35500     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.8     |\n",
            "|    explained_variance | -0.0914   |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 7099      |\n",
            "|    policy_loss        | 209       |\n",
            "|    reward             | 3.2798948 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 29.4      |\n",
            "-------------------------------------\n",
            "------------------------------------\n",
            "| time/                 |          |\n",
            "|    fps                | 80       |\n",
            "|    iterations         | 7200     |\n",
            "|    time_elapsed       | 445      |\n",
            "|    total_timesteps    | 36000    |\n",
            "| train/                |          |\n",
            "|    entropy_loss       | -39.8    |\n",
            "|    explained_variance | 0.0833   |\n",
            "|    learning_rate      | 0.0002   |\n",
            "|    n_updates          | 7199     |\n",
            "|    policy_loss        | 49.8     |\n",
            "|    reward             | 1.476316 |\n",
            "|    std                | 1        |\n",
            "|    value_loss         | 4.4      |\n",
            "------------------------------------\n",
            "----------------------------------------\n",
            "| time/                 |              |\n",
            "|    fps                | 80           |\n",
            "|    iterations         | 7300         |\n",
            "|    time_elapsed       | 451          |\n",
            "|    total_timesteps    | 36500        |\n",
            "| train/                |              |\n",
            "|    entropy_loss       | -39.8        |\n",
            "|    explained_variance | -0.0383      |\n",
            "|    learning_rate      | 0.0002       |\n",
            "|    n_updates          | 7299         |\n",
            "|    policy_loss        | 41           |\n",
            "|    reward             | -0.006571242 |\n",
            "|    std                | 1            |\n",
            "|    value_loss         | 1.4          |\n",
            "----------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 80         |\n",
            "|    iterations         | 7400       |\n",
            "|    time_elapsed       | 457        |\n",
            "|    total_timesteps    | 37000      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.8      |\n",
            "|    explained_variance | -3.58e-07  |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 7399       |\n",
            "|    policy_loss        | -29.1      |\n",
            "|    reward             | 0.49822482 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 1.36       |\n",
            "--------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 80         |\n",
            "|    iterations         | 7500       |\n",
            "|    time_elapsed       | 464        |\n",
            "|    total_timesteps    | 37500      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.8      |\n",
            "|    explained_variance | 0          |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 7499       |\n",
            "|    policy_loss        | 76.8       |\n",
            "|    reward             | -2.1805754 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 5.3        |\n",
            "--------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 7600      |\n",
            "|    time_elapsed       | 470       |\n",
            "|    total_timesteps    | 38000     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.8     |\n",
            "|    explained_variance | 0         |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 7599      |\n",
            "|    policy_loss        | 174       |\n",
            "|    reward             | -2.382431 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 22.3      |\n",
            "-------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 80         |\n",
            "|    iterations         | 7700       |\n",
            "|    time_elapsed       | 476        |\n",
            "|    total_timesteps    | 38500      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.8      |\n",
            "|    explained_variance | 0          |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 7699       |\n",
            "|    policy_loss        | 221        |\n",
            "|    reward             | -3.0666866 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 46.6       |\n",
            "--------------------------------------\n",
            "------------------------------------\n",
            "| time/                 |          |\n",
            "|    fps                | 80       |\n",
            "|    iterations         | 7800     |\n",
            "|    time_elapsed       | 483      |\n",
            "|    total_timesteps    | 39000    |\n",
            "| train/                |          |\n",
            "|    entropy_loss       | -39.8    |\n",
            "|    explained_variance | -0.0159  |\n",
            "|    learning_rate      | 0.0002   |\n",
            "|    n_updates          | 7799     |\n",
            "|    policy_loss        | 159      |\n",
            "|    reward             | 2.668378 |\n",
            "|    std                | 1        |\n",
            "|    value_loss         | 19.9     |\n",
            "------------------------------------\n",
            "---------------------------------------\n",
            "| time/                 |             |\n",
            "|    fps                | 80          |\n",
            "|    iterations         | 7900        |\n",
            "|    time_elapsed       | 489         |\n",
            "|    total_timesteps    | 39500       |\n",
            "| train/                |             |\n",
            "|    entropy_loss       | -39.8       |\n",
            "|    explained_variance | -0.166      |\n",
            "|    learning_rate      | 0.0002      |\n",
            "|    n_updates          | 7899        |\n",
            "|    policy_loss        | -84.5       |\n",
            "|    reward             | -0.48446295 |\n",
            "|    std                | 1           |\n",
            "|    value_loss         | 4.84        |\n",
            "---------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 80         |\n",
            "|    iterations         | 8000       |\n",
            "|    time_elapsed       | 496        |\n",
            "|    total_timesteps    | 40000      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.8      |\n",
            "|    explained_variance | 0.0572     |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 7999       |\n",
            "|    policy_loss        | 175        |\n",
            "|    reward             | -2.1220555 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 32.2       |\n",
            "--------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 80         |\n",
            "|    iterations         | 8100       |\n",
            "|    time_elapsed       | 502        |\n",
            "|    total_timesteps    | 40500      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.8      |\n",
            "|    explained_variance | 0          |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 8099       |\n",
            "|    policy_loss        | 31.4       |\n",
            "|    reward             | -1.8131715 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 2.54       |\n",
            "--------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 8200      |\n",
            "|    time_elapsed       | 508       |\n",
            "|    total_timesteps    | 41000     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.8     |\n",
            "|    explained_variance | 0.039     |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 8199      |\n",
            "|    policy_loss        | 163       |\n",
            "|    reward             | 2.3464873 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 23.1      |\n",
            "-------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 8300      |\n",
            "|    time_elapsed       | 515       |\n",
            "|    total_timesteps    | 41500     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.8     |\n",
            "|    explained_variance | -0.0723   |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 8299      |\n",
            "|    policy_loss        | 359       |\n",
            "|    reward             | 1.0488178 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 74.7      |\n",
            "-------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 8400      |\n",
            "|    time_elapsed       | 521       |\n",
            "|    total_timesteps    | 42000     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.8     |\n",
            "|    explained_variance | -0.0108   |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 8399      |\n",
            "|    policy_loss        | 233       |\n",
            "|    reward             | -1.919354 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 36.5      |\n",
            "-------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 8500      |\n",
            "|    time_elapsed       | 528       |\n",
            "|    total_timesteps    | 42500     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.8     |\n",
            "|    explained_variance | -0.0759   |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 8499      |\n",
            "|    policy_loss        | 177       |\n",
            "|    reward             | 1.3819776 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 19.5      |\n",
            "-------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 80         |\n",
            "|    iterations         | 8600       |\n",
            "|    time_elapsed       | 535        |\n",
            "|    total_timesteps    | 43000      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.8      |\n",
            "|    explained_variance | 0.0216     |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 8599       |\n",
            "|    policy_loss        | -87.6      |\n",
            "|    reward             | -6.1559944 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 13.5       |\n",
            "--------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 8700      |\n",
            "|    time_elapsed       | 541       |\n",
            "|    total_timesteps    | 43500     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.8     |\n",
            "|    explained_variance | 0         |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 8699      |\n",
            "|    policy_loss        | 17.1      |\n",
            "|    reward             | 2.1088037 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 1.06      |\n",
            "-------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 8800      |\n",
            "|    time_elapsed       | 547       |\n",
            "|    total_timesteps    | 44000     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.8     |\n",
            "|    explained_variance | -0.672    |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 8799      |\n",
            "|    policy_loss        | -7.97     |\n",
            "|    reward             | 2.0443194 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 1.18      |\n",
            "-------------------------------------\n",
            "------------------------------------\n",
            "| time/                 |          |\n",
            "|    fps                | 80       |\n",
            "|    iterations         | 8900     |\n",
            "|    time_elapsed       | 554      |\n",
            "|    total_timesteps    | 44500    |\n",
            "| train/                |          |\n",
            "|    entropy_loss       | -39.8    |\n",
            "|    explained_variance | 0        |\n",
            "|    learning_rate      | 0.0002   |\n",
            "|    n_updates          | 8899     |\n",
            "|    policy_loss        | 135      |\n",
            "|    reward             | 4.26025  |\n",
            "|    std                | 1        |\n",
            "|    value_loss         | 11.5     |\n",
            "------------------------------------\n",
            "------------------------------------\n",
            "| time/                 |          |\n",
            "|    fps                | 80       |\n",
            "|    iterations         | 9000     |\n",
            "|    time_elapsed       | 560      |\n",
            "|    total_timesteps    | 45000    |\n",
            "| train/                |          |\n",
            "|    entropy_loss       | -39.8    |\n",
            "|    explained_variance | -0.0273  |\n",
            "|    learning_rate      | 0.0002   |\n",
            "|    n_updates          | 8999     |\n",
            "|    policy_loss        | 102      |\n",
            "|    reward             | -6.21996 |\n",
            "|    std                | 1        |\n",
            "|    value_loss         | 12.9     |\n",
            "------------------------------------\n",
            "day: 3019, episode: 15\n",
            "begin_total_asset: 1000000.00\n",
            "end_total_asset: 5523810.54\n",
            "total_reward: 4523810.54\n",
            "total_cost: 231135.20\n",
            "total_trades: 69670\n",
            "Sharpe: 0.838\n",
            "=================================\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 9100      |\n",
            "|    time_elapsed       | 566       |\n",
            "|    total_timesteps    | 45500     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.8     |\n",
            "|    explained_variance | 4.23e-05  |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 9099      |\n",
            "|    policy_loss        | 44        |\n",
            "|    reward             | 1.0696703 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 1.82      |\n",
            "-------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 9200      |\n",
            "|    time_elapsed       | 573       |\n",
            "|    total_timesteps    | 46000     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.8     |\n",
            "|    explained_variance | -7.99e-06 |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 9199      |\n",
            "|    policy_loss        | 40.1      |\n",
            "|    reward             | 1.2277242 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 7.25      |\n",
            "-------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 80         |\n",
            "|    iterations         | 9300       |\n",
            "|    time_elapsed       | 579        |\n",
            "|    total_timesteps    | 46500      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.8      |\n",
            "|    explained_variance | -0.35      |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 9299       |\n",
            "|    policy_loss        | -110       |\n",
            "|    reward             | -0.7076343 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 7.42       |\n",
            "--------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 9400      |\n",
            "|    time_elapsed       | 585       |\n",
            "|    total_timesteps    | 47000     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.8     |\n",
            "|    explained_variance | -0.0439   |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 9399      |\n",
            "|    policy_loss        | -235      |\n",
            "|    reward             | 2.4241505 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 39        |\n",
            "-------------------------------------\n",
            "---------------------------------------\n",
            "| time/                 |             |\n",
            "|    fps                | 80          |\n",
            "|    iterations         | 9500        |\n",
            "|    time_elapsed       | 591         |\n",
            "|    total_timesteps    | 47500       |\n",
            "| train/                |             |\n",
            "|    entropy_loss       | -39.8       |\n",
            "|    explained_variance | 1.19e-07    |\n",
            "|    learning_rate      | 0.0002      |\n",
            "|    n_updates          | 9499        |\n",
            "|    policy_loss        | 155         |\n",
            "|    reward             | -0.60691977 |\n",
            "|    std                | 1           |\n",
            "|    value_loss         | 22.9        |\n",
            "---------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 9600      |\n",
            "|    time_elapsed       | 598       |\n",
            "|    total_timesteps    | 48000     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.8     |\n",
            "|    explained_variance | 0.0234    |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 9599      |\n",
            "|    policy_loss        | 220       |\n",
            "|    reward             | 5.5528235 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 39        |\n",
            "-------------------------------------\n",
            "---------------------------------------\n",
            "| time/                 |             |\n",
            "|    fps                | 80          |\n",
            "|    iterations         | 9700        |\n",
            "|    time_elapsed       | 604         |\n",
            "|    total_timesteps    | 48500       |\n",
            "| train/                |             |\n",
            "|    entropy_loss       | -39.8       |\n",
            "|    explained_variance | 0.103       |\n",
            "|    learning_rate      | 0.0002      |\n",
            "|    n_updates          | 9699        |\n",
            "|    policy_loss        | 51.6        |\n",
            "|    reward             | -0.44794646 |\n",
            "|    std                | 1           |\n",
            "|    value_loss         | 3.05        |\n",
            "---------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 9800      |\n",
            "|    time_elapsed       | 610       |\n",
            "|    total_timesteps    | 49000     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.8     |\n",
            "|    explained_variance | -0.00599  |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 9799      |\n",
            "|    policy_loss        | 12.3      |\n",
            "|    reward             | 1.7414727 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 6.61      |\n",
            "-------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 9900      |\n",
            "|    time_elapsed       | 617       |\n",
            "|    total_timesteps    | 49500     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.8     |\n",
            "|    explained_variance | 0         |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 9899      |\n",
            "|    policy_loss        | 85.9      |\n",
            "|    reward             | 1.2846979 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 5.5       |\n",
            "-------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 80         |\n",
            "|    iterations         | 10000      |\n",
            "|    time_elapsed       | 623        |\n",
            "|    total_timesteps    | 50000      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.8      |\n",
            "|    explained_variance | 0.0174     |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 9999       |\n",
            "|    policy_loss        | 398        |\n",
            "|    reward             | -4.2614985 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 127        |\n",
            "--------------------------------------\n",
            "======A2C Validation from:  2020-12-31 to  2021-04-05\n",
            "A2C Sharpe Ratio:  0.14591402505464282\n",
            "======PPO Training========\n",
            "{'n_steps': 2048, 'ent_coef': 0.005, 'learning_rate': 0.0001, 'batch_size': 128}\n",
            "Using cpu device\n",
            "Logging to tensorboard_log/ppo/ppo_378_1\n",
            "-----------------------------------\n",
            "| time/              |            |\n",
            "|    fps             | 84         |\n",
            "|    iterations      | 1          |\n",
            "|    time_elapsed    | 24         |\n",
            "|    total_timesteps | 2048       |\n",
            "| train/             |            |\n",
            "|    reward          | 0.15512301 |\n",
            "-----------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 83          |\n",
            "|    iterations           | 2           |\n",
            "|    time_elapsed         | 48          |\n",
            "|    total_timesteps      | 4096        |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.010611374 |\n",
            "|    clip_fraction        | 0.144       |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.7       |\n",
            "|    explained_variance   | -0.0559     |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 7.69        |\n",
            "|    n_updates            | 10          |\n",
            "|    policy_gradient_loss | -0.0202     |\n",
            "|    reward               | -3.2448409  |\n",
            "|    std                  | 0.999       |\n",
            "|    value_loss           | 12.7        |\n",
            "-----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 82          |\n",
            "|    iterations           | 3           |\n",
            "|    time_elapsed         | 74          |\n",
            "|    total_timesteps      | 6144        |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.008203922 |\n",
            "|    clip_fraction        | 0.0699      |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.7       |\n",
            "|    explained_variance   | 0.00177     |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 29.8        |\n",
            "|    n_updates            | 20          |\n",
            "|    policy_gradient_loss | -0.0113     |\n",
            "|    reward               | -0.06416797 |\n",
            "|    std                  | 0.999       |\n",
            "|    value_loss           | 80.9        |\n",
            "-----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 82          |\n",
            "|    iterations           | 4           |\n",
            "|    time_elapsed         | 99          |\n",
            "|    total_timesteps      | 8192        |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.009239891 |\n",
            "|    clip_fraction        | 0.0778      |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.7       |\n",
            "|    explained_variance   | -0.00283    |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 50.3        |\n",
            "|    n_updates            | 30          |\n",
            "|    policy_gradient_loss | -0.0157     |\n",
            "|    reward               | -0.6848947  |\n",
            "|    std                  | 0.999       |\n",
            "|    value_loss           | 87.5        |\n",
            "-----------------------------------------\n",
            "day: 3019, episode: 20\n",
            "begin_total_asset: 1000000.00\n",
            "end_total_asset: 4242587.44\n",
            "total_reward: 3242587.44\n",
            "total_cost: 357134.12\n",
            "total_trades: 80471\n",
            "Sharpe: 0.733\n",
            "=================================\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 82          |\n",
            "|    iterations           | 5           |\n",
            "|    time_elapsed         | 124         |\n",
            "|    total_timesteps      | 10240       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.009872449 |\n",
            "|    clip_fraction        | 0.083       |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.7       |\n",
            "|    explained_variance   | -0.0515     |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 10.3        |\n",
            "|    n_updates            | 40          |\n",
            "|    policy_gradient_loss | -0.019      |\n",
            "|    reward               | 1.0716332   |\n",
            "|    std                  | 0.999       |\n",
            "|    value_loss           | 18.3        |\n",
            "-----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 81          |\n",
            "|    iterations           | 6           |\n",
            "|    time_elapsed         | 149         |\n",
            "|    total_timesteps      | 12288       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.009750484 |\n",
            "|    clip_fraction        | 0.047       |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.7       |\n",
            "|    explained_variance   | -0.0351     |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 49.2        |\n",
            "|    n_updates            | 50          |\n",
            "|    policy_gradient_loss | -0.0124     |\n",
            "|    reward               | 2.675655    |\n",
            "|    std                  | 0.999       |\n",
            "|    value_loss           | 81.2        |\n",
            "-----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 82          |\n",
            "|    iterations           | 7           |\n",
            "|    time_elapsed         | 174         |\n",
            "|    total_timesteps      | 14336       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.010591689 |\n",
            "|    clip_fraction        | 0.0817      |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.7       |\n",
            "|    explained_variance   | -0.00454    |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 74.8        |\n",
            "|    n_updates            | 60          |\n",
            "|    policy_gradient_loss | -0.0154     |\n",
            "|    reward               | 0.7471951   |\n",
            "|    std                  | 1           |\n",
            "|    value_loss           | 105         |\n",
            "-----------------------------------------\n",
            "----------------------------------------\n",
            "| time/                   |            |\n",
            "|    fps                  | 81         |\n",
            "|    iterations           | 8          |\n",
            "|    time_elapsed         | 200        |\n",
            "|    total_timesteps      | 16384      |\n",
            "| train/                  |            |\n",
            "|    approx_kl            | 0.01196316 |\n",
            "|    clip_fraction        | 0.116      |\n",
            "|    clip_range           | 0.2        |\n",
            "|    entropy_loss         | -39.7      |\n",
            "|    explained_variance   | -0.0457    |\n",
            "|    learning_rate        | 0.0001     |\n",
            "|    loss                 | 8.83       |\n",
            "|    n_updates            | 70         |\n",
            "|    policy_gradient_loss | -0.0227    |\n",
            "|    reward               | -0.4153768 |\n",
            "|    std                  | 1          |\n",
            "|    value_loss           | 13.2       |\n",
            "----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 81          |\n",
            "|    iterations           | 9           |\n",
            "|    time_elapsed         | 226         |\n",
            "|    total_timesteps      | 18432       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.013357198 |\n",
            "|    clip_fraction        | 0.107       |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.7       |\n",
            "|    explained_variance   | 0.00148     |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 40.5        |\n",
            "|    n_updates            | 80          |\n",
            "|    policy_gradient_loss | -0.0182     |\n",
            "|    reward               | -0.42991337 |\n",
            "|    std                  | 1           |\n",
            "|    value_loss           | 69.1        |\n",
            "-----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 81          |\n",
            "|    iterations           | 10          |\n",
            "|    time_elapsed         | 252         |\n",
            "|    total_timesteps      | 20480       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.010979662 |\n",
            "|    clip_fraction        | 0.0869      |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.8       |\n",
            "|    explained_variance   | -0.0102     |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 81          |\n",
            "|    n_updates            | 90          |\n",
            "|    policy_gradient_loss | -0.0156     |\n",
            "|    reward               | -0.4514763  |\n",
            "|    std                  | 1           |\n",
            "|    value_loss           | 140         |\n",
            "-----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 81          |\n",
            "|    iterations           | 11          |\n",
            "|    time_elapsed         | 277         |\n",
            "|    total_timesteps      | 22528       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.009857629 |\n",
            "|    clip_fraction        | 0.106       |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.8       |\n",
            "|    explained_variance   | 0.00104     |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 9.12        |\n",
            "|    n_updates            | 100         |\n",
            "|    policy_gradient_loss | -0.0193     |\n",
            "|    reward               | -0.4102763  |\n",
            "|    std                  | 1           |\n",
            "|    value_loss           | 18.8        |\n",
            "-----------------------------------------\n",
            "day: 3019, episode: 25\n",
            "begin_total_asset: 1000000.00\n",
            "end_total_asset: 5023692.93\n",
            "total_reward: 4023692.93\n",
            "total_cost: 330030.39\n",
            "total_trades: 78620\n",
            "Sharpe: 0.668\n",
            "=================================\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 81          |\n",
            "|    iterations           | 12          |\n",
            "|    time_elapsed         | 302         |\n",
            "|    total_timesteps      | 24576       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.011100176 |\n",
            "|    clip_fraction        | 0.0779      |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.8       |\n",
            "|    explained_variance   | 0.00371     |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 32.3        |\n",
            "|    n_updates            | 110         |\n",
            "|    policy_gradient_loss | -0.0169     |\n",
            "|    reward               | 1.3270409   |\n",
            "|    std                  | 1           |\n",
            "|    value_loss           | 82.4        |\n",
            "-----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 81          |\n",
            "|    iterations           | 13          |\n",
            "|    time_elapsed         | 328         |\n",
            "|    total_timesteps      | 26624       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.008675154 |\n",
            "|    clip_fraction        | 0.0509      |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.8       |\n",
            "|    explained_variance   | -0.0157     |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 331         |\n",
            "|    n_updates            | 120         |\n",
            "|    policy_gradient_loss | -0.0128     |\n",
            "|    reward               | 11.507553   |\n",
            "|    std                  | 1           |\n",
            "|    value_loss           | 558         |\n",
            "-----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 81          |\n",
            "|    iterations           | 14          |\n",
            "|    time_elapsed         | 353         |\n",
            "|    total_timesteps      | 28672       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.011199402 |\n",
            "|    clip_fraction        | 0.0956      |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.8       |\n",
            "|    explained_variance   | -0.0123     |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 19.7        |\n",
            "|    n_updates            | 130         |\n",
            "|    policy_gradient_loss | -0.0192     |\n",
            "|    reward               | 1.4369757   |\n",
            "|    std                  | 1           |\n",
            "|    value_loss           | 45.9        |\n",
            "-----------------------------------------\n",
            "------------------------------------------\n",
            "| time/                   |              |\n",
            "|    fps                  | 81           |\n",
            "|    iterations           | 15           |\n",
            "|    time_elapsed         | 377          |\n",
            "|    total_timesteps      | 30720        |\n",
            "| train/                  |              |\n",
            "|    approx_kl            | 0.0097814165 |\n",
            "|    clip_fraction        | 0.0797       |\n",
            "|    clip_range           | 0.2          |\n",
            "|    entropy_loss         | -39.8        |\n",
            "|    explained_variance   | -0.00108     |\n",
            "|    learning_rate        | 0.0001       |\n",
            "|    loss                 | 92.5         |\n",
            "|    n_updates            | 140          |\n",
            "|    policy_gradient_loss | -0.0194      |\n",
            "|    reward               | -0.70488775  |\n",
            "|    std                  | 1            |\n",
            "|    value_loss           | 241          |\n",
            "------------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 81          |\n",
            "|    iterations           | 16          |\n",
            "|    time_elapsed         | 402         |\n",
            "|    total_timesteps      | 32768       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.010219527 |\n",
            "|    clip_fraction        | 0.089       |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.8       |\n",
            "|    explained_variance   | -0.00165    |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 151         |\n",
            "|    n_updates            | 150         |\n",
            "|    policy_gradient_loss | -0.0152     |\n",
            "|    reward               | 1.2442852   |\n",
            "|    std                  | 1           |\n",
            "|    value_loss           | 348         |\n",
            "-----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 81          |\n",
            "|    iterations           | 17          |\n",
            "|    time_elapsed         | 426         |\n",
            "|    total_timesteps      | 34816       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.009268803 |\n",
            "|    clip_fraction        | 0.0411      |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.8       |\n",
            "|    explained_variance   | -0.00487    |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 80.2        |\n",
            "|    n_updates            | 160         |\n",
            "|    policy_gradient_loss | -0.0116     |\n",
            "|    reward               | 0.931457    |\n",
            "|    std                  | 1           |\n",
            "|    value_loss           | 135         |\n",
            "-----------------------------------------\n",
            "---------------------------------------\n",
            "| time/                   |           |\n",
            "|    fps                  | 81        |\n",
            "|    iterations           | 18        |\n",
            "|    time_elapsed         | 451       |\n",
            "|    total_timesteps      | 36864     |\n",
            "| train/                  |           |\n",
            "|    approx_kl            | 0.0082037 |\n",
            "|    clip_fraction        | 0.0576    |\n",
            "|    clip_range           | 0.2       |\n",
            "|    entropy_loss         | -39.8     |\n",
            "|    explained_variance   | -0.00216  |\n",
            "|    learning_rate        | 0.0001    |\n",
            "|    loss                 | 236       |\n",
            "|    n_updates            | 170       |\n",
            "|    policy_gradient_loss | -0.0148   |\n",
            "|    reward               | -1.083262 |\n",
            "|    std                  | 1         |\n",
            "|    value_loss           | 364       |\n",
            "---------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 81          |\n",
            "|    iterations           | 19          |\n",
            "|    time_elapsed         | 476         |\n",
            "|    total_timesteps      | 38912       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.009768622 |\n",
            "|    clip_fraction        | 0.0667      |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.8       |\n",
            "|    explained_variance   | -0.0026     |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 141         |\n",
            "|    n_updates            | 180         |\n",
            "|    policy_gradient_loss | -0.0141     |\n",
            "|    reward               | 7.701024    |\n",
            "|    std                  | 1           |\n",
            "|    value_loss           | 353         |\n",
            "-----------------------------------------\n",
            "day: 3019, episode: 30\n",
            "begin_total_asset: 1000000.00\n",
            "end_total_asset: 5133856.51\n",
            "total_reward: 4133856.51\n",
            "total_cost: 327269.64\n",
            "total_trades: 78410\n",
            "Sharpe: 0.720\n",
            "=================================\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 81          |\n",
            "|    iterations           | 20          |\n",
            "|    time_elapsed         | 501         |\n",
            "|    total_timesteps      | 40960       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.014723059 |\n",
            "|    clip_fraction        | 0.131       |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.8       |\n",
            "|    explained_variance   | -0.0117     |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 48.2        |\n",
            "|    n_updates            | 190         |\n",
            "|    policy_gradient_loss | -0.0216     |\n",
            "|    reward               | 3.600306    |\n",
            "|    std                  | 1           |\n",
            "|    value_loss           | 110         |\n",
            "-----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 81          |\n",
            "|    iterations           | 21          |\n",
            "|    time_elapsed         | 526         |\n",
            "|    total_timesteps      | 43008       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.013082292 |\n",
            "|    clip_fraction        | 0.12        |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.8       |\n",
            "|    explained_variance   | -0.00121    |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 171         |\n",
            "|    n_updates            | 200         |\n",
            "|    policy_gradient_loss | -0.0195     |\n",
            "|    reward               | -3.0540679  |\n",
            "|    std                  | 1           |\n",
            "|    value_loss           | 259         |\n",
            "-----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 81          |\n",
            "|    iterations           | 22          |\n",
            "|    time_elapsed         | 551         |\n",
            "|    total_timesteps      | 45056       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.014384935 |\n",
            "|    clip_fraction        | 0.108       |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.8       |\n",
            "|    explained_variance   | -0.0071     |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 126         |\n",
            "|    n_updates            | 210         |\n",
            "|    policy_gradient_loss | -0.0152     |\n",
            "|    reward               | 3.1474504   |\n",
            "|    std                  | 1           |\n",
            "|    value_loss           | 164         |\n",
            "-----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 81          |\n",
            "|    iterations           | 23          |\n",
            "|    time_elapsed         | 577         |\n",
            "|    total_timesteps      | 47104       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.012628408 |\n",
            "|    clip_fraction        | 0.0896      |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.8       |\n",
            "|    explained_variance   | -0.00491    |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 71.7        |\n",
            "|    n_updates            | 220         |\n",
            "|    policy_gradient_loss | -0.0157     |\n",
            "|    reward               | 1.4464796   |\n",
            "|    std                  | 1           |\n",
            "|    value_loss           | 108         |\n",
            "-----------------------------------------\n",
            "----------------------------------------\n",
            "| time/                   |            |\n",
            "|    fps                  | 81         |\n",
            "|    iterations           | 24         |\n",
            "|    time_elapsed         | 602        |\n",
            "|    total_timesteps      | 49152      |\n",
            "| train/                  |            |\n",
            "|    approx_kl            | 0.01036668 |\n",
            "|    clip_fraction        | 0.104      |\n",
            "|    clip_range           | 0.2        |\n",
            "|    entropy_loss         | -39.8      |\n",
            "|    explained_variance   | 0.00516    |\n",
            "|    learning_rate        | 0.0001     |\n",
            "|    loss                 | 268        |\n",
            "|    n_updates            | 230        |\n",
            "|    policy_gradient_loss | -0.0136    |\n",
            "|    reward               | -1.6937536 |\n",
            "|    std                  | 1          |\n",
            "|    value_loss           | 269        |\n",
            "----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 81          |\n",
            "|    iterations           | 25          |\n",
            "|    time_elapsed         | 627         |\n",
            "|    total_timesteps      | 51200       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.013233116 |\n",
            "|    clip_fraction        | 0.102       |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.8       |\n",
            "|    explained_variance   | -0.00809    |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 94          |\n",
            "|    n_updates            | 240         |\n",
            "|    policy_gradient_loss | -0.0188     |\n",
            "|    reward               | 21.135027   |\n",
            "|    std                  | 1           |\n",
            "|    value_loss           | 292         |\n",
            "-----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 81          |\n",
            "|    iterations           | 26          |\n",
            "|    time_elapsed         | 652         |\n",
            "|    total_timesteps      | 53248       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.008188126 |\n",
            "|    clip_fraction        | 0.0584      |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.8       |\n",
            "|    explained_variance   | -0.00176    |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 88.3        |\n",
            "|    n_updates            | 250         |\n",
            "|    policy_gradient_loss | -0.0136     |\n",
            "|    reward               | -1.65856    |\n",
            "|    std                  | 1           |\n",
            "|    value_loss           | 325         |\n",
            "-----------------------------------------\n",
            "day: 3019, episode: 35\n",
            "begin_total_asset: 1000000.00\n",
            "end_total_asset: 4143320.47\n",
            "total_reward: 3143320.47\n",
            "total_cost: 326214.68\n",
            "total_trades: 78405\n",
            "Sharpe: 0.711\n",
            "=================================\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 81          |\n",
            "|    iterations           | 27          |\n",
            "|    time_elapsed         | 677         |\n",
            "|    total_timesteps      | 55296       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.012104958 |\n",
            "|    clip_fraction        | 0.0978      |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.8       |\n",
            "|    explained_variance   | 0.0299      |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 24.1        |\n",
            "|    n_updates            | 260         |\n",
            "|    policy_gradient_loss | -0.022      |\n",
            "|    reward               | -0.23965861 |\n",
            "|    std                  | 1           |\n",
            "|    value_loss           | 37.6        |\n",
            "-----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 81          |\n",
            "|    iterations           | 28          |\n",
            "|    time_elapsed         | 702         |\n",
            "|    total_timesteps      | 57344       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.012908186 |\n",
            "|    clip_fraction        | 0.117       |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.8       |\n",
            "|    explained_variance   | -0.0139     |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 53.5        |\n",
            "|    n_updates            | 270         |\n",
            "|    policy_gradient_loss | -0.0154     |\n",
            "|    reward               | 13.010689   |\n",
            "|    std                  | 1           |\n",
            "|    value_loss           | 119         |\n",
            "-----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 81          |\n",
            "|    iterations           | 29          |\n",
            "|    time_elapsed         | 727         |\n",
            "|    total_timesteps      | 59392       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.008849251 |\n",
            "|    clip_fraction        | 0.0574      |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.8       |\n",
            "|    explained_variance   | -0.00379    |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 25.7        |\n",
            "|    n_updates            | 280         |\n",
            "|    policy_gradient_loss | -0.0144     |\n",
            "|    reward               | -0.7769753  |\n",
            "|    std                  | 1           |\n",
            "|    value_loss           | 105         |\n",
            "-----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 81          |\n",
            "|    iterations           | 30          |\n",
            "|    time_elapsed         | 751         |\n",
            "|    total_timesteps      | 61440       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.01706928  |\n",
            "|    clip_fraction        | 0.182       |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.8       |\n",
            "|    explained_variance   | 0.00746     |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 9.28        |\n",
            "|    n_updates            | 290         |\n",
            "|    policy_gradient_loss | -0.024      |\n",
            "|    reward               | -0.11767815 |\n",
            "|    std                  | 1           |\n",
            "|    value_loss           | 20          |\n",
            "-----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 81          |\n",
            "|    iterations           | 31          |\n",
            "|    time_elapsed         | 776         |\n",
            "|    total_timesteps      | 63488       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.014784474 |\n",
            "|    clip_fraction        | 0.115       |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.8       |\n",
            "|    explained_variance   | -0.00291    |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 64.1        |\n",
            "|    n_updates            | 300         |\n",
            "|    policy_gradient_loss | -0.0179     |\n",
            "|    reward               | 0.40638652  |\n",
            "|    std                  | 1           |\n",
            "|    value_loss           | 100         |\n",
            "-----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 81          |\n",
            "|    iterations           | 32          |\n",
            "|    time_elapsed         | 800         |\n",
            "|    total_timesteps      | 65536       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.013375374 |\n",
            "|    clip_fraction        | 0.0757      |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.9       |\n",
            "|    explained_variance   | -0.00687    |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 51.4        |\n",
            "|    n_updates            | 310         |\n",
            "|    policy_gradient_loss | -0.0137     |\n",
            "|    reward               | -0.7045964  |\n",
            "|    std                  | 1           |\n",
            "|    value_loss           | 103         |\n",
            "-----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 81          |\n",
            "|    iterations           | 33          |\n",
            "|    time_elapsed         | 825         |\n",
            "|    total_timesteps      | 67584       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.02140881  |\n",
            "|    clip_fraction        | 0.222       |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.9       |\n",
            "|    explained_variance   | 0.01        |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 9.84        |\n",
            "|    n_updates            | 320         |\n",
            "|    policy_gradient_loss | -0.0244     |\n",
            "|    reward               | -0.20126185 |\n",
            "|    std                  | 1.01        |\n",
            "|    value_loss           | 18.9        |\n",
            "-----------------------------------------\n",
            "day: 3019, episode: 40\n",
            "begin_total_asset: 1000000.00\n",
            "end_total_asset: 3575511.66\n",
            "total_reward: 2575511.66\n",
            "total_cost: 302436.52\n",
            "total_trades: 76307\n",
            "Sharpe: 0.695\n",
            "=================================\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 81          |\n",
            "|    iterations           | 34          |\n",
            "|    time_elapsed         | 850         |\n",
            "|    total_timesteps      | 69632       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.012133062 |\n",
            "|    clip_fraction        | 0.0958      |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.9       |\n",
            "|    explained_variance   | -0.00429    |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 23          |\n",
            "|    n_updates            | 330         |\n",
            "|    policy_gradient_loss | -0.0183     |\n",
            "|    reward               | 1.2765559   |\n",
            "|    std                  | 1.01        |\n",
            "|    value_loss           | 86.8        |\n",
            "-----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 81          |\n",
            "|    iterations           | 35          |\n",
            "|    time_elapsed         | 875         |\n",
            "|    total_timesteps      | 71680       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.010140901 |\n",
            "|    clip_fraction        | 0.0767      |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.9       |\n",
            "|    explained_variance   | -0.0212     |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 16.2        |\n",
            "|    n_updates            | 340         |\n",
            "|    policy_gradient_loss | -0.0129     |\n",
            "|    reward               | 0.28904665  |\n",
            "|    std                  | 1.01        |\n",
            "|    value_loss           | 47.9        |\n",
            "-----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 81          |\n",
            "|    iterations           | 36          |\n",
            "|    time_elapsed         | 900         |\n",
            "|    total_timesteps      | 73728       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.017772961 |\n",
            "|    clip_fraction        | 0.148       |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.9       |\n",
            "|    explained_variance   | -0.00277    |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 7.26        |\n",
            "|    n_updates            | 350         |\n",
            "|    policy_gradient_loss | -0.0258     |\n",
            "|    reward               | -0.61734575 |\n",
            "|    std                  | 1.01        |\n",
            "|    value_loss           | 11.5        |\n",
            "-----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 81          |\n",
            "|    iterations           | 37          |\n",
            "|    time_elapsed         | 925         |\n",
            "|    total_timesteps      | 75776       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.010443489 |\n",
            "|    clip_fraction        | 0.0645      |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.9       |\n",
            "|    explained_variance   | -0.00885    |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 17.3        |\n",
            "|    n_updates            | 360         |\n",
            "|    policy_gradient_loss | -0.0155     |\n",
            "|    reward               | -1.6549895  |\n",
            "|    std                  | 1.01        |\n",
            "|    value_loss           | 47.4        |\n",
            "-----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 81          |\n",
            "|    iterations           | 38          |\n",
            "|    time_elapsed         | 949         |\n",
            "|    total_timesteps      | 77824       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.010850934 |\n",
            "|    clip_fraction        | 0.0743      |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -40         |\n",
            "|    explained_variance   | -0.0271     |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 19.3        |\n",
            "|    n_updates            | 370         |\n",
            "|    policy_gradient_loss | -0.0162     |\n",
            "|    reward               | 1.1027085   |\n",
            "|    std                  | 1.01        |\n",
            "|    value_loss           | 80.5        |\n",
            "-----------------------------------------\n",
            "----------------------------------------\n",
            "| time/                   |            |\n",
            "|    fps                  | 81         |\n",
            "|    iterations           | 39         |\n",
            "|    time_elapsed         | 974        |\n",
            "|    total_timesteps      | 79872      |\n",
            "| train/                  |            |\n",
            "|    approx_kl            | 0.01414974 |\n",
            "|    clip_fraction        | 0.144      |\n",
            "|    clip_range           | 0.2        |\n",
            "|    entropy_loss         | -40        |\n",
            "|    explained_variance   | 0.0245     |\n",
            "|    learning_rate        | 0.0001     |\n",
            "|    loss                 | 8.52       |\n",
            "|    n_updates            | 380        |\n",
            "|    policy_gradient_loss | -0.0243    |\n",
            "|    reward               | 0.4197626  |\n",
            "|    std                  | 1.01       |\n",
            "|    value_loss           | 16.7       |\n",
            "----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 81          |\n",
            "|    iterations           | 40          |\n",
            "|    time_elapsed         | 999         |\n",
            "|    total_timesteps      | 81920       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.013101715 |\n",
            "|    clip_fraction        | 0.122       |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -40         |\n",
            "|    explained_variance   | -0.00911    |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 12.3        |\n",
            "|    n_updates            | 390         |\n",
            "|    policy_gradient_loss | -0.0163     |\n",
            "|    reward               | 0.94876695  |\n",
            "|    std                  | 1.01        |\n",
            "|    value_loss           | 51.8        |\n",
            "-----------------------------------------\n",
            "======PPO Validation from:  2020-12-31 to  2021-04-05\n",
            "PPO Sharpe Ratio:  0.24494153804254964\n",
            "======DDPG Training========\n",
            "{'batch_size': 128, 'buffer_size': 50000, 'learning_rate': 0.001}\n",
            "Using cpu device\n",
            "Logging to tensorboard_log/ddpg/ddpg_378_1\n",
            "----------------------------------\n",
            "| time/              |           |\n",
            "|    episodes        | 4         |\n",
            "|    fps             | 30        |\n",
            "|    time_elapsed    | 394       |\n",
            "|    total_timesteps | 12080     |\n",
            "| train/             |           |\n",
            "|    actor_loss      | -19.2     |\n",
            "|    critic_loss     | 640       |\n",
            "|    learning_rate   | 0.001     |\n",
            "|    n_updates       | 9060      |\n",
            "|    reward          | 3.3597207 |\n",
            "----------------------------------\n",
            "day: 3019, episode: 50\n",
            "begin_total_asset: 1000000.00\n",
            "end_total_asset: 5063355.74\n",
            "total_reward: 4063355.74\n",
            "total_cost: 999.00\n",
            "total_trades: 36198\n",
            "Sharpe: 0.849\n",
            "=================================\n",
            "----------------------------------\n",
            "| time/              |           |\n",
            "|    episodes        | 8         |\n",
            "|    fps             | 27        |\n",
            "|    time_elapsed    | 886       |\n",
            "|    total_timesteps | 24160     |\n",
            "| train/             |           |\n",
            "|    actor_loss      | -11       |\n",
            "|    critic_loss     | 17.1      |\n",
            "|    learning_rate   | 0.001     |\n",
            "|    n_updates       | 21140     |\n",
            "|    reward          | 3.3597207 |\n",
            "----------------------------------\n",
            "day: 3019, episode: 55\n",
            "begin_total_asset: 1000000.00\n",
            "end_total_asset: 5063355.74\n",
            "total_reward: 4063355.74\n",
            "total_cost: 999.00\n",
            "total_trades: 36198\n",
            "Sharpe: 0.849\n",
            "=================================\n",
            "----------------------------------\n",
            "| time/              |           |\n",
            "|    episodes        | 12        |\n",
            "|    fps             | 26        |\n",
            "|    time_elapsed    | 1385      |\n",
            "|    total_timesteps | 36240     |\n",
            "| train/             |           |\n",
            "|    actor_loss      | -12.7     |\n",
            "|    critic_loss     | 4.26      |\n",
            "|    learning_rate   | 0.001     |\n",
            "|    n_updates       | 33220     |\n",
            "|    reward          | 3.3597207 |\n",
            "----------------------------------\n",
            "day: 3019, episode: 60\n",
            "begin_total_asset: 1000000.00\n",
            "end_total_asset: 5063355.74\n",
            "total_reward: 4063355.74\n",
            "total_cost: 999.00\n",
            "total_trades: 36198\n",
            "Sharpe: 0.849\n",
            "=================================\n",
            "----------------------------------\n",
            "| time/              |           |\n",
            "|    episodes        | 16        |\n",
            "|    fps             | 25        |\n",
            "|    time_elapsed    | 1895      |\n",
            "|    total_timesteps | 48320     |\n",
            "| train/             |           |\n",
            "|    actor_loss      | -13       |\n",
            "|    critic_loss     | 2.87      |\n",
            "|    learning_rate   | 0.001     |\n",
            "|    n_updates       | 45300     |\n",
            "|    reward          | 3.3597207 |\n",
            "----------------------------------\n",
            "======DDPG Validation from:  2020-12-31 to  2021-04-05\n",
            "======Best Model Retraining from:  2009-01-01 to  2021-04-05\n",
            "======Trading from:  2021-04-05 to  2021-07-02\n",
            "============================================\n",
            "turbulence_threshold:  200.70054590266477\n",
            "======Model training from:  2009-01-01 to  2021-04-05\n",
            "======A2C Training========\n",
            "{'n_steps': 5, 'ent_coef': 0.005, 'learning_rate': 0.0002}\n",
            "Using cpu device\n",
            "Logging to tensorboard_log/a2c/a2c_441_1\n",
            "----------------------------------------\n",
            "| time/                 |              |\n",
            "|    fps                | 76           |\n",
            "|    iterations         | 100          |\n",
            "|    time_elapsed       | 6            |\n",
            "|    total_timesteps    | 500          |\n",
            "| train/                |              |\n",
            "|    entropy_loss       | -39.7        |\n",
            "|    explained_variance | -0.993       |\n",
            "|    learning_rate      | 0.0002       |\n",
            "|    n_updates          | 99           |\n",
            "|    policy_loss        | 11.8         |\n",
            "|    reward             | -0.027180493 |\n",
            "|    std                | 1            |\n",
            "|    value_loss         | 0.292        |\n",
            "----------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 79         |\n",
            "|    iterations         | 200        |\n",
            "|    time_elapsed       | 12         |\n",
            "|    total_timesteps    | 1000       |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.7      |\n",
            "|    explained_variance | -0.203     |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 199        |\n",
            "|    policy_loss        | -25.1      |\n",
            "|    reward             | -1.6885313 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 0.655      |\n",
            "--------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 79        |\n",
            "|    iterations         | 300       |\n",
            "|    time_elapsed       | 18        |\n",
            "|    total_timesteps    | 1500      |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.8     |\n",
            "|    explained_variance | -0.16     |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 299       |\n",
            "|    policy_loss        | -204      |\n",
            "|    reward             | 3.9610283 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 27.8      |\n",
            "-------------------------------------\n",
            "---------------------------------------\n",
            "| time/                 |             |\n",
            "|    fps                | 79          |\n",
            "|    iterations         | 400         |\n",
            "|    time_elapsed       | 25          |\n",
            "|    total_timesteps    | 2000        |\n",
            "| train/                |             |\n",
            "|    entropy_loss       | -39.7       |\n",
            "|    explained_variance | 0.07        |\n",
            "|    learning_rate      | 0.0002      |\n",
            "|    n_updates          | 399         |\n",
            "|    policy_loss        | -19.8       |\n",
            "|    reward             | -0.58092904 |\n",
            "|    std                | 1           |\n",
            "|    value_loss         | 5.43        |\n",
            "---------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 78        |\n",
            "|    iterations         | 500       |\n",
            "|    time_elapsed       | 31        |\n",
            "|    total_timesteps    | 2500      |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.7     |\n",
            "|    explained_variance | 0.0386    |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 499       |\n",
            "|    policy_loss        | 494       |\n",
            "|    reward             | -8.845637 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 239       |\n",
            "-------------------------------------\n",
            "------------------------------------\n",
            "| time/                 |          |\n",
            "|    fps                | 76       |\n",
            "|    iterations         | 600      |\n",
            "|    time_elapsed       | 39       |\n",
            "|    total_timesteps    | 3000     |\n",
            "| train/                |          |\n",
            "|    entropy_loss       | -39.7    |\n",
            "|    explained_variance | 0.0811   |\n",
            "|    learning_rate      | 0.0002   |\n",
            "|    n_updates          | 599      |\n",
            "|    policy_loss        | 259      |\n",
            "|    reward             | 5.633222 |\n",
            "|    std                | 1        |\n",
            "|    value_loss         | 61.3     |\n",
            "------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 76        |\n",
            "|    iterations         | 700       |\n",
            "|    time_elapsed       | 45        |\n",
            "|    total_timesteps    | 3500      |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.7     |\n",
            "|    explained_variance | -0.0744   |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 699       |\n",
            "|    policy_loss        | -92.4     |\n",
            "|    reward             | -1.919949 |\n",
            "|    std                | 0.999     |\n",
            "|    value_loss         | 6.6       |\n",
            "-------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 77        |\n",
            "|    iterations         | 800       |\n",
            "|    time_elapsed       | 51        |\n",
            "|    total_timesteps    | 4000      |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.7     |\n",
            "|    explained_variance | -0.0161   |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 799       |\n",
            "|    policy_loss        | 39        |\n",
            "|    reward             | 0.3672872 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 1.01      |\n",
            "-------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 77        |\n",
            "|    iterations         | 900       |\n",
            "|    time_elapsed       | 57        |\n",
            "|    total_timesteps    | 4500      |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.7     |\n",
            "|    explained_variance | -0.0589   |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 899       |\n",
            "|    policy_loss        | 135       |\n",
            "|    reward             | 2.0396879 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 12.8      |\n",
            "-------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 78        |\n",
            "|    iterations         | 1000      |\n",
            "|    time_elapsed       | 63        |\n",
            "|    total_timesteps    | 5000      |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.7     |\n",
            "|    explained_variance | -0.0108   |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 999       |\n",
            "|    policy_loss        | 207       |\n",
            "|    reward             | 1.1035672 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 33.6      |\n",
            "-------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 78         |\n",
            "|    iterations         | 1100       |\n",
            "|    time_elapsed       | 70         |\n",
            "|    total_timesteps    | 5500       |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.7      |\n",
            "|    explained_variance | -1.19e-07  |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 1099       |\n",
            "|    policy_loss        | -102       |\n",
            "|    reward             | -2.2678385 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 8.83       |\n",
            "--------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 78        |\n",
            "|    iterations         | 1200      |\n",
            "|    time_elapsed       | 76        |\n",
            "|    total_timesteps    | 6000      |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.7     |\n",
            "|    explained_variance | 0.0126    |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 1199      |\n",
            "|    policy_loss        | 197       |\n",
            "|    reward             | 6.0807586 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 42.3      |\n",
            "-------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 78        |\n",
            "|    iterations         | 1300      |\n",
            "|    time_elapsed       | 82        |\n",
            "|    total_timesteps    | 6500      |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.7     |\n",
            "|    explained_variance | 0.0015    |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 1299      |\n",
            "|    policy_loss        | 81.3      |\n",
            "|    reward             | 2.2241576 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 4.63      |\n",
            "-------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 78        |\n",
            "|    iterations         | 1400      |\n",
            "|    time_elapsed       | 88        |\n",
            "|    total_timesteps    | 7000      |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.7     |\n",
            "|    explained_variance | -0.666    |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 1399      |\n",
            "|    policy_loss        | 81        |\n",
            "|    reward             | 1.4344658 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 7.42      |\n",
            "-------------------------------------\n",
            "------------------------------------\n",
            "| time/                 |          |\n",
            "|    fps                | 79       |\n",
            "|    iterations         | 1500     |\n",
            "|    time_elapsed       | 94       |\n",
            "|    total_timesteps    | 7500     |\n",
            "| train/                |          |\n",
            "|    entropy_loss       | -39.7    |\n",
            "|    explained_variance | 0.117    |\n",
            "|    learning_rate      | 0.0002   |\n",
            "|    n_updates          | 1499     |\n",
            "|    policy_loss        | 27.2     |\n",
            "|    reward             | 0.79907  |\n",
            "|    std                | 1        |\n",
            "|    value_loss         | 4.81     |\n",
            "------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 79        |\n",
            "|    iterations         | 1600      |\n",
            "|    time_elapsed       | 101       |\n",
            "|    total_timesteps    | 8000      |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.7     |\n",
            "|    explained_variance | 0         |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 1599      |\n",
            "|    policy_loss        | -9.45     |\n",
            "|    reward             | 1.9257128 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 1.78      |\n",
            "-------------------------------------\n",
            "------------------------------------\n",
            "| time/                 |          |\n",
            "|    fps                | 79       |\n",
            "|    iterations         | 1700     |\n",
            "|    time_elapsed       | 107      |\n",
            "|    total_timesteps    | 8500     |\n",
            "| train/                |          |\n",
            "|    entropy_loss       | -39.8    |\n",
            "|    explained_variance | 0.0936   |\n",
            "|    learning_rate      | 0.0002   |\n",
            "|    n_updates          | 1699     |\n",
            "|    policy_loss        | 275      |\n",
            "|    reward             | 5.815108 |\n",
            "|    std                | 1        |\n",
            "|    value_loss         | 50.5     |\n",
            "------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 79        |\n",
            "|    iterations         | 1800      |\n",
            "|    time_elapsed       | 113       |\n",
            "|    total_timesteps    | 9000      |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.8     |\n",
            "|    explained_variance | -0.0268   |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 1799      |\n",
            "|    policy_loss        | 420       |\n",
            "|    reward             | 3.6924353 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 353       |\n",
            "-------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 79         |\n",
            "|    iterations         | 1900       |\n",
            "|    time_elapsed       | 119        |\n",
            "|    total_timesteps    | 9500       |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.8      |\n",
            "|    explained_variance | -0.656     |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 1899       |\n",
            "|    policy_loss        | 13.8       |\n",
            "|    reward             | -1.0327688 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 0.911      |\n",
            "--------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 79         |\n",
            "|    iterations         | 2000       |\n",
            "|    time_elapsed       | 125        |\n",
            "|    total_timesteps    | 10000      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.7      |\n",
            "|    explained_variance | 0.00756    |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 1999       |\n",
            "|    policy_loss        | -55.2      |\n",
            "|    reward             | 0.77965885 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 8.65       |\n",
            "--------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 79        |\n",
            "|    iterations         | 2100      |\n",
            "|    time_elapsed       | 132       |\n",
            "|    total_timesteps    | 10500     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.8     |\n",
            "|    explained_variance | -0.173    |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 2099      |\n",
            "|    policy_loss        | -50.8     |\n",
            "|    reward             | 1.4803922 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 2.91      |\n",
            "-------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 79        |\n",
            "|    iterations         | 2200      |\n",
            "|    time_elapsed       | 138       |\n",
            "|    total_timesteps    | 11000     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.8     |\n",
            "|    explained_variance | -0.0595   |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 2199      |\n",
            "|    policy_loss        | -143      |\n",
            "|    reward             | 5.9432144 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 15.4      |\n",
            "-------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 79         |\n",
            "|    iterations         | 2300       |\n",
            "|    time_elapsed       | 144        |\n",
            "|    total_timesteps    | 11500      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.7      |\n",
            "|    explained_variance | -0.00106   |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 2299       |\n",
            "|    policy_loss        | 261        |\n",
            "|    reward             | -0.7441754 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 62.4       |\n",
            "--------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 79        |\n",
            "|    iterations         | 2400      |\n",
            "|    time_elapsed       | 151       |\n",
            "|    total_timesteps    | 12000     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.8     |\n",
            "|    explained_variance | -0.00235  |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 2399      |\n",
            "|    policy_loss        | 70.5      |\n",
            "|    reward             | 3.7138457 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 13.6      |\n",
            "-------------------------------------\n",
            "---------------------------------------\n",
            "| time/                 |             |\n",
            "|    fps                | 79          |\n",
            "|    iterations         | 2500        |\n",
            "|    time_elapsed       | 157         |\n",
            "|    total_timesteps    | 12500       |\n",
            "| train/                |             |\n",
            "|    entropy_loss       | -39.8       |\n",
            "|    explained_variance | 5.96e-08    |\n",
            "|    learning_rate      | 0.0002      |\n",
            "|    n_updates          | 2499        |\n",
            "|    policy_loss        | 41.3        |\n",
            "|    reward             | -0.55961204 |\n",
            "|    std                | 1           |\n",
            "|    value_loss         | 2.48        |\n",
            "---------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 79        |\n",
            "|    iterations         | 2600      |\n",
            "|    time_elapsed       | 163       |\n",
            "|    total_timesteps    | 13000     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.8     |\n",
            "|    explained_variance | -0.0527   |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 2599      |\n",
            "|    policy_loss        | -154      |\n",
            "|    reward             | 1.2812023 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 17        |\n",
            "-------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 79         |\n",
            "|    iterations         | 2700       |\n",
            "|    time_elapsed       | 169        |\n",
            "|    total_timesteps    | 13500      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.8      |\n",
            "|    explained_variance | 0.0111     |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 2699       |\n",
            "|    policy_loss        | -165       |\n",
            "|    reward             | 0.34391114 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 19.7       |\n",
            "--------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 79         |\n",
            "|    iterations         | 2800       |\n",
            "|    time_elapsed       | 175        |\n",
            "|    total_timesteps    | 14000      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.8      |\n",
            "|    explained_variance | 0.0185     |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 2799       |\n",
            "|    policy_loss        | -57.1      |\n",
            "|    reward             | -2.7908797 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 5.51       |\n",
            "--------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 79        |\n",
            "|    iterations         | 2900      |\n",
            "|    time_elapsed       | 182       |\n",
            "|    total_timesteps    | 14500     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.8     |\n",
            "|    explained_variance | -0.0875   |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 2899      |\n",
            "|    policy_loss        | 87.9      |\n",
            "|    reward             | 3.3372908 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 6.34      |\n",
            "-------------------------------------\n",
            "---------------------------------------\n",
            "| time/                 |             |\n",
            "|    fps                | 79          |\n",
            "|    iterations         | 3000        |\n",
            "|    time_elapsed       | 188         |\n",
            "|    total_timesteps    | 15000       |\n",
            "| train/                |             |\n",
            "|    entropy_loss       | -39.8       |\n",
            "|    explained_variance | -0.0106     |\n",
            "|    learning_rate      | 0.0002      |\n",
            "|    n_updates          | 2999        |\n",
            "|    policy_loss        | -270        |\n",
            "|    reward             | 0.011408384 |\n",
            "|    std                | 1           |\n",
            "|    value_loss         | 79.2        |\n",
            "---------------------------------------\n",
            "day: 3082, episode: 5\n",
            "begin_total_asset: 1000000.00\n",
            "end_total_asset: 6829161.79\n",
            "total_reward: 5829161.79\n",
            "total_cost: 318565.64\n",
            "total_trades: 75816\n",
            "Sharpe: 0.909\n",
            "=================================\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 79        |\n",
            "|    iterations         | 3100      |\n",
            "|    time_elapsed       | 194       |\n",
            "|    total_timesteps    | 15500     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.8     |\n",
            "|    explained_variance | -1.19e-07 |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 3099      |\n",
            "|    policy_loss        | 55.2      |\n",
            "|    reward             | 1.4627053 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 2.23      |\n",
            "-------------------------------------\n",
            "------------------------------------\n",
            "| time/                 |          |\n",
            "|    fps                | 79       |\n",
            "|    iterations         | 3200     |\n",
            "|    time_elapsed       | 200      |\n",
            "|    total_timesteps    | 16000    |\n",
            "| train/                |          |\n",
            "|    entropy_loss       | -39.8    |\n",
            "|    explained_variance | -0.473   |\n",
            "|    learning_rate      | 0.0002   |\n",
            "|    n_updates          | 3199     |\n",
            "|    policy_loss        | 79.7     |\n",
            "|    reward             | 0.814957 |\n",
            "|    std                | 1        |\n",
            "|    value_loss         | 5.18     |\n",
            "------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 79         |\n",
            "|    iterations         | 3300       |\n",
            "|    time_elapsed       | 206        |\n",
            "|    total_timesteps    | 16500      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.8      |\n",
            "|    explained_variance | 0.0583     |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 3299       |\n",
            "|    policy_loss        | -64        |\n",
            "|    reward             | 0.79901737 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 7.83       |\n",
            "--------------------------------------\n",
            "------------------------------------\n",
            "| time/                 |          |\n",
            "|    fps                | 79       |\n",
            "|    iterations         | 3400     |\n",
            "|    time_elapsed       | 213      |\n",
            "|    total_timesteps    | 17000    |\n",
            "| train/                |          |\n",
            "|    entropy_loss       | -39.8    |\n",
            "|    explained_variance | -0.376   |\n",
            "|    learning_rate      | 0.0002   |\n",
            "|    n_updates          | 3399     |\n",
            "|    policy_loss        | 181      |\n",
            "|    reward             | 0.794205 |\n",
            "|    std                | 1        |\n",
            "|    value_loss         | 20.9     |\n",
            "------------------------------------\n",
            "------------------------------------\n",
            "| time/                 |          |\n",
            "|    fps                | 79       |\n",
            "|    iterations         | 3500     |\n",
            "|    time_elapsed       | 219      |\n",
            "|    total_timesteps    | 17500    |\n",
            "| train/                |          |\n",
            "|    entropy_loss       | -39.8    |\n",
            "|    explained_variance | -0.349   |\n",
            "|    learning_rate      | 0.0002   |\n",
            "|    n_updates          | 3499     |\n",
            "|    policy_loss        | -48.2    |\n",
            "|    reward             | 4.026995 |\n",
            "|    std                | 1        |\n",
            "|    value_loss         | 2.77     |\n",
            "------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 79        |\n",
            "|    iterations         | 3600      |\n",
            "|    time_elapsed       | 225       |\n",
            "|    total_timesteps    | 18000     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.8     |\n",
            "|    explained_variance | 0.0246    |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 3599      |\n",
            "|    policy_loss        | 356       |\n",
            "|    reward             | 2.7593522 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 124       |\n",
            "-------------------------------------\n",
            "---------------------------------------\n",
            "| time/                 |             |\n",
            "|    fps                | 79          |\n",
            "|    iterations         | 3700        |\n",
            "|    time_elapsed       | 231         |\n",
            "|    total_timesteps    | 18500       |\n",
            "| train/                |             |\n",
            "|    entropy_loss       | -39.8       |\n",
            "|    explained_variance | 0.00142     |\n",
            "|    learning_rate      | 0.0002      |\n",
            "|    n_updates          | 3699        |\n",
            "|    policy_loss        | 303         |\n",
            "|    reward             | 0.017655732 |\n",
            "|    std                | 1           |\n",
            "|    value_loss         | 93.3        |\n",
            "---------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 79         |\n",
            "|    iterations         | 3800       |\n",
            "|    time_elapsed       | 238        |\n",
            "|    total_timesteps    | 19000      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.8      |\n",
            "|    explained_variance | -1.84      |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 3799       |\n",
            "|    policy_loss        | 54.9       |\n",
            "|    reward             | -0.3053791 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 2.29       |\n",
            "--------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 79         |\n",
            "|    iterations         | 3900       |\n",
            "|    time_elapsed       | 244        |\n",
            "|    total_timesteps    | 19500      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.8      |\n",
            "|    explained_variance | -0.0396    |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 3899       |\n",
            "|    policy_loss        | 57.5       |\n",
            "|    reward             | -0.6290011 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 2.89       |\n",
            "--------------------------------------\n",
            "----------------------------------------\n",
            "| time/                 |              |\n",
            "|    fps                | 79           |\n",
            "|    iterations         | 4000         |\n",
            "|    time_elapsed       | 250          |\n",
            "|    total_timesteps    | 20000        |\n",
            "| train/                |              |\n",
            "|    entropy_loss       | -39.8        |\n",
            "|    explained_variance | 0.173        |\n",
            "|    learning_rate      | 0.0002       |\n",
            "|    n_updates          | 3999         |\n",
            "|    policy_loss        | -291         |\n",
            "|    reward             | -0.029133761 |\n",
            "|    std                | 1            |\n",
            "|    value_loss         | 71.7         |\n",
            "----------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 79         |\n",
            "|    iterations         | 4100       |\n",
            "|    time_elapsed       | 256        |\n",
            "|    total_timesteps    | 20500      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.8      |\n",
            "|    explained_variance | 0.128      |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 4099       |\n",
            "|    policy_loss        | 134        |\n",
            "|    reward             | -2.8181577 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 11.2       |\n",
            "--------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 79         |\n",
            "|    iterations         | 4200       |\n",
            "|    time_elapsed       | 263        |\n",
            "|    total_timesteps    | 21000      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.7      |\n",
            "|    explained_variance | 0.0329     |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 4199       |\n",
            "|    policy_loss        | 1.24e+03   |\n",
            "|    reward             | -3.5492897 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 1.09e+03   |\n",
            "--------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 79         |\n",
            "|    iterations         | 4300       |\n",
            "|    time_elapsed       | 269        |\n",
            "|    total_timesteps    | 21500      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.7      |\n",
            "|    explained_variance | -0.00498   |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 4299       |\n",
            "|    policy_loss        | 278        |\n",
            "|    reward             | -3.1519432 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 79.3       |\n",
            "--------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 79        |\n",
            "|    iterations         | 4400      |\n",
            "|    time_elapsed       | 275       |\n",
            "|    total_timesteps    | 22000     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.8     |\n",
            "|    explained_variance | 0.0171    |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 4399      |\n",
            "|    policy_loss        | -107      |\n",
            "|    reward             | 2.6457865 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 10.4      |\n",
            "-------------------------------------\n",
            "------------------------------------\n",
            "| time/                 |          |\n",
            "|    fps                | 79       |\n",
            "|    iterations         | 4500     |\n",
            "|    time_elapsed       | 282      |\n",
            "|    total_timesteps    | 22500    |\n",
            "| train/                |          |\n",
            "|    entropy_loss       | -39.8    |\n",
            "|    explained_variance | -0.322   |\n",
            "|    learning_rate      | 0.0002   |\n",
            "|    n_updates          | 4499     |\n",
            "|    policy_loss        | 41.5     |\n",
            "|    reward             | 0.787389 |\n",
            "|    std                | 1        |\n",
            "|    value_loss         | 1.38     |\n",
            "------------------------------------\n",
            "---------------------------------------\n",
            "| time/                 |             |\n",
            "|    fps                | 79          |\n",
            "|    iterations         | 4600        |\n",
            "|    time_elapsed       | 288         |\n",
            "|    total_timesteps    | 23000       |\n",
            "| train/                |             |\n",
            "|    entropy_loss       | -39.8       |\n",
            "|    explained_variance | -0.0203     |\n",
            "|    learning_rate      | 0.0002      |\n",
            "|    n_updates          | 4599        |\n",
            "|    policy_loss        | 33.9        |\n",
            "|    reward             | -0.24721546 |\n",
            "|    std                | 1           |\n",
            "|    value_loss         | 2.33        |\n",
            "---------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 79         |\n",
            "|    iterations         | 4700       |\n",
            "|    time_elapsed       | 294        |\n",
            "|    total_timesteps    | 23500      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.8      |\n",
            "|    explained_variance | 0.0117     |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 4699       |\n",
            "|    policy_loss        | 17.5       |\n",
            "|    reward             | 0.24243219 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 1.07       |\n",
            "--------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 79         |\n",
            "|    iterations         | 4800       |\n",
            "|    time_elapsed       | 300        |\n",
            "|    total_timesteps    | 24000      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.8      |\n",
            "|    explained_variance | 5.96e-08   |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 4799       |\n",
            "|    policy_loss        | -106       |\n",
            "|    reward             | -2.9797769 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 17         |\n",
            "--------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 79        |\n",
            "|    iterations         | 4900      |\n",
            "|    time_elapsed       | 306       |\n",
            "|    total_timesteps    | 24500     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.7     |\n",
            "|    explained_variance | -0.318    |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 4899      |\n",
            "|    policy_loss        | -289      |\n",
            "|    reward             | 5.3136835 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 72.8      |\n",
            "-------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 79         |\n",
            "|    iterations         | 5000       |\n",
            "|    time_elapsed       | 312        |\n",
            "|    total_timesteps    | 25000      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.8      |\n",
            "|    explained_variance | -0.0945    |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 4999       |\n",
            "|    policy_loss        | -69.6      |\n",
            "|    reward             | -0.9171515 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 5.67       |\n",
            "--------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 79         |\n",
            "|    iterations         | 5100       |\n",
            "|    time_elapsed       | 318        |\n",
            "|    total_timesteps    | 25500      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.8      |\n",
            "|    explained_variance | -1.03      |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 5099       |\n",
            "|    policy_loss        | -1.85      |\n",
            "|    reward             | 0.20832019 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 1.23       |\n",
            "--------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 79         |\n",
            "|    iterations         | 5200       |\n",
            "|    time_elapsed       | 325        |\n",
            "|    total_timesteps    | 26000      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.7      |\n",
            "|    explained_variance | 0.0509     |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 5199       |\n",
            "|    policy_loss        | 153        |\n",
            "|    reward             | -1.4207923 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 16.6       |\n",
            "--------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 80         |\n",
            "|    iterations         | 5300       |\n",
            "|    time_elapsed       | 331        |\n",
            "|    total_timesteps    | 26500      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.7      |\n",
            "|    explained_variance | 0.0475     |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 5299       |\n",
            "|    policy_loss        | 144        |\n",
            "|    reward             | -2.1760123 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 16.8       |\n",
            "--------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 5400      |\n",
            "|    time_elapsed       | 337       |\n",
            "|    total_timesteps    | 27000     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.7     |\n",
            "|    explained_variance | 0.163     |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 5399      |\n",
            "|    policy_loss        | -149      |\n",
            "|    reward             | 2.2678075 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 27.6      |\n",
            "-------------------------------------\n",
            "------------------------------------\n",
            "| time/                 |          |\n",
            "|    fps                | 80       |\n",
            "|    iterations         | 5500     |\n",
            "|    time_elapsed       | 343      |\n",
            "|    total_timesteps    | 27500    |\n",
            "| train/                |          |\n",
            "|    entropy_loss       | -39.7    |\n",
            "|    explained_variance | 0.0261   |\n",
            "|    learning_rate      | 0.0002   |\n",
            "|    n_updates          | 5499     |\n",
            "|    policy_loss        | -283     |\n",
            "|    reward             | 4.897041 |\n",
            "|    std                | 1        |\n",
            "|    value_loss         | 103      |\n",
            "------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 5600      |\n",
            "|    time_elapsed       | 349       |\n",
            "|    total_timesteps    | 28000     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.7     |\n",
            "|    explained_variance | -1.63     |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 5599      |\n",
            "|    policy_loss        | -12.8     |\n",
            "|    reward             | 1.8974308 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 1.04      |\n",
            "-------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 80         |\n",
            "|    iterations         | 5700       |\n",
            "|    time_elapsed       | 355        |\n",
            "|    total_timesteps    | 28500      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.7      |\n",
            "|    explained_variance | -0.473     |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 5699       |\n",
            "|    policy_loss        | 139        |\n",
            "|    reward             | -2.0011725 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 12.3       |\n",
            "--------------------------------------\n",
            "------------------------------------\n",
            "| time/                 |          |\n",
            "|    fps                | 80       |\n",
            "|    iterations         | 5800     |\n",
            "|    time_elapsed       | 361      |\n",
            "|    total_timesteps    | 29000    |\n",
            "| train/                |          |\n",
            "|    entropy_loss       | -39.7    |\n",
            "|    explained_variance | -0.167   |\n",
            "|    learning_rate      | 0.0002   |\n",
            "|    n_updates          | 5799     |\n",
            "|    policy_loss        | 0.408    |\n",
            "|    reward             | 1.35223  |\n",
            "|    std                | 1        |\n",
            "|    value_loss         | 1.61     |\n",
            "------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 80         |\n",
            "|    iterations         | 5900       |\n",
            "|    time_elapsed       | 368        |\n",
            "|    total_timesteps    | 29500      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.7      |\n",
            "|    explained_variance | -0.0236    |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 5899       |\n",
            "|    policy_loss        | -366       |\n",
            "|    reward             | -2.8095522 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 87.6       |\n",
            "--------------------------------------\n",
            "------------------------------------\n",
            "| time/                 |          |\n",
            "|    fps                | 80       |\n",
            "|    iterations         | 6000     |\n",
            "|    time_elapsed       | 374      |\n",
            "|    total_timesteps    | 30000    |\n",
            "| train/                |          |\n",
            "|    entropy_loss       | -39.7    |\n",
            "|    explained_variance | -0.00934 |\n",
            "|    learning_rate      | 0.0002   |\n",
            "|    n_updates          | 5999     |\n",
            "|    policy_loss        | -80.9    |\n",
            "|    reward             | 6.110949 |\n",
            "|    std                | 1        |\n",
            "|    value_loss         | 9.83     |\n",
            "------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 6100      |\n",
            "|    time_elapsed       | 380       |\n",
            "|    total_timesteps    | 30500     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.7     |\n",
            "|    explained_variance | 0.000925  |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 6099      |\n",
            "|    policy_loss        | -514      |\n",
            "|    reward             | -1.098496 |\n",
            "|    std                | 0.999     |\n",
            "|    value_loss         | 178       |\n",
            "-------------------------------------\n",
            "day: 3082, episode: 10\n",
            "begin_total_asset: 1000000.00\n",
            "end_total_asset: 5645429.10\n",
            "total_reward: 4645429.10\n",
            "total_cost: 221296.36\n",
            "total_trades: 66328\n",
            "Sharpe: 0.738\n",
            "=================================\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 6200      |\n",
            "|    time_elapsed       | 386       |\n",
            "|    total_timesteps    | 31000     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.7     |\n",
            "|    explained_variance | 0.346     |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 6199      |\n",
            "|    policy_loss        | 7.84      |\n",
            "|    reward             | 1.1273996 |\n",
            "|    std                | 0.998     |\n",
            "|    value_loss         | 0.202     |\n",
            "-------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 6300      |\n",
            "|    time_elapsed       | 393       |\n",
            "|    total_timesteps    | 31500     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.7     |\n",
            "|    explained_variance | 0.0244    |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 6299      |\n",
            "|    policy_loss        | -23.8     |\n",
            "|    reward             | 1.3421278 |\n",
            "|    std                | 0.998     |\n",
            "|    value_loss         | 18.1      |\n",
            "-------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 6400      |\n",
            "|    time_elapsed       | 399       |\n",
            "|    total_timesteps    | 32000     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.7     |\n",
            "|    explained_variance | 0.0242    |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 6399      |\n",
            "|    policy_loss        | -71.3     |\n",
            "|    reward             | -3.554315 |\n",
            "|    std                | 0.998     |\n",
            "|    value_loss         | 6.36      |\n",
            "-------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 80         |\n",
            "|    iterations         | 6500       |\n",
            "|    time_elapsed       | 405        |\n",
            "|    total_timesteps    | 32500      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.7      |\n",
            "|    explained_variance | 0.044      |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 6499       |\n",
            "|    policy_loss        | 19         |\n",
            "|    reward             | -7.6071653 |\n",
            "|    std                | 0.999      |\n",
            "|    value_loss         | 3.03       |\n",
            "--------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 6600      |\n",
            "|    time_elapsed       | 411       |\n",
            "|    total_timesteps    | 33000     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.7     |\n",
            "|    explained_variance | 0.181     |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 6599      |\n",
            "|    policy_loss        | -42.3     |\n",
            "|    reward             | 2.7005677 |\n",
            "|    std                | 0.999     |\n",
            "|    value_loss         | 2.02      |\n",
            "-------------------------------------\n",
            "------------------------------------\n",
            "| time/                 |          |\n",
            "|    fps                | 80       |\n",
            "|    iterations         | 6700     |\n",
            "|    time_elapsed       | 417      |\n",
            "|    total_timesteps    | 33500    |\n",
            "| train/                |          |\n",
            "|    entropy_loss       | -39.7    |\n",
            "|    explained_variance | -0.00498 |\n",
            "|    learning_rate      | 0.0002   |\n",
            "|    n_updates          | 6699     |\n",
            "|    policy_loss        | -448     |\n",
            "|    reward             | 7.430381 |\n",
            "|    std                | 1        |\n",
            "|    value_loss         | 243      |\n",
            "------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 6800      |\n",
            "|    time_elapsed       | 424       |\n",
            "|    total_timesteps    | 34000     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.7     |\n",
            "|    explained_variance | -1.19e-07 |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 6799      |\n",
            "|    policy_loss        | 53.6      |\n",
            "|    reward             | 3.4810941 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 2.98      |\n",
            "-------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 80         |\n",
            "|    iterations         | 6900       |\n",
            "|    time_elapsed       | 430        |\n",
            "|    total_timesteps    | 34500      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.7      |\n",
            "|    explained_variance | -0.0624    |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 6899       |\n",
            "|    policy_loss        | 109        |\n",
            "|    reward             | 0.23998302 |\n",
            "|    std                | 0.999      |\n",
            "|    value_loss         | 10.5       |\n",
            "--------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 80         |\n",
            "|    iterations         | 7000       |\n",
            "|    time_elapsed       | 436        |\n",
            "|    total_timesteps    | 35000      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.7      |\n",
            "|    explained_variance | -0.0806    |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 6999       |\n",
            "|    policy_loss        | 128        |\n",
            "|    reward             | 0.34927213 |\n",
            "|    std                | 0.999      |\n",
            "|    value_loss         | 12.7       |\n",
            "--------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 80         |\n",
            "|    iterations         | 7100       |\n",
            "|    time_elapsed       | 442        |\n",
            "|    total_timesteps    | 35500      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.7      |\n",
            "|    explained_variance | 0          |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 7099       |\n",
            "|    policy_loss        | -136       |\n",
            "|    reward             | -1.1476699 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 13         |\n",
            "--------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 80         |\n",
            "|    iterations         | 7200       |\n",
            "|    time_elapsed       | 448        |\n",
            "|    total_timesteps    | 36000      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.7      |\n",
            "|    explained_variance | -0.00129   |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 7199       |\n",
            "|    policy_loss        | 6.23       |\n",
            "|    reward             | -1.0564696 |\n",
            "|    std                | 0.999      |\n",
            "|    value_loss         | 0.379      |\n",
            "--------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 7300      |\n",
            "|    time_elapsed       | 454       |\n",
            "|    total_timesteps    | 36500     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.7     |\n",
            "|    explained_variance | -0.0271   |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 7299      |\n",
            "|    policy_loss        | 72.6      |\n",
            "|    reward             | -2.244928 |\n",
            "|    std                | 0.999     |\n",
            "|    value_loss         | 4.71      |\n",
            "-------------------------------------\n",
            "----------------------------------------\n",
            "| time/                 |              |\n",
            "|    fps                | 80           |\n",
            "|    iterations         | 7400         |\n",
            "|    time_elapsed       | 460          |\n",
            "|    total_timesteps    | 37000        |\n",
            "| train/                |              |\n",
            "|    entropy_loss       | -39.7        |\n",
            "|    explained_variance | 0.0173       |\n",
            "|    learning_rate      | 0.0002       |\n",
            "|    n_updates          | 7399         |\n",
            "|    policy_loss        | 22.4         |\n",
            "|    reward             | -0.016317908 |\n",
            "|    std                | 1            |\n",
            "|    value_loss         | 7.39         |\n",
            "----------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 7500      |\n",
            "|    time_elapsed       | 466       |\n",
            "|    total_timesteps    | 37500     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.7     |\n",
            "|    explained_variance | -0.426    |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 7499      |\n",
            "|    policy_loss        | 31.8      |\n",
            "|    reward             | 2.4033659 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 1.68      |\n",
            "-------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 80         |\n",
            "|    iterations         | 7600       |\n",
            "|    time_elapsed       | 472        |\n",
            "|    total_timesteps    | 38000      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.7      |\n",
            "|    explained_variance | 0.119      |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 7599       |\n",
            "|    policy_loss        | 97.4       |\n",
            "|    reward             | -1.5013684 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 8.18       |\n",
            "--------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 7700      |\n",
            "|    time_elapsed       | 478       |\n",
            "|    total_timesteps    | 38500     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.7     |\n",
            "|    explained_variance | -0.205    |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 7699      |\n",
            "|    policy_loss        | -264      |\n",
            "|    reward             | 1.4882449 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 62.2      |\n",
            "-------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 7800      |\n",
            "|    time_elapsed       | 484       |\n",
            "|    total_timesteps    | 39000     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.7     |\n",
            "|    explained_variance | -0.422    |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 7799      |\n",
            "|    policy_loss        | 275       |\n",
            "|    reward             | -2.787526 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 72.9      |\n",
            "-------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 80         |\n",
            "|    iterations         | 7900       |\n",
            "|    time_elapsed       | 490        |\n",
            "|    total_timesteps    | 39500      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.7      |\n",
            "|    explained_variance | 0.011      |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 7899       |\n",
            "|    policy_loss        | -426       |\n",
            "|    reward             | 0.31486222 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 160        |\n",
            "--------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 8000      |\n",
            "|    time_elapsed       | 496       |\n",
            "|    total_timesteps    | 40000     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.8     |\n",
            "|    explained_variance | -0.0679   |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 7999      |\n",
            "|    policy_loss        | -59.6     |\n",
            "|    reward             | 1.0417596 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 18.6      |\n",
            "-------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 8100      |\n",
            "|    time_elapsed       | 503       |\n",
            "|    total_timesteps    | 40500     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.8     |\n",
            "|    explained_variance | -0.0299   |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 8099      |\n",
            "|    policy_loss        | -83.3     |\n",
            "|    reward             | 4.2479935 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 10.3      |\n",
            "-------------------------------------\n",
            "---------------------------------------\n",
            "| time/                 |             |\n",
            "|    fps                | 80          |\n",
            "|    iterations         | 8200        |\n",
            "|    time_elapsed       | 509         |\n",
            "|    total_timesteps    | 41000       |\n",
            "| train/                |             |\n",
            "|    entropy_loss       | -39.8       |\n",
            "|    explained_variance | -0.0597     |\n",
            "|    learning_rate      | 0.0002      |\n",
            "|    n_updates          | 8199        |\n",
            "|    policy_loss        | 44.3        |\n",
            "|    reward             | 0.094114535 |\n",
            "|    std                | 1           |\n",
            "|    value_loss         | 2.7         |\n",
            "---------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 8300      |\n",
            "|    time_elapsed       | 515       |\n",
            "|    total_timesteps    | 41500     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.8     |\n",
            "|    explained_variance | -0.0805   |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 8299      |\n",
            "|    policy_loss        | 43.6      |\n",
            "|    reward             | 0.1151018 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 1.84      |\n",
            "-------------------------------------\n",
            "---------------------------------------\n",
            "| time/                 |             |\n",
            "|    fps                | 80          |\n",
            "|    iterations         | 8400        |\n",
            "|    time_elapsed       | 521         |\n",
            "|    total_timesteps    | 42000       |\n",
            "| train/                |             |\n",
            "|    entropy_loss       | -39.8       |\n",
            "|    explained_variance | -0.55       |\n",
            "|    learning_rate      | 0.0002      |\n",
            "|    n_updates          | 8399        |\n",
            "|    policy_loss        | 9.15        |\n",
            "|    reward             | -0.09264791 |\n",
            "|    std                | 1           |\n",
            "|    value_loss         | 0.372       |\n",
            "---------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 80         |\n",
            "|    iterations         | 8500       |\n",
            "|    time_elapsed       | 527        |\n",
            "|    total_timesteps    | 42500      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.8      |\n",
            "|    explained_variance | -0.0619    |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 8499       |\n",
            "|    policy_loss        | 9.08       |\n",
            "|    reward             | -1.5959861 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 1.54       |\n",
            "--------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 8600      |\n",
            "|    time_elapsed       | 533       |\n",
            "|    total_timesteps    | 43000     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.8     |\n",
            "|    explained_variance | 0.000723  |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 8599      |\n",
            "|    policy_loss        | -86.3     |\n",
            "|    reward             | 0.7921349 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 14.6      |\n",
            "-------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 80         |\n",
            "|    iterations         | 8700       |\n",
            "|    time_elapsed       | 540        |\n",
            "|    total_timesteps    | 43500      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.8      |\n",
            "|    explained_variance | 0.0915     |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 8699       |\n",
            "|    policy_loss        | -151       |\n",
            "|    reward             | -1.3987125 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 15.8       |\n",
            "--------------------------------------\n",
            "---------------------------------------\n",
            "| time/                 |             |\n",
            "|    fps                | 80          |\n",
            "|    iterations         | 8800        |\n",
            "|    time_elapsed       | 546         |\n",
            "|    total_timesteps    | 44000       |\n",
            "| train/                |             |\n",
            "|    entropy_loss       | -39.8       |\n",
            "|    explained_variance | 0.179       |\n",
            "|    learning_rate      | 0.0002      |\n",
            "|    n_updates          | 8799        |\n",
            "|    policy_loss        | 15          |\n",
            "|    reward             | 0.038411494 |\n",
            "|    std                | 1           |\n",
            "|    value_loss         | 0.7         |\n",
            "---------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 8900      |\n",
            "|    time_elapsed       | 552       |\n",
            "|    total_timesteps    | 44500     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.8     |\n",
            "|    explained_variance | -0.638    |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 8899      |\n",
            "|    policy_loss        | 140       |\n",
            "|    reward             | 1.3646356 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 14.9      |\n",
            "-------------------------------------\n",
            "--------------------------------------\n",
            "| time/                 |            |\n",
            "|    fps                | 80         |\n",
            "|    iterations         | 9000       |\n",
            "|    time_elapsed       | 558        |\n",
            "|    total_timesteps    | 45000      |\n",
            "| train/                |            |\n",
            "|    entropy_loss       | -39.8      |\n",
            "|    explained_variance | -0.0499    |\n",
            "|    learning_rate      | 0.0002     |\n",
            "|    n_updates          | 8999       |\n",
            "|    policy_loss        | 138        |\n",
            "|    reward             | 0.30523288 |\n",
            "|    std                | 1          |\n",
            "|    value_loss         | 22.2       |\n",
            "--------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 9100      |\n",
            "|    time_elapsed       | 564       |\n",
            "|    total_timesteps    | 45500     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.8     |\n",
            "|    explained_variance | -0.265    |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 9099      |\n",
            "|    policy_loss        | 1.07      |\n",
            "|    reward             | 1.7815148 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 12.6      |\n",
            "-------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 9200      |\n",
            "|    time_elapsed       | 571       |\n",
            "|    total_timesteps    | 46000     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.8     |\n",
            "|    explained_variance | 0.175     |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 9199      |\n",
            "|    policy_loss        | 498       |\n",
            "|    reward             | 2.9461427 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 207       |\n",
            "-------------------------------------\n",
            "day: 3082, episode: 15\n",
            "begin_total_asset: 1000000.00\n",
            "end_total_asset: 3342864.64\n",
            "total_reward: 2342864.64\n",
            "total_cost: 248123.50\n",
            "total_trades: 67481\n",
            "Sharpe: 0.541\n",
            "=================================\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 9300      |\n",
            "|    time_elapsed       | 577       |\n",
            "|    total_timesteps    | 46500     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.8     |\n",
            "|    explained_variance | 0         |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 9299      |\n",
            "|    policy_loss        | 22.7      |\n",
            "|    reward             | 2.5810552 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 0.409     |\n",
            "-------------------------------------\n",
            "---------------------------------------\n",
            "| time/                 |             |\n",
            "|    fps                | 80          |\n",
            "|    iterations         | 9400        |\n",
            "|    time_elapsed       | 583         |\n",
            "|    total_timesteps    | 47000       |\n",
            "| train/                |             |\n",
            "|    entropy_loss       | -39.8       |\n",
            "|    explained_variance | -0.0593     |\n",
            "|    learning_rate      | 0.0002      |\n",
            "|    n_updates          | 9399        |\n",
            "|    policy_loss        | 129         |\n",
            "|    reward             | -0.75229555 |\n",
            "|    std                | 1           |\n",
            "|    value_loss         | 13.8        |\n",
            "---------------------------------------\n",
            "---------------------------------------\n",
            "| time/                 |             |\n",
            "|    fps                | 80          |\n",
            "|    iterations         | 9500        |\n",
            "|    time_elapsed       | 590         |\n",
            "|    total_timesteps    | 47500       |\n",
            "| train/                |             |\n",
            "|    entropy_loss       | -39.7       |\n",
            "|    explained_variance | 0.066       |\n",
            "|    learning_rate      | 0.0002      |\n",
            "|    n_updates          | 9499        |\n",
            "|    policy_loss        | 82          |\n",
            "|    reward             | -0.26125044 |\n",
            "|    std                | 1           |\n",
            "|    value_loss         | 6.41        |\n",
            "---------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 9600      |\n",
            "|    time_elapsed       | 596       |\n",
            "|    total_timesteps    | 48000     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.8     |\n",
            "|    explained_variance | 1.19e-07  |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 9599      |\n",
            "|    policy_loss        | -86.4     |\n",
            "|    reward             | 2.9552104 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 14.9      |\n",
            "-------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 9700      |\n",
            "|    time_elapsed       | 602       |\n",
            "|    total_timesteps    | 48500     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.7     |\n",
            "|    explained_variance | 0.235     |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 9699      |\n",
            "|    policy_loss        | 47.8      |\n",
            "|    reward             | 2.2731562 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 2.34      |\n",
            "-------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 9800      |\n",
            "|    time_elapsed       | 609       |\n",
            "|    total_timesteps    | 49000     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.7     |\n",
            "|    explained_variance | 0.00246   |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 9799      |\n",
            "|    policy_loss        | -239      |\n",
            "|    reward             | 6.1218276 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 63.2      |\n",
            "-------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 9900      |\n",
            "|    time_elapsed       | 615       |\n",
            "|    total_timesteps    | 49500     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.7     |\n",
            "|    explained_variance | 0.000274  |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 9899      |\n",
            "|    policy_loss        | -146      |\n",
            "|    reward             | 1.7363278 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 14.9      |\n",
            "-------------------------------------\n",
            "-------------------------------------\n",
            "| time/                 |           |\n",
            "|    fps                | 80        |\n",
            "|    iterations         | 10000     |\n",
            "|    time_elapsed       | 621       |\n",
            "|    total_timesteps    | 50000     |\n",
            "| train/                |           |\n",
            "|    entropy_loss       | -39.8     |\n",
            "|    explained_variance | 0.124     |\n",
            "|    learning_rate      | 0.0002    |\n",
            "|    n_updates          | 9999      |\n",
            "|    policy_loss        | 36.4      |\n",
            "|    reward             | -1.994126 |\n",
            "|    std                | 1         |\n",
            "|    value_loss         | 2.78      |\n",
            "-------------------------------------\n",
            "======A2C Validation from:  2021-04-05 to  2021-07-02\n",
            "A2C Sharpe Ratio:  0.12367130988832517\n",
            "======PPO Training========\n",
            "{'n_steps': 2048, 'ent_coef': 0.005, 'learning_rate': 0.0001, 'batch_size': 128}\n",
            "Using cpu device\n",
            "Logging to tensorboard_log/ppo/ppo_441_1\n",
            "-------------------------------------\n",
            "| time/              |              |\n",
            "|    fps             | 84           |\n",
            "|    iterations      | 1            |\n",
            "|    time_elapsed    | 24           |\n",
            "|    total_timesteps | 2048         |\n",
            "| train/             |              |\n",
            "|    reward          | -0.062898874 |\n",
            "-------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 82          |\n",
            "|    iterations           | 2           |\n",
            "|    time_elapsed         | 49          |\n",
            "|    total_timesteps      | 4096        |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.008666212 |\n",
            "|    clip_fraction        | 0.117       |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.7       |\n",
            "|    explained_variance   | -0.016      |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 4.91        |\n",
            "|    n_updates            | 10          |\n",
            "|    policy_gradient_loss | -0.017      |\n",
            "|    reward               | 0.46268284  |\n",
            "|    std                  | 1           |\n",
            "|    value_loss           | 12.2        |\n",
            "-----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 83          |\n",
            "|    iterations           | 3           |\n",
            "|    time_elapsed         | 73          |\n",
            "|    total_timesteps      | 6144        |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.009633615 |\n",
            "|    clip_fraction        | 0.0502      |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.8       |\n",
            "|    explained_variance   | -0.00306    |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 37.8        |\n",
            "|    n_updates            | 20          |\n",
            "|    policy_gradient_loss | -0.0128     |\n",
            "|    reward               | -0.27740029 |\n",
            "|    std                  | 1           |\n",
            "|    value_loss           | 72          |\n",
            "-----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 84          |\n",
            "|    iterations           | 4           |\n",
            "|    time_elapsed         | 97          |\n",
            "|    total_timesteps      | 8192        |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.004432181 |\n",
            "|    clip_fraction        | 0.0101      |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.8       |\n",
            "|    explained_variance   | 0.00598     |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 27          |\n",
            "|    n_updates            | 30          |\n",
            "|    policy_gradient_loss | -0.00886    |\n",
            "|    reward               | 1.2674105   |\n",
            "|    std                  | 1           |\n",
            "|    value_loss           | 128         |\n",
            "-----------------------------------------\n",
            "day: 3082, episode: 20\n",
            "begin_total_asset: 1000000.00\n",
            "end_total_asset: 5005251.26\n",
            "total_reward: 4005251.26\n",
            "total_cost: 375548.33\n",
            "total_trades: 81832\n",
            "Sharpe: 0.840\n",
            "=================================\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 84          |\n",
            "|    iterations           | 5           |\n",
            "|    time_elapsed         | 121         |\n",
            "|    total_timesteps      | 10240       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.010925146 |\n",
            "|    clip_fraction        | 0.0859      |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.8       |\n",
            "|    explained_variance   | -0.0137     |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 4.77        |\n",
            "|    n_updates            | 40          |\n",
            "|    policy_gradient_loss | -0.0166     |\n",
            "|    reward               | 0.08515454  |\n",
            "|    std                  | 1           |\n",
            "|    value_loss           | 11.9        |\n",
            "-----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 84          |\n",
            "|    iterations           | 6           |\n",
            "|    time_elapsed         | 144         |\n",
            "|    total_timesteps      | 12288       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.008673757 |\n",
            "|    clip_fraction        | 0.0482      |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.8       |\n",
            "|    explained_variance   | -0.00667    |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 41.6        |\n",
            "|    n_updates            | 50          |\n",
            "|    policy_gradient_loss | -0.0145     |\n",
            "|    reward               | -5.802411   |\n",
            "|    std                  | 1           |\n",
            "|    value_loss           | 74.6        |\n",
            "-----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 84          |\n",
            "|    iterations           | 7           |\n",
            "|    time_elapsed         | 168         |\n",
            "|    total_timesteps      | 14336       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.010666786 |\n",
            "|    clip_fraction        | 0.075       |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.8       |\n",
            "|    explained_variance   | -0.00855    |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 47          |\n",
            "|    n_updates            | 60          |\n",
            "|    policy_gradient_loss | -0.0157     |\n",
            "|    reward               | -1.0681889  |\n",
            "|    std                  | 1           |\n",
            "|    value_loss           | 59.6        |\n",
            "-----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 84          |\n",
            "|    iterations           | 8           |\n",
            "|    time_elapsed         | 192         |\n",
            "|    total_timesteps      | 16384       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.009282038 |\n",
            "|    clip_fraction        | 0.0531      |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.8       |\n",
            "|    explained_variance   | -0.0101     |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 7.33        |\n",
            "|    n_updates            | 70          |\n",
            "|    policy_gradient_loss | -0.0151     |\n",
            "|    reward               | -3.128254   |\n",
            "|    std                  | 1           |\n",
            "|    value_loss           | 19.9        |\n",
            "-----------------------------------------\n",
            "----------------------------------------\n",
            "| time/                   |            |\n",
            "|    fps                  | 84         |\n",
            "|    iterations           | 9          |\n",
            "|    time_elapsed         | 217        |\n",
            "|    total_timesteps      | 18432      |\n",
            "| train/                  |            |\n",
            "|    approx_kl            | 0.00987994 |\n",
            "|    clip_fraction        | 0.0623     |\n",
            "|    clip_range           | 0.2        |\n",
            "|    entropy_loss         | -39.8      |\n",
            "|    explained_variance   | -0.0126    |\n",
            "|    learning_rate        | 0.0001     |\n",
            "|    loss                 | 38.5       |\n",
            "|    n_updates            | 80         |\n",
            "|    policy_gradient_loss | -0.0134    |\n",
            "|    reward               | 1.3322241  |\n",
            "|    std                  | 1          |\n",
            "|    value_loss           | 86.8       |\n",
            "----------------------------------------\n",
            "------------------------------------------\n",
            "| time/                   |              |\n",
            "|    fps                  | 84           |\n",
            "|    iterations           | 10           |\n",
            "|    time_elapsed         | 241          |\n",
            "|    total_timesteps      | 20480        |\n",
            "| train/                  |              |\n",
            "|    approx_kl            | 0.0120257195 |\n",
            "|    clip_fraction        | 0.0643       |\n",
            "|    clip_range           | 0.2          |\n",
            "|    entropy_loss         | -39.8        |\n",
            "|    explained_variance   | -0.0448      |\n",
            "|    learning_rate        | 0.0001       |\n",
            "|    loss                 | 20.2         |\n",
            "|    n_updates            | 90           |\n",
            "|    policy_gradient_loss | -0.0166      |\n",
            "|    reward               | -0.062145118 |\n",
            "|    std                  | 1            |\n",
            "|    value_loss           | 55.7         |\n",
            "------------------------------------------\n",
            "----------------------------------------\n",
            "| time/                   |            |\n",
            "|    fps                  | 84         |\n",
            "|    iterations           | 11         |\n",
            "|    time_elapsed         | 265        |\n",
            "|    total_timesteps      | 22528      |\n",
            "| train/                  |            |\n",
            "|    approx_kl            | 0.01349969 |\n",
            "|    clip_fraction        | 0.122      |\n",
            "|    clip_range           | 0.2        |\n",
            "|    entropy_loss         | -39.8      |\n",
            "|    explained_variance   | -0.0479    |\n",
            "|    learning_rate        | 0.0001     |\n",
            "|    loss                 | 10.5       |\n",
            "|    n_updates            | 100        |\n",
            "|    policy_gradient_loss | -0.018     |\n",
            "|    reward               | 0.65366066 |\n",
            "|    std                  | 1          |\n",
            "|    value_loss           | 17.9       |\n",
            "----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 84          |\n",
            "|    iterations           | 12          |\n",
            "|    time_elapsed         | 290         |\n",
            "|    total_timesteps      | 24576       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.009837636 |\n",
            "|    clip_fraction        | 0.0773      |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.8       |\n",
            "|    explained_variance   | -0.0173     |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 54.6        |\n",
            "|    n_updates            | 110         |\n",
            "|    policy_gradient_loss | -0.0117     |\n",
            "|    reward               | 4.358362    |\n",
            "|    std                  | 1           |\n",
            "|    value_loss           | 92          |\n",
            "-----------------------------------------\n",
            "day: 3082, episode: 25\n",
            "begin_total_asset: 1000000.00\n",
            "end_total_asset: 3625622.92\n",
            "total_reward: 2625622.92\n",
            "total_cost: 363288.33\n",
            "total_trades: 81046\n",
            "Sharpe: 0.713\n",
            "=================================\n",
            "------------------------------------------\n",
            "| time/                   |              |\n",
            "|    fps                  | 84           |\n",
            "|    iterations           | 13           |\n",
            "|    time_elapsed         | 313          |\n",
            "|    total_timesteps      | 26624        |\n",
            "| train/                  |              |\n",
            "|    approx_kl            | 0.0103158085 |\n",
            "|    clip_fraction        | 0.0665       |\n",
            "|    clip_range           | 0.2          |\n",
            "|    entropy_loss         | -39.8        |\n",
            "|    explained_variance   | -0.00642     |\n",
            "|    learning_rate        | 0.0001       |\n",
            "|    loss                 | 31.6         |\n",
            "|    n_updates            | 120          |\n",
            "|    policy_gradient_loss | -0.0138      |\n",
            "|    reward               | 0.2048868    |\n",
            "|    std                  | 1            |\n",
            "|    value_loss           | 43.2         |\n",
            "------------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 84          |\n",
            "|    iterations           | 14          |\n",
            "|    time_elapsed         | 338         |\n",
            "|    total_timesteps      | 28672       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.011179083 |\n",
            "|    clip_fraction        | 0.0936      |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.8       |\n",
            "|    explained_variance   | 0.015       |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 8.82        |\n",
            "|    n_updates            | 130         |\n",
            "|    policy_gradient_loss | -0.0191     |\n",
            "|    reward               | -0.72265035 |\n",
            "|    std                  | 1           |\n",
            "|    value_loss           | 13.8        |\n",
            "-----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 84          |\n",
            "|    iterations           | 15          |\n",
            "|    time_elapsed         | 362         |\n",
            "|    total_timesteps      | 30720       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.012122555 |\n",
            "|    clip_fraction        | 0.125       |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.8       |\n",
            "|    explained_variance   | 0.00183     |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 30.8        |\n",
            "|    n_updates            | 140         |\n",
            "|    policy_gradient_loss | -0.0179     |\n",
            "|    reward               | -8.110935   |\n",
            "|    std                  | 1           |\n",
            "|    value_loss           | 55.9        |\n",
            "-----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 84          |\n",
            "|    iterations           | 16          |\n",
            "|    time_elapsed         | 388         |\n",
            "|    total_timesteps      | 32768       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.011744676 |\n",
            "|    clip_fraction        | 0.0854      |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.8       |\n",
            "|    explained_variance   | 0.00537     |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 17.3        |\n",
            "|    n_updates            | 150         |\n",
            "|    policy_gradient_loss | -0.016      |\n",
            "|    reward               | -1.0863856  |\n",
            "|    std                  | 1           |\n",
            "|    value_loss           | 39.5        |\n",
            "-----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 84          |\n",
            "|    iterations           | 17          |\n",
            "|    time_elapsed         | 413         |\n",
            "|    total_timesteps      | 34816       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.013450885 |\n",
            "|    clip_fraction        | 0.139       |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.8       |\n",
            "|    explained_variance   | 0.0562      |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 7.89        |\n",
            "|    n_updates            | 160         |\n",
            "|    policy_gradient_loss | -0.0226     |\n",
            "|    reward               | -0.7658311  |\n",
            "|    std                  | 1           |\n",
            "|    value_loss           | 16.8        |\n",
            "-----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 84          |\n",
            "|    iterations           | 18          |\n",
            "|    time_elapsed         | 437         |\n",
            "|    total_timesteps      | 36864       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.012541338 |\n",
            "|    clip_fraction        | 0.0917      |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.8       |\n",
            "|    explained_variance   | 0.00798     |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 14          |\n",
            "|    n_updates            | 170         |\n",
            "|    policy_gradient_loss | -0.0139     |\n",
            "|    reward               | -8.675534   |\n",
            "|    std                  | 1           |\n",
            "|    value_loss           | 59.7        |\n",
            "-----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 84          |\n",
            "|    iterations           | 19          |\n",
            "|    time_elapsed         | 461         |\n",
            "|    total_timesteps      | 38912       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.011769562 |\n",
            "|    clip_fraction        | 0.0833      |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.8       |\n",
            "|    explained_variance   | -0.00799    |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 52.4        |\n",
            "|    n_updates            | 180         |\n",
            "|    policy_gradient_loss | -0.0156     |\n",
            "|    reward               | -0.20766738 |\n",
            "|    std                  | 1           |\n",
            "|    value_loss           | 62.7        |\n",
            "-----------------------------------------\n",
            "day: 3082, episode: 30\n",
            "begin_total_asset: 1000000.00\n",
            "end_total_asset: 4129566.39\n",
            "total_reward: 3129566.39\n",
            "total_cost: 350941.07\n",
            "total_trades: 80017\n",
            "Sharpe: 0.722\n",
            "=================================\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 84          |\n",
            "|    iterations           | 20          |\n",
            "|    time_elapsed         | 485         |\n",
            "|    total_timesteps      | 40960       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.012241296 |\n",
            "|    clip_fraction        | 0.114       |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.8       |\n",
            "|    explained_variance   | -0.00968    |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 14.9        |\n",
            "|    n_updates            | 190         |\n",
            "|    policy_gradient_loss | -0.0194     |\n",
            "|    reward               | 0.47991893  |\n",
            "|    std                  | 1           |\n",
            "|    value_loss           | 23.1        |\n",
            "-----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 84          |\n",
            "|    iterations           | 21          |\n",
            "|    time_elapsed         | 509         |\n",
            "|    total_timesteps      | 43008       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.008388544 |\n",
            "|    clip_fraction        | 0.0615      |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.8       |\n",
            "|    explained_variance   | -0.0168     |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 35.2        |\n",
            "|    n_updates            | 200         |\n",
            "|    policy_gradient_loss | -0.014      |\n",
            "|    reward               | 0.89317065  |\n",
            "|    std                  | 1           |\n",
            "|    value_loss           | 66.2        |\n",
            "-----------------------------------------\n",
            "----------------------------------------\n",
            "| time/                   |            |\n",
            "|    fps                  | 84         |\n",
            "|    iterations           | 22         |\n",
            "|    time_elapsed         | 534        |\n",
            "|    total_timesteps      | 45056      |\n",
            "| train/                  |            |\n",
            "|    approx_kl            | 0.009306   |\n",
            "|    clip_fraction        | 0.0642     |\n",
            "|    clip_range           | 0.2        |\n",
            "|    entropy_loss         | -39.9      |\n",
            "|    explained_variance   | -0.017     |\n",
            "|    learning_rate        | 0.0001     |\n",
            "|    loss                 | 12.2       |\n",
            "|    n_updates            | 210        |\n",
            "|    policy_gradient_loss | -0.0163    |\n",
            "|    reward               | 0.22521842 |\n",
            "|    std                  | 1          |\n",
            "|    value_loss           | 35.2       |\n",
            "----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 84          |\n",
            "|    iterations           | 23          |\n",
            "|    time_elapsed         | 558         |\n",
            "|    total_timesteps      | 47104       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.013565613 |\n",
            "|    clip_fraction        | 0.138       |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.9       |\n",
            "|    explained_variance   | 0.0256      |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 6.82        |\n",
            "|    n_updates            | 220         |\n",
            "|    policy_gradient_loss | -0.0213     |\n",
            "|    reward               | -0.18132949 |\n",
            "|    std                  | 1.01        |\n",
            "|    value_loss           | 16.7        |\n",
            "-----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 84          |\n",
            "|    iterations           | 24          |\n",
            "|    time_elapsed         | 583         |\n",
            "|    total_timesteps      | 49152       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.010815298 |\n",
            "|    clip_fraction        | 0.0602      |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.9       |\n",
            "|    explained_variance   | -0.0113     |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 24.1        |\n",
            "|    n_updates            | 230         |\n",
            "|    policy_gradient_loss | -0.0127     |\n",
            "|    reward               | 0.27915555  |\n",
            "|    std                  | 1.01        |\n",
            "|    value_loss           | 42.8        |\n",
            "-----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 84          |\n",
            "|    iterations           | 25          |\n",
            "|    time_elapsed         | 606         |\n",
            "|    total_timesteps      | 51200       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.010733483 |\n",
            "|    clip_fraction        | 0.0725      |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.9       |\n",
            "|    explained_variance   | 0.000851    |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 30.8        |\n",
            "|    n_updates            | 240         |\n",
            "|    policy_gradient_loss | -0.0137     |\n",
            "|    reward               | -1.1138046  |\n",
            "|    std                  | 1.01        |\n",
            "|    value_loss           | 58.8        |\n",
            "-----------------------------------------\n",
            "------------------------------------------\n",
            "| time/                   |              |\n",
            "|    fps                  | 84           |\n",
            "|    iterations           | 26           |\n",
            "|    time_elapsed         | 631          |\n",
            "|    total_timesteps      | 53248        |\n",
            "| train/                  |              |\n",
            "|    approx_kl            | 0.013769371  |\n",
            "|    clip_fraction        | 0.114        |\n",
            "|    clip_range           | 0.2          |\n",
            "|    entropy_loss         | -39.9        |\n",
            "|    explained_variance   | 0.000562     |\n",
            "|    learning_rate        | 0.0001       |\n",
            "|    loss                 | 10.8         |\n",
            "|    n_updates            | 250          |\n",
            "|    policy_gradient_loss | -0.0163      |\n",
            "|    reward               | -0.048369195 |\n",
            "|    std                  | 1.01         |\n",
            "|    value_loss           | 23.8         |\n",
            "------------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 84          |\n",
            "|    iterations           | 27          |\n",
            "|    time_elapsed         | 655         |\n",
            "|    total_timesteps      | 55296       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.010878595 |\n",
            "|    clip_fraction        | 0.0941      |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.9       |\n",
            "|    explained_variance   | 0.0134      |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 18          |\n",
            "|    n_updates            | 260         |\n",
            "|    policy_gradient_loss | -0.0148     |\n",
            "|    reward               | -2.0834436  |\n",
            "|    std                  | 1.01        |\n",
            "|    value_loss           | 57.5        |\n",
            "-----------------------------------------\n",
            "day: 3082, episode: 35\n",
            "begin_total_asset: 1000000.00\n",
            "end_total_asset: 2857953.75\n",
            "total_reward: 1857953.75\n",
            "total_cost: 327866.73\n",
            "total_trades: 78044\n",
            "Sharpe: 0.541\n",
            "=================================\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 84          |\n",
            "|    iterations           | 28          |\n",
            "|    time_elapsed         | 680         |\n",
            "|    total_timesteps      | 57344       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.009519094 |\n",
            "|    clip_fraction        | 0.0676      |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.9       |\n",
            "|    explained_variance   | -0.00485    |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 20.9        |\n",
            "|    n_updates            | 270         |\n",
            "|    policy_gradient_loss | -0.0158     |\n",
            "|    reward               | 2.9860013   |\n",
            "|    std                  | 1.01        |\n",
            "|    value_loss           | 38          |\n",
            "-----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 84          |\n",
            "|    iterations           | 29          |\n",
            "|    time_elapsed         | 704         |\n",
            "|    total_timesteps      | 59392       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.012698641 |\n",
            "|    clip_fraction        | 0.137       |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.9       |\n",
            "|    explained_variance   | 0.0163      |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 7.94        |\n",
            "|    n_updates            | 280         |\n",
            "|    policy_gradient_loss | -0.0223     |\n",
            "|    reward               | -0.8885102  |\n",
            "|    std                  | 1.01        |\n",
            "|    value_loss           | 20.2        |\n",
            "-----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 84          |\n",
            "|    iterations           | 30          |\n",
            "|    time_elapsed         | 728         |\n",
            "|    total_timesteps      | 61440       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.012269967 |\n",
            "|    clip_fraction        | 0.087       |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -39.9       |\n",
            "|    explained_variance   | 0.0235      |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 23.9        |\n",
            "|    n_updates            | 290         |\n",
            "|    policy_gradient_loss | -0.0181     |\n",
            "|    reward               | -2.5016513  |\n",
            "|    std                  | 1.01        |\n",
            "|    value_loss           | 60.2        |\n",
            "-----------------------------------------\n",
            "------------------------------------------\n",
            "| time/                   |              |\n",
            "|    fps                  | 84           |\n",
            "|    iterations           | 31           |\n",
            "|    time_elapsed         | 752          |\n",
            "|    total_timesteps      | 63488        |\n",
            "| train/                  |              |\n",
            "|    approx_kl            | 0.0105923405 |\n",
            "|    clip_fraction        | 0.0886       |\n",
            "|    clip_range           | 0.2          |\n",
            "|    entropy_loss         | -39.9        |\n",
            "|    explained_variance   | 0.0177       |\n",
            "|    learning_rate        | 0.0001       |\n",
            "|    loss                 | 11.8         |\n",
            "|    n_updates            | 300          |\n",
            "|    policy_gradient_loss | -0.0189      |\n",
            "|    reward               | -0.030869907 |\n",
            "|    std                  | 1.01         |\n",
            "|    value_loss           | 28           |\n",
            "------------------------------------------\n",
            "----------------------------------------\n",
            "| time/                   |            |\n",
            "|    fps                  | 84         |\n",
            "|    iterations           | 32         |\n",
            "|    time_elapsed         | 776        |\n",
            "|    total_timesteps      | 65536      |\n",
            "| train/                  |            |\n",
            "|    approx_kl            | 0.01175094 |\n",
            "|    clip_fraction        | 0.11       |\n",
            "|    clip_range           | 0.2        |\n",
            "|    entropy_loss         | -40        |\n",
            "|    explained_variance   | 0.0482     |\n",
            "|    learning_rate        | 0.0001     |\n",
            "|    loss                 | 5.9        |\n",
            "|    n_updates            | 310        |\n",
            "|    policy_gradient_loss | -0.023     |\n",
            "|    reward               | 0.18123843 |\n",
            "|    std                  | 1.01       |\n",
            "|    value_loss           | 16.3       |\n",
            "----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 84          |\n",
            "|    iterations           | 33          |\n",
            "|    time_elapsed         | 800         |\n",
            "|    total_timesteps      | 67584       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.010027483 |\n",
            "|    clip_fraction        | 0.0623      |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -40         |\n",
            "|    explained_variance   | 0.023       |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 16.5        |\n",
            "|    n_updates            | 320         |\n",
            "|    policy_gradient_loss | -0.0159     |\n",
            "|    reward               | 2.006578    |\n",
            "|    std                  | 1.01        |\n",
            "|    value_loss           | 39.8        |\n",
            "-----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 84          |\n",
            "|    iterations           | 34          |\n",
            "|    time_elapsed         | 824         |\n",
            "|    total_timesteps      | 69632       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.009008661 |\n",
            "|    clip_fraction        | 0.0655      |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -40         |\n",
            "|    explained_variance   | -0.00939    |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 25.3        |\n",
            "|    n_updates            | 330         |\n",
            "|    policy_gradient_loss | -0.0165     |\n",
            "|    reward               | -0.8980884  |\n",
            "|    std                  | 1.01        |\n",
            "|    value_loss           | 41.4        |\n",
            "-----------------------------------------\n",
            "day: 3082, episode: 40\n",
            "begin_total_asset: 1000000.00\n",
            "end_total_asset: 3432840.70\n",
            "total_reward: 2432840.70\n",
            "total_cost: 332772.74\n",
            "total_trades: 79109\n",
            "Sharpe: 0.641\n",
            "=================================\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 84          |\n",
            "|    iterations           | 35          |\n",
            "|    time_elapsed         | 849         |\n",
            "|    total_timesteps      | 71680       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.010557823 |\n",
            "|    clip_fraction        | 0.107       |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -40         |\n",
            "|    explained_variance   | -0.0256     |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 8.05        |\n",
            "|    n_updates            | 340         |\n",
            "|    policy_gradient_loss | -0.0226     |\n",
            "|    reward               | 0.6381308   |\n",
            "|    std                  | 1.01        |\n",
            "|    value_loss           | 13.8        |\n",
            "-----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 84          |\n",
            "|    iterations           | 36          |\n",
            "|    time_elapsed         | 872         |\n",
            "|    total_timesteps      | 73728       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.012169245 |\n",
            "|    clip_fraction        | 0.122       |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -40         |\n",
            "|    explained_variance   | 0.00299     |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 20.7        |\n",
            "|    n_updates            | 350         |\n",
            "|    policy_gradient_loss | -0.0175     |\n",
            "|    reward               | 10.467146   |\n",
            "|    std                  | 1.01        |\n",
            "|    value_loss           | 45.6        |\n",
            "-----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 84          |\n",
            "|    iterations           | 37          |\n",
            "|    time_elapsed         | 897         |\n",
            "|    total_timesteps      | 75776       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.008672525 |\n",
            "|    clip_fraction        | 0.0523      |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -40         |\n",
            "|    explained_variance   | 0.0253      |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 17.8        |\n",
            "|    n_updates            | 360         |\n",
            "|    policy_gradient_loss | -0.0135     |\n",
            "|    reward               | 2.1643443   |\n",
            "|    std                  | 1.01        |\n",
            "|    value_loss           | 32.6        |\n",
            "-----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 84          |\n",
            "|    iterations           | 38          |\n",
            "|    time_elapsed         | 921         |\n",
            "|    total_timesteps      | 77824       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.011687441 |\n",
            "|    clip_fraction        | 0.12        |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -40         |\n",
            "|    explained_variance   | -0.0261     |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 9.35        |\n",
            "|    n_updates            | 370         |\n",
            "|    policy_gradient_loss | -0.0208     |\n",
            "|    reward               | -2.0023048  |\n",
            "|    std                  | 1.01        |\n",
            "|    value_loss           | 16.4        |\n",
            "-----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 84          |\n",
            "|    iterations           | 39          |\n",
            "|    time_elapsed         | 945         |\n",
            "|    total_timesteps      | 79872       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.011612149 |\n",
            "|    clip_fraction        | 0.0956      |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -40.1       |\n",
            "|    explained_variance   | 0.000331    |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 32.6        |\n",
            "|    n_updates            | 380         |\n",
            "|    policy_gradient_loss | -0.0191     |\n",
            "|    reward               | -1.0965872  |\n",
            "|    std                  | 1.01        |\n",
            "|    value_loss           | 52.7        |\n",
            "-----------------------------------------\n",
            "-----------------------------------------\n",
            "| time/                   |             |\n",
            "|    fps                  | 84          |\n",
            "|    iterations           | 40          |\n",
            "|    time_elapsed         | 970         |\n",
            "|    total_timesteps      | 81920       |\n",
            "| train/                  |             |\n",
            "|    approx_kl            | 0.013829958 |\n",
            "|    clip_fraction        | 0.12        |\n",
            "|    clip_range           | 0.2         |\n",
            "|    entropy_loss         | -40.1       |\n",
            "|    explained_variance   | 0.0243      |\n",
            "|    learning_rate        | 0.0001      |\n",
            "|    loss                 | 11.7        |\n",
            "|    n_updates            | 390         |\n",
            "|    policy_gradient_loss | -0.0205     |\n",
            "|    reward               | -2.3229835  |\n",
            "|    std                  | 1.01        |\n",
            "|    value_loss           | 22.7        |\n",
            "-----------------------------------------\n",
            "======PPO Validation from:  2021-04-05 to  2021-07-02\n",
            "PPO Sharpe Ratio:  0.03121152027632034\n",
            "======DDPG Training========\n",
            "{'batch_size': 128, 'buffer_size': 50000, 'learning_rate': 0.001}\n",
            "Using cpu device\n",
            "Logging to tensorboard_log/ddpg/ddpg_441_1\n",
            "day: 3082, episode: 45\n",
            "begin_total_asset: 1000000.00\n",
            "end_total_asset: 6706741.08\n",
            "total_reward: 5706741.08\n",
            "total_cost: 5057.67\n",
            "total_trades: 52215\n",
            "Sharpe: 0.961\n",
            "=================================\n",
            "----------------------------------\n",
            "| time/              |           |\n",
            "|    episodes        | 4         |\n",
            "|    fps             | 31        |\n",
            "|    time_elapsed    | 397       |\n",
            "|    total_timesteps | 12332     |\n",
            "| train/             |           |\n",
            "|    actor_loss      | -10.4     |\n",
            "|    critic_loss     | 3.97e+03  |\n",
            "|    learning_rate   | 0.001     |\n",
            "|    n_updates       | 9249      |\n",
            "|    reward          | 2.7715185 |\n",
            "----------------------------------\n",
            "day: 3082, episode: 50\n",
            "begin_total_asset: 1000000.00\n",
            "end_total_asset: 5788132.29\n",
            "total_reward: 4788132.29\n",
            "total_cost: 999.00\n",
            "total_trades: 46202\n",
            "Sharpe: 0.836\n",
            "=================================\n",
            "----------------------------------\n",
            "| time/              |           |\n",
            "|    episodes        | 8         |\n",
            "|    fps             | 27        |\n",
            "|    time_elapsed    | 895       |\n",
            "|    total_timesteps | 24664     |\n",
            "| train/             |           |\n",
            "|    actor_loss      | 4.28      |\n",
            "|    critic_loss     | 11.4      |\n",
            "|    learning_rate   | 0.001     |\n",
            "|    n_updates       | 21581     |\n",
            "|    reward          | 2.7715185 |\n",
            "----------------------------------\n",
            "day: 3082, episode: 55\n",
            "begin_total_asset: 1000000.00\n",
            "end_total_asset: 5788132.29\n",
            "total_reward: 4788132.29\n",
            "total_cost: 999.00\n",
            "total_trades: 46202\n",
            "Sharpe: 0.836\n",
            "=================================\n",
            "----------------------------------\n",
            "| time/              |           |\n",
            "|    episodes        | 12        |\n",
            "|    fps             | 26        |\n",
            "|    time_elapsed    | 1399      |\n",
            "|    total_timesteps | 36996     |\n",
            "| train/             |           |\n",
            "|    actor_loss      | -6.14     |\n",
            "|    critic_loss     | 7.2       |\n",
            "|    learning_rate   | 0.001     |\n",
            "|    n_updates       | 33913     |\n",
            "|    reward          | 2.7715185 |\n",
            "----------------------------------\n",
            "day: 3082, episode: 60\n",
            "begin_total_asset: 1000000.00\n",
            "end_total_asset: 5788132.29\n",
            "total_reward: 4788132.29\n",
            "total_cost: 999.00\n",
            "total_trades: 46202\n",
            "Sharpe: 0.836\n",
            "=================================\n",
            "----------------------------------\n",
            "| time/              |           |\n",
            "|    episodes        | 16        |\n",
            "|    fps             | 25        |\n",
            "|    time_elapsed    | 1918      |\n",
            "|    total_timesteps | 49328     |\n",
            "| train/             |           |\n",
            "|    actor_loss      | -10.2     |\n",
            "|    critic_loss     | 5.33      |\n",
            "|    learning_rate   | 0.001     |\n",
            "|    n_updates       | 46245     |\n",
            "|    reward          | 2.7715185 |\n",
            "----------------------------------\n",
            "======DDPG Validation from:  2021-04-05 to  2021-07-02\n",
            "======Best Model Retraining from:  2009-01-01 to  2021-07-02\n",
            "======Trading from:  2021-07-02 to  2021-10-01\n",
            "Ensemble Strategy took:  368.1931053121885  minutes\n"
          ]
        }
      ],
      "source": [
        "df_summary = ensemble_agent.run_ensemble_strategy(A2C_model_kwargs,\n",
        "                                                 PPO_model_kwargs,\n",
        "                                                 DDPG_model_kwargs,\n",
        "                                                 timesteps_dict)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "-0qd8acMtj1f",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 238
        },
        "outputId": "36c1d119-fb46-4aca-8350-317a0436aef0"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-cddbde3b-3afc-4f28-8911-f9045a86640d\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Iter</th>\n",
              "      <th>Val Start</th>\n",
              "      <th>Val End</th>\n",
              "      <th>Model Used</th>\n",
              "      <th>A2C Sharpe</th>\n",
              "      <th>PPO Sharpe</th>\n",
              "      <th>DDPG Sharpe</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>126</td>\n",
              "      <td>2020-01-02</td>\n",
              "      <td>2020-04-02</td>\n",
              "      <td>PPO</td>\n",
              "      <td>-0.385534</td>\n",
              "      <td>-0.331629</td>\n",
              "      <td>-0.418476</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>189</td>\n",
              "      <td>2020-04-02</td>\n",
              "      <td>2020-07-02</td>\n",
              "      <td>DDPG</td>\n",
              "      <td>0.183964</td>\n",
              "      <td>0.241241</td>\n",
              "      <td>0.252796</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>252</td>\n",
              "      <td>2020-07-02</td>\n",
              "      <td>2020-10-01</td>\n",
              "      <td>A2C</td>\n",
              "      <td>0.319927</td>\n",
              "      <td>0.201723</td>\n",
              "      <td>0.17129</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>315</td>\n",
              "      <td>2020-10-01</td>\n",
              "      <td>2020-12-31</td>\n",
              "      <td>DDPG</td>\n",
              "      <td>0.087727</td>\n",
              "      <td>0.110573</td>\n",
              "      <td>0.269406</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>378</td>\n",
              "      <td>2020-12-31</td>\n",
              "      <td>2021-04-05</td>\n",
              "      <td>PPO</td>\n",
              "      <td>0.145914</td>\n",
              "      <td>0.244942</td>\n",
              "      <td>0.226651</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>441</td>\n",
              "      <td>2021-04-05</td>\n",
              "      <td>2021-07-02</td>\n",
              "      <td>A2C</td>\n",
              "      <td>0.123671</td>\n",
              "      <td>0.031212</td>\n",
              "      <td>0.067533</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cddbde3b-3afc-4f28-8911-f9045a86640d')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-cddbde3b-3afc-4f28-8911-f9045a86640d button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-cddbde3b-3afc-4f28-8911-f9045a86640d');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "  Iter   Val Start     Val End Model Used A2C Sharpe PPO Sharpe DDPG Sharpe\n",
              "0  126  2020-01-02  2020-04-02        PPO  -0.385534  -0.331629   -0.418476\n",
              "1  189  2020-04-02  2020-07-02       DDPG   0.183964   0.241241    0.252796\n",
              "2  252  2020-07-02  2020-10-01        A2C   0.319927   0.201723     0.17129\n",
              "3  315  2020-10-01  2020-12-31       DDPG   0.087727   0.110573    0.269406\n",
              "4  378  2020-12-31  2021-04-05        PPO   0.145914   0.244942    0.226651\n",
              "5  441  2021-04-05  2021-07-02        A2C   0.123671   0.031212    0.067533"
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ],
      "source": [
        "df_summary"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_summary.to_csv(\"df_summary.csv\")"
      ],
      "metadata": {
        "id": "GnCbu1ejRzWc"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "W6vvNSC6h1jZ"
      },
      "source": [
        "<a id='6'></a>\n",
        "# Part 7: Backtest Our Strategy\n",
        "Backtesting plays a key role in evaluating the performance of a trading strategy. Automated backtesting tool is preferred because it reduces the human error. We usually use the Quantopian pyfolio package to backtest our trading strategies. It is easy to use and consists of various individual plots that provide a comprehensive image of the performance of a trading strategy."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "X4JKB--8tj1g"
      },
      "outputs": [],
      "source": [
        "unique_trade_date = processed[(processed.date > val_test_start)&(processed.date <= val_test_end)].date.unique()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "q9mKF7GGtj1g",
        "scrolled": true,
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "d1ce0e76-2d60-4bb7-d394-91bfe8ea7c92"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Sharpe Ratio:  1.5153860056005994\n"
          ]
        }
      ],
      "source": [
        "df_trade_date = pd.DataFrame({'datadate':unique_trade_date})\n",
        "\n",
        "df_account_value=pd.DataFrame()\n",
        "for i in range(rebalance_window+validation_window, len(unique_trade_date)+1,rebalance_window):\n",
        "    temp = pd.read_csv('results/account_value_trade_{}_{}.csv'.format('ensemble',i))\n",
        "    df_account_value = df_account_value.append(temp,ignore_index=True)\n",
        "sharpe=(252**0.5)*df_account_value.account_value.pct_change(1).mean()/df_account_value.account_value.pct_change(1).std()\n",
        "print('Sharpe Ratio: ',sharpe)\n",
        "df_account_value=df_account_value.join(df_trade_date[validation_window:].reset_index(drop=True))"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "oyosyW7_tj1g",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "outputId": "6520a6a5-1b5c-4169-a6b2-a377516c43f5"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-bb3825bb-3b6e-4816-9136-2f180494b32b\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>account_value</th>\n",
              "      <th>date</th>\n",
              "      <th>daily_return</th>\n",
              "      <th>datadate</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1.000000e+06</td>\n",
              "      <td>2020-04-02</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2020-04-02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>9.988216e+05</td>\n",
              "      <td>2020-04-03</td>\n",
              "      <td>-0.001178</td>\n",
              "      <td>2020-04-03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1.009106e+06</td>\n",
              "      <td>2020-04-06</td>\n",
              "      <td>0.010296</td>\n",
              "      <td>2020-04-06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1.008335e+06</td>\n",
              "      <td>2020-04-07</td>\n",
              "      <td>-0.000764</td>\n",
              "      <td>2020-04-07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1.018930e+06</td>\n",
              "      <td>2020-04-08</td>\n",
              "      <td>0.010507</td>\n",
              "      <td>2020-04-08</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bb3825bb-3b6e-4816-9136-2f180494b32b')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-bb3825bb-3b6e-4816-9136-2f180494b32b button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-bb3825bb-3b6e-4816-9136-2f180494b32b');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "   account_value        date  daily_return    datadate\n",
              "0   1.000000e+06  2020-04-02           NaN  2020-04-02\n",
              "1   9.988216e+05  2020-04-03     -0.001178  2020-04-03\n",
              "2   1.009106e+06  2020-04-06      0.010296  2020-04-06\n",
              "3   1.008335e+06  2020-04-07     -0.000764  2020-04-07\n",
              "4   1.018930e+06  2020-04-08      0.010507  2020-04-08"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ],
      "source": [
        "df_account_value.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "KfkulYv6pWU5"
      },
      "outputs": [],
      "source": [
        "Ensemble_cumpod =(df_account_value.daily_return+1).cumprod()-1"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "bP9Pt71qqWWw"
      },
      "outputs": [],
      "source": [
        "time_ind = pd.Series(df_account_value.datadate)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "t7w5e5u4q0Br"
      },
      "outputs": [],
      "source": [
        ""
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "vqjQlYjfxM5s"
      },
      "source": [
        "# Min VAriance"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "JUMu5yyJxPts",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "24d9d568-f84b-40cc-b8e9-e5858f59afd6"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting PyPortfolioOpt\n",
            "  Downloading PyPortfolioOpt-1.5.1-py3-none-any.whl (61 kB)\n",
            "\u001b[K     |████████████████████████████████| 61 kB 3.3 MB/s \n",
            "\u001b[?25hCollecting cvxpy<2.0.0,>=1.1.10\n",
            "  Downloading cvxpy-1.1.18-cp37-cp37m-manylinux_2_24_x86_64.whl (2.7 MB)\n",
            "\u001b[K     |████████████████████████████████| 2.7 MB 10.6 MB/s \n",
            "\u001b[?25hRequirement already satisfied: pandas>=0.19 in /usr/local/lib/python3.7/dist-packages (from PyPortfolioOpt) (1.3.5)\n",
            "Requirement already satisfied: scipy<2.0,>=1.3 in /usr/local/lib/python3.7/dist-packages (from PyPortfolioOpt) (1.4.1)\n",
            "Requirement already satisfied: numpy<2.0,>=1.12 in /usr/local/lib/python3.7/dist-packages (from PyPortfolioOpt) (1.19.5)\n",
            "Requirement already satisfied: ecos>=2 in /usr/local/lib/python3.7/dist-packages (from cvxpy<2.0.0,>=1.1.10->PyPortfolioOpt) (2.0.10)\n",
            "Requirement already satisfied: osqp>=0.4.1 in /usr/local/lib/python3.7/dist-packages (from cvxpy<2.0.0,>=1.1.10->PyPortfolioOpt) (0.6.2.post0)\n",
            "Requirement already satisfied: scs>=1.1.6 in /usr/local/lib/python3.7/dist-packages (from cvxpy<2.0.0,>=1.1.10->PyPortfolioOpt) (3.1.0)\n",
            "Requirement already satisfied: qdldl in /usr/local/lib/python3.7/dist-packages (from osqp>=0.4.1->cvxpy<2.0.0,>=1.1.10->PyPortfolioOpt) (0.1.5.post0)\n",
            "Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.19->PyPortfolioOpt) (2.8.2)\n",
            "Requirement already satisfied: pytz>=2017.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.19->PyPortfolioOpt) (2018.9)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil>=2.7.3->pandas>=0.19->PyPortfolioOpt) (1.15.0)\n",
            "Installing collected packages: cvxpy, PyPortfolioOpt\n",
            "  Attempting uninstall: cvxpy\n",
            "    Found existing installation: cvxpy 1.0.31\n",
            "    Uninstalling cvxpy-1.0.31:\n",
            "      Successfully uninstalled cvxpy-1.0.31\n",
            "Successfully installed PyPortfolioOpt-1.5.1 cvxpy-1.1.18\n"
          ]
        }
      ],
      "source": [
        "!pip install PyPortfolioOpt"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "-OFB28mrxWUu"
      },
      "outputs": [],
      "source": [
        "from pypfopt.efficient_frontier import EfficientFrontier\n",
        "from pypfopt import risk_models"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "SPaGKoJgzF4m"
      },
      "outputs": [],
      "source": [
        "# add covariance matrix as states\n",
        "processed=processed.sort_values(['date','tic'],ignore_index=True)\n",
        "processed.index = processed.date.factorize()[0]\n",
        "\n",
        "cov_list = []\n",
        "return_list = []\n",
        "\n",
        "# look back is one year\n",
        "lookback=252\n",
        "for i in range(lookback,len(processed.index.unique())):\n",
        "  data_lookback = processed.loc[i-lookback:i,:]\n",
        "  price_lookback=data_lookback.pivot_table(index = 'date',columns = 'tic', values = 'close')\n",
        "  return_lookback = price_lookback.pct_change().dropna()\n",
        "  return_list.append(return_lookback)\n",
        "\n",
        "  covs = return_lookback.cov().values \n",
        "  cov_list.append(covs)\n",
        "\n",
        "  \n",
        "df_cov = pd.DataFrame({'date':processed.date.unique()[lookback:],'cov_list':cov_list,'return_list':return_list})\n",
        "processed = processed.merge(df_cov, on='date')\n",
        "processed = processed.sort_values(['date','tic']).reset_index(drop=True)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "9by-7rYKxbA6"
      },
      "outputs": [],
      "source": [
        "unique_tic = processed.tic.unique()\n",
        "unique_trade_date = processed.date.unique()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "7e06phqTxkVT"
      },
      "outputs": [],
      "source": [
        "#calculate_portfolio_minimum_variance\n",
        "portfolio = pd.DataFrame(index = range(1), columns = unique_trade_date)\n",
        "initial_capital = 1000000\n",
        "portfolio.loc[0,unique_trade_date[0]] = initial_capital\n",
        "\n",
        "for i in range(len( unique_trade_date)-1):\n",
        "    df_temp = processed[processed.date==unique_trade_date[i]].reset_index(drop=True)\n",
        "    df_temp_next = processed[processed.date==unique_trade_date[i+1]].reset_index(drop=True)\n",
        "    #Sigma = risk_models.sample_cov(df_temp.return_list[0])\n",
        "    #calculate covariance matrix\n",
        "    Sigma = df_temp.return_list[0].cov()\n",
        "    #portfolio allocation\n",
        "    ef_min_var = EfficientFrontier(None, Sigma,weight_bounds=(0, 0.1))\n",
        "    #minimum variance\n",
        "    raw_weights_min_var = ef_min_var.min_volatility()\n",
        "    #get weights\n",
        "    cleaned_weights_min_var = ef_min_var.clean_weights()\n",
        "    \n",
        "    #current capital\n",
        "    cap = portfolio.iloc[0, i]\n",
        "    #current cash invested for each stock\n",
        "    current_cash = [element * cap for element in list(cleaned_weights_min_var.values())]\n",
        "    # current held shares\n",
        "    current_shares = list(np.array(current_cash)\n",
        "                                      / np.array(df_temp.close))\n",
        "    # next time period price\n",
        "    next_price = np.array(df_temp_next.close)\n",
        "    ##next_price * current share to calculate next total account value \n",
        "    portfolio.iloc[0, i+1] = np.dot(current_shares, next_price)\n",
        "    \n",
        "portfolio=portfolio.T\n",
        "portfolio.columns = ['account_value']"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Jas2W7cBxkiT"
      },
      "outputs": [],
      "source": [
        "min_var_cumpod =(portfolio.account_value.pct_change()+1).cumprod()-1"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "V41sohLN13tA",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e3acce0a-49c5-46a4-9ab3-e9175f518808"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "==============Get Baseline Stats===========\n",
            "\r[*********************100%***********************]  1 of 1 completed\n",
            "Shape of DataFrame:  (377, 8)\n",
            "Annual return          0.372568\n",
            "Cumulative returns     0.606034\n",
            "Annual volatility      0.186411\n",
            "Sharpe ratio           1.797259\n",
            "Calmar ratio           4.017616\n",
            "Stability              0.944437\n",
            "Max drawdown          -0.092733\n",
            "Omega ratio            1.387034\n",
            "Sortino ratio          2.756135\n",
            "Skew                        NaN\n",
            "Kurtosis                    NaN\n",
            "Tail ratio             1.064240\n",
            "Daily value at risk   -0.022156\n",
            "dtype: float64\n"
          ]
        }
      ],
      "source": [
        "#baseline stats\n",
        "print(\"==============Get Baseline Stats===========\")\n",
        "baseline_df = get_baseline(\n",
        "        ticker=\"^DJI\", \n",
        "        start = df_account_value.loc[0,'datadate'],\n",
        "        end = df_account_value.loc[len(df_account_value.account_value)-1,'date'])\n",
        "\n",
        "stats = backtest_stats(baseline_df, value_col_name = 'close')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "a2CzdQfV4px_"
      },
      "outputs": [],
      "source": [
        "from finrl.plot import backtest_stats, backtest_plot, get_daily_return, get_baseline,convert_daily_return_to_pyfolio_ts"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "5nGfGEcO4WsD"
      },
      "outputs": [],
      "source": [
        "from pyfolio import timeseries\n",
        "DRL_strat = convert_daily_return_to_pyfolio_ts(df_account_value)\n",
        "perf_func = timeseries.perf_stats \n",
        "perf_stats_all = perf_func( returns=DRL_strat, \n",
        "                              factor_returns=DRL_strat, \n",
        "                                positions=None, transactions=None, turnover_denom=\"AGB\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "4mycSWXT4wVE",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "3cb24ccb-5c4c-4f39-8603-b3b929028aa5"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Annual return          0.261399\n",
              "Cumulative returns     0.416702\n",
              "Annual volatility      0.174200\n",
              "Sharpe ratio           1.442334\n",
              "Calmar ratio           2.778173\n",
              "Stability              0.912463\n",
              "Max drawdown          -0.094090\n",
              "Omega ratio            1.300572\n",
              "Sortino ratio          2.108885\n",
              "Skew                        NaN\n",
              "Kurtosis                    NaN\n",
              "Tail ratio             1.118146\n",
              "Daily value at risk   -0.020950\n",
              "Alpha                  0.000000\n",
              "Beta                   1.000000\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 31
        }
      ],
      "source": [
        "perf_stats_all"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "I7dUKrDW22f1",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "fe3d2f84-1fdc-4837-d73a-fd571b359ac2"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\r[*********************100%***********************]  1 of 1 completed\n",
            "Shape of DataFrame:  (399, 8)\n"
          ]
        }
      ],
      "source": [
        "import pyfolio\n",
        "%matplotlib inline\n",
        "\n",
        "baseline_df = get_baseline(\n",
        "        ticker='^DJI', start=df_account_value.loc[0,'datadate'], end='2021-10-31'\n",
        "    )\n",
        "\n",
        "baseline_returns = get_daily_return(baseline_df, value_col_name=\"close\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "17p2xg_h2loL"
      },
      "outputs": [],
      "source": [
        "dji_cumpod =(baseline_returns+1).cumprod()-1"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "dkDPcCCp3L7b"
      },
      "outputs": [],
      "source": [
        "from datetime import datetime as dt\n",
        "\n",
        "import matplotlib.pyplot as plt\n",
        "import plotly\n",
        "import plotly.graph_objs as go"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "R4WeuSbk3aub"
      },
      "outputs": [],
      "source": [
        "time_ind = pd.Series(df_account_value.datadate)\n",
        "trace0_portfolio = go.Scatter(x = time_ind, y = Ensemble_cumpod, mode = 'lines', name = 'Ensemble (Portfolio Allocation)')\n",
        "\n",
        "trace1_portfolio = go.Scatter(x = time_ind, y = dji_cumpod, mode = 'lines', name = 'DJIA')\n",
        "trace2_portfolio = go.Scatter(x = time_ind, y = min_var_cumpod, mode = 'lines', name = 'Min-Variance')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Yiy2vckb3yHg",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "outputId": "9cc0762a-1466-4d9b-b079-8c0729743c47"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script src=\"https://cdn.plot.ly/plotly-2.8.3.min.js\"></script>                <div id=\"b9a7cf10-3b7f-44aa-8ba0-bf9e188fa221\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"b9a7cf10-3b7f-44aa-8ba0-bf9e188fa221\")) {                    Plotly.newPlot(                        \"b9a7cf10-3b7f-44aa-8ba0-bf9e188fa221\",                        [{\"mode\":\"lines\",\"name\":\"Ensemble (Portfolio Allocation)\",\"x\":[\"2020-04-02\",\"2020-04-03\",\"2020-04-06\",\"2020-04-07\",\"2020-04-08\",\"2020-04-09\",\"2020-04-13\",\"2020-04-14\",\"2020-04-15\",\"2020-04-16\",\"2020-04-17\",\"2020-04-20\",\"2020-04-21\",\"2020-04-22\",\"2020-04-23\",\"2020-04-24\",\"2020-04-27\",\"2020-04-28\",\"2020-04-29\",\"2020-04-30\",\"2020-05-01\",\"2020-05-04\",\"2020-05-05\",\"2020-05-06\",\"2020-05-07\",\"2020-05-08\",\"2020-05-11\",\"2020-05-12\",\"2020-05-13\",\"2020-05-14\",\"2020-05-15\",\"2020-05-18\",\"2020-05-19\",\"2020-05-20\",\"2020-05-21\",\"2020-05-22\",\"2020-05-26\",\"2020-05-27\",\"2020-05-28\",\"2020-05-29\",\"2020-06-01\",\"2020-06-02\",\"2020-06-03\",\"2020-06-04\",\"2020-06-05\",\"2020-06-08\",\"2020-06-09\",\"2020-06-10\",\"2020-06-11\",\"2020-06-12\",\"2020-06-15\",\"2020-06-16\",\"2020-06-17\",\"2020-06-18\",\"2020-06-19\",\"2020-06-22\",\"2020-06-23\",\"2020-06-24\",\"2020-06-25\",\"2020-06-26\",\"2020-06-29\",\"2020-06-30\",\"2020-07-01\",\"2020-07-02\",\"2020-07-06\",\"2020-07-07\",\"2020-07-08\",\"2020-07-09\",\"2020-07-10\",\"2020-07-13\",\"2020-07-14\",\"2020-07-15\",\"2020-07-16\",\"2020-07-17\",\"2020-07-20\",\"2020-07-21\",\"2020-07-22\",\"2020-07-23\",\"2020-07-24\",\"2020-07-27\",\"2020-07-28\",\"2020-07-29\",\"2020-07-30\",\"2020-07-31\",\"2020-08-03\",\"2020-08-04\",\"2020-08-05\",\"2020-08-06\",\"2020-08-07\",\"2020-08-10\",\"2020-08-11\",\"2020-08-12\",\"2020-08-13\",\"2020-08-14\",\"2020-08-17\",\"2020-08-18\",\"2020-08-19\",\"2020-08-20\",\"2020-08-21\",\"2020-08-24\",\"2020-08-25\",\"2020-08-26\",\"2020-08-27\",\"2020-08-28\",\"2020-08-31\",\"2020-09-01\",\"2020-09-02\",\"2020-09-03\",\"2020-09-04\",\"2020-09-08\",\"2020-09-09\",\"2020-09-10\",\"2020-09-11\",\"2020-09-14\",\"2020-09-15\",\"2020-09-16\",\"2020-09-17\",\"2020-09-18\",\"2020-09-21\",\"2020-09-22\",\"2020-09-23\",\"2020-09-24\",\"2020-09-25\",\"2020-09-28\",\"2020-09-29\",\"2020-09-30\",\"2020-10-01\",\"2020-10-02\",\"2020-10-05\",\"2020-10-06\",\"2020-10-07\",\"2020-10-08\",\"2020-10-09\",\"2020-10-12\",\"2020-10-13\",\"2020-10-14\",\"2020-10-15\",\"2020-10-16\",\"2020-10-19\",\"2020-10-20\",\"2020-10-21\",\"2020-10-22\",\"2020-10-23\",\"2020-10-26\",\"2020-10-27\",\"2020-10-28\",\"2020-10-29\",\"2020-10-30\",\"2020-11-02\",\"2020-11-03\",\"2020-11-04\",\"2020-11-05\",\"2020-11-06\",\"2020-11-09\",\"2020-11-10\",\"2020-11-11\",\"2020-11-12\",\"2020-11-13\",\"2020-11-16\",\"2020-11-17\",\"2020-11-18\",\"2020-11-19\",\"2020-11-20\",\"2020-11-23\",\"2020-11-24\",\"2020-11-25\",\"2020-11-27\",\"2020-11-30\",\"2020-12-01\",\"2020-12-02\",\"2020-12-03\",\"2020-12-04\",\"2020-12-07\",\"2020-12-08\",\"2020-12-09\",\"2020-12-10\",\"2020-12-11\",\"2020-12-14\",\"2020-12-15\",\"2020-12-16\",\"2020-12-17\",\"2020-12-18\",\"2020-12-21\",\"2020-12-22\",\"2020-12-23\",\"2020-12-24\",\"2020-12-28\",\"2020-12-29\",\"2020-12-30\",\"2020-12-31\",\"2021-01-04\",\"2021-01-05\",\"2021-01-06\",\"2021-01-07\",\"2021-01-08\",\"2021-01-11\",\"2021-01-12\",\"2021-01-13\",\"2021-01-14\",\"2021-01-15\",\"2021-01-19\",\"2021-01-20\",\"2021-01-21\",\"2021-01-22\",\"2021-01-25\",\"2021-01-26\",\"2021-01-27\",\"2021-01-28\",\"2021-01-29\",\"2021-02-01\",\"2021-02-02\",\"2021-02-03\",\"2021-02-04\",\"2021-02-05\",\"2021-02-08\",\"2021-02-09\",\"2021-02-10\",\"2021-02-11\",\"2021-02-12\",\"2021-02-16\",\"2021-02-17\",\"2021-02-18\",\"2021-02-19\",\"2021-02-22\",\"2021-02-23\",\"2021-02-24\",\"2021-02-25\",\"2021-02-26\",\"2021-03-01\",\"2021-03-02\",\"2021-03-03\",\"2021-03-04\",\"2021-03-05\",\"2021-03-08\",\"2021-03-09\",\"2021-03-10\",\"2021-03-11\",\"2021-03-12\",\"2021-03-15\",\"2021-03-16\",\"2021-03-17\",\"2021-03-18\",\"2021-03-19\",\"2021-03-22\",\"2021-03-23\",\"2021-03-24\",\"2021-03-25\",\"2021-03-26\",\"2021-03-29\",\"2021-03-30\",\"2021-03-31\",\"2021-04-01\",\"2021-04-05\",\"2021-04-06\",\"2021-04-07\",\"2021-04-08\",\"2021-04-09\",\"2021-04-12\",\"2021-04-13\",\"2021-04-14\",\"2021-04-15\",\"2021-04-16\",\"2021-04-19\",\"2021-04-20\",\"2021-04-21\",\"2021-04-22\",\"2021-04-23\",\"2021-04-26\",\"2021-04-27\",\"2021-04-28\",\"2021-04-29\",\"2021-04-30\",\"2021-05-03\",\"2021-05-04\",\"2021-05-05\",\"2021-05-06\",\"2021-05-07\",\"2021-05-10\",\"2021-05-11\",\"2021-05-12\",\"2021-05-13\",\"2021-05-14\",\"2021-05-17\",\"2021-05-18\",\"2021-05-19\",\"2021-05-20\",\"2021-05-21\",\"2021-05-24\",\"2021-05-25\",\"2021-05-26\",\"2021-05-27\",\"2021-05-28\",\"2021-06-01\",\"2021-06-02\",\"2021-06-03\",\"2021-06-04\",\"2021-06-07\",\"2021-06-08\",\"2021-06-09\",\"2021-06-10\",\"2021-06-11\",\"2021-06-14\",\"2021-06-15\",\"2021-06-16\",\"2021-06-17\",\"2021-06-18\",\"2021-06-21\",\"2021-06-22\",\"2021-06-23\",\"2021-06-24\",\"2021-06-25\",\"2021-06-28\",\"2021-06-29\",\"2021-06-30\",\"2021-07-01\",\"2021-07-02\",\"2021-07-06\",\"2021-07-07\",\"2021-07-08\",\"2021-07-09\",\"2021-07-12\",\"2021-07-13\",\"2021-07-14\",\"2021-07-15\",\"2021-07-16\",\"2021-07-19\",\"2021-07-20\",\"2021-07-21\",\"2021-07-22\",\"2021-07-23\",\"2021-07-26\",\"2021-07-27\",\"2021-07-28\",\"2021-07-29\",\"2021-07-30\",\"2021-08-02\",\"2021-08-03\",\"2021-08-04\",\"2021-08-05\",\"2021-08-06\",\"2021-08-09\",\"2021-08-10\",\"2021-08-11\",\"2021-08-12\",\"2021-08-13\",\"2021-08-16\",\"2021-08-17\",\"2021-08-18\",\"2021-08-19\",\"2021-08-20\",\"2021-08-23\",\"2021-08-24\",\"2021-08-25\",\"2021-08-26\",\"2021-08-27\",\"2021-08-30\",\"2021-08-31\",\"2021-09-01\",\"2021-09-02\",\"2021-09-03\",\"2021-09-07\",\"2021-09-08\",\"2021-09-09\",\"2021-09-10\",\"2021-09-13\",\"2021-09-14\",\"2021-09-15\",\"2021-09-16\",\"2021-09-17\",\"2021-09-20\",\"2021-09-21\",\"2021-09-22\",\"2021-09-23\",\"2021-09-24\",\"2021-09-27\",\"2021-09-28\",\"2021-09-29\",\"2021-09-30\"],\"y\":[null,-0.0011783927871169553,0.009105810892734656,0.008335131211452795,0.018930113556705486,0.022708848326831843,0.01846605189783479,0.030890451954612486,0.020976228425834353,0.020959313554015813,0.036442293048492,0.02587364398550762,0.013693883593761225,0.020874094099517126,0.021387892651538065,0.02576129657146753,0.035732225785006344,0.03487206899495576,0.04248152026172125,0.03359215000266147,0.017963914060499686,0.01839893197184228,0.02195601355872956,0.016450507347662624,0.0256230306060512,0.044777121999140634,0.046950376880015465,0.022766917854739166,-0.0014515097628868823,0.010822747213755868,0.016152360930911325,0.04474458176925977,0.029513109344451394,0.045387128018626655,0.03870368998185292,0.04007840700300913,0.06768781197371232,0.09727974540291906,0.08582059120509666,0.07914810755995139,0.08504544874516262,0.09319744692491105,0.11652146271811259,0.11965496622586413,0.14287501040085204,0.15899717292586502,0.1423090782676737,0.1358573840217745,0.056734469102524,0.07574612730956698,0.08451400134925513,0.10686865171048376,0.10019314770368615,0.10089689686130177,0.09397486913782527,0.097236193877686,0.09817888226297788,0.0678903176562311,0.08664817454354479,0.049946978814640275,0.07103567599190175,0.08378608804739796,0.08714034601569409,null,0.1095202302695375,0.08953267171699575,0.10027889724645922,0.082276875770523,0.0949776437844232,0.09211445262093498,0.11416627899497889,0.12252901071623867,0.11876939570406009,0.11908688391157196,0.12157766451344743,0.12188406437015908,0.12021813335162568,0.10618747293817576,0.09599660424747292,0.10250491534585526,0.10075187199419955,0.11609167131391374,0.10502949807873163,0.11755162558263477,0.13018793607267343,0.13121497245952884,0.15470753776308532,0.16924100343720339,0.17039903121686306,0.177990148567422,0.17159430506872386,0.18306618301171285,0.18281038233335112,0.18348827722930605,0.17616455405564824,0.1775722223877889,0.17729776141825515,0.18152186616325783,0.18830039047655744,0.19983870734230358,0.21193905614710795,0.2647722468224516,0.2635074746582089,0.2633945408947045,0.2616320013583395,0.26641769097470225,0.27325197072140095,0.25267022343509526,0.24546690586605258,0.21480360017063438,0.23281172209270729,0.21443279056945697,0.21118899689532866,0.22733225925154033,0.22700486825795174,0.22872070919610876,0.21583549134084445,0.21006438026413843,0.19008037789292564,0.19092881012653828,0.15960544004002197,0.16827801305425716,0.1877574390762613,0.20447833379875346,0.19903006553001235,0.21588185388827474,null,0.20898672858715028,0.2284160505716868,0.21427003779460296,0.2402281122978187,0.24995397119230178,0.26038223644723435,0.27580227356559406,0.2649184709507404,0.2582367672868755,0.2561823647376644,0.26098865424236517,0.24078352227233468,0.2477674080053931,0.23933116525124154,0.25109397869774,0.24623502146467735,0.2183691462134587,0.20714745576188087,0.16405177547959116,0.16748769425873067,0.1618326394442562,0.1879782451529759,0.21725076205563076,0.23137649492383416,0.2549030954682745,0.2533901485018679,0.32057034785802907,0.31925154061602323,0.3199641391419412,0.3163442144444786,0.3195319210278975,0.323723754164148,0.32071037388459156,0.3154748507400196,0.31633433964957547,0.3129640379636016,0.3177857256030603,0.3271595856493239,0.32046783585256744,0.32070025588006135,0.31510008134072165,0.3194386283081363,0.3228507992068095,0.322865194289665,0.3295444036830393,0.322839544410245,0.32571330532215215,0.32757381764671445,0.32631372915273427,0.32950099751835205,0.3148044153387701,0.3285702848510299,0.32681445404894927,0.33779569822471944,0.3302420836327975,0.3270549635808575,0.3186942765319143,0.32441356456702075,0.3270060693098147,0.33182911262032944,0.3261250846169108,0.3285565747972612,null,0.31615234802861125,0.32383823482245866,0.3436232128319332,0.345614753638269,0.3489571386963153,0.35133085392872876,0.3515073405635243,0.34759568796566853,0.3496636830280251,0.3467962737969399,0.35671096756693044,0.3660738751289776,0.35735583851078334,0.3616432698715506,0.360167846903265,0.3575814440221208,0.3263815953950937,0.34466960948837344,0.312702682214969,0.31357830111087215,0.3265427603542994,0.3247147049951977,0.3387353591952633,0.3516904043144453,0.362118615198759,0.3628997279077697,0.3670092978064077,0.36449644464409525,0.3654916333983256,0.3639180737192067,0.37522963031341217,0.35720826246857484,0.3549666682590944,0.3660324367669754,0.3660928968195265,0.37473744258240194,0.3615049603922058,0.33727259409963106,0.3544732070305152,0.35047392817538325,0.34362793879702025,0.33041200897440004,0.3588873109885755,0.3758739963735158,0.3654192882722387,0.3827555243058307,0.38422577849560313,0.3927943257476916,0.3972790373638435,0.3915275363107833,0.3945035335932614,0.38360810679687973,0.37863784669842326,0.382978090361316,0.37266843481338774,0.3764957346154276,0.384199629641226,0.4039225739701202,0.4096230584127989,0.40340857658499485,0.39766658738511507,0.4018157239684754,null,0.40109940920153364,0.40107421116332564,0.39560165795117297,0.39932712875549714,0.3978465709438024,0.39001618171239816,0.3935364105929766,0.4008462670962085,0.4103383224637056,0.4072269549310905,0.4074527235932055,0.413138880475878,0.4025476625637836,0.405132712962029,0.4045784691539316,0.40484334830549984,0.3995247201553138,0.41158642829461933,0.405446335107724,0.41818665581789594,0.4182527926333546,0.42182550159156973,0.43087701413582,0.436333440782841,0.441991126534915,0.4240309263804831,0.40365208559888166,0.4197572565894174,0.43615343439736964,0.4333763490648639,0.42792942048364035,0.4231078404617541,0.4300631650106632,0.4345462952670476,0.44069204182654786,0.4349373076667076,0.43337429892262014,0.43697035776137594,0.4394593503477915,0.4397120301130857,0.4432677369862168,0.4468564728122921,0.4512768862638721,0.446256968828721,0.44095318906938386,0.4354735806021466,0.4360995350610939,0.43701175286258165,0.43366723991787204,0.43235801954594644,0.4213650903676498,0.4161118225609217,0.3929291892651159,0.41565680665823646,0.4170018231979009,0.41514408027909977,0.427522364664241,0.4322043735061345,0.42697239076589777,0.42718550709864744,0.44215237484224224,0.437875090489217,null,0.43066804852589136,0.4322536243959674,0.42213576329478597,0.4424533181771326,0.44854848440792217,0.44078239359988847,0.44298118154124344,0.4413910101993912,0.42715151193897993,0.39944824420396063,0.42600198560335145,0.43985339521985467,0.44082268439540284,0.4512780126896201,0.45493340478696886,0.451972683255065,0.44355930132435084,0.4514097378235895,0.44627720501877266,0.4459436673500612,0.4556308209561952,0.44358968120286546,0.4561291233493141,0.47060928487676,0.4705545553020669,0.4852657946252281,0.5001603530935694,0.5043922973692276,0.4992769369686043,0.49981925274618844,0.4886825046608596,0.46865752179270803,0.46125283805464057,0.4690947343948195,0.4827361302133957,0.49291418244515484,0.500224473286198,0.4962124201814164,0.5096514241899501,0.5039874907046187,0.5053869588268431,0.5061651932129276,0.5127231253633824,0.5067210744861599,0.4973908313323665,0.49128230259199657,0.48594453663468307,0.47646291382667294,0.49168502819472915,0.4773752446239292,0.4792918009476037,0.46873832409220806,0.45690778702965895,0.42384727961802504,0.41895529896051764,0.4421400298131237,0.46019820313538085,0.4573044442357679,0.46900292522229026,0.4417683735384337,0.44055891252552737,0.41670219989358914],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"DJIA\",\"x\":[\"2020-04-02\",\"2020-04-03\",\"2020-04-06\",\"2020-04-07\",\"2020-04-08\",\"2020-04-09\",\"2020-04-13\",\"2020-04-14\",\"2020-04-15\",\"2020-04-16\",\"2020-04-17\",\"2020-04-20\",\"2020-04-21\",\"2020-04-22\",\"2020-04-23\",\"2020-04-24\",\"2020-04-27\",\"2020-04-28\",\"2020-04-29\",\"2020-04-30\",\"2020-05-01\",\"2020-05-04\",\"2020-05-05\",\"2020-05-06\",\"2020-05-07\",\"2020-05-08\",\"2020-05-11\",\"2020-05-12\",\"2020-05-13\",\"2020-05-14\",\"2020-05-15\",\"2020-05-18\",\"2020-05-19\",\"2020-05-20\",\"2020-05-21\",\"2020-05-22\",\"2020-05-26\",\"2020-05-27\",\"2020-05-28\",\"2020-05-29\",\"2020-06-01\",\"2020-06-02\",\"2020-06-03\",\"2020-06-04\",\"2020-06-05\",\"2020-06-08\",\"2020-06-09\",\"2020-06-10\",\"2020-06-11\",\"2020-06-12\",\"2020-06-15\",\"2020-06-16\",\"2020-06-17\",\"2020-06-18\",\"2020-06-19\",\"2020-06-22\",\"2020-06-23\",\"2020-06-24\",\"2020-06-25\",\"2020-06-26\",\"2020-06-29\",\"2020-06-30\",\"2020-07-01\",\"2020-07-02\",\"2020-07-06\",\"2020-07-07\",\"2020-07-08\",\"2020-07-09\",\"2020-07-10\",\"2020-07-13\",\"2020-07-14\",\"2020-07-15\",\"2020-07-16\",\"2020-07-17\",\"2020-07-20\",\"2020-07-21\",\"2020-07-22\",\"2020-07-23\",\"2020-07-24\",\"2020-07-27\",\"2020-07-28\",\"2020-07-29\",\"2020-07-30\",\"2020-07-31\",\"2020-08-03\",\"2020-08-04\",\"2020-08-05\",\"2020-08-06\",\"2020-08-07\",\"2020-08-10\",\"2020-08-11\",\"2020-08-12\",\"2020-08-13\",\"2020-08-14\",\"2020-08-17\",\"2020-08-18\",\"2020-08-19\",\"2020-08-20\",\"2020-08-21\",\"2020-08-24\",\"2020-08-25\",\"2020-08-26\",\"2020-08-27\",\"2020-08-28\",\"2020-08-31\",\"2020-09-01\",\"2020-09-02\",\"2020-09-03\",\"2020-09-04\",\"2020-09-08\",\"2020-09-09\",\"2020-09-10\",\"2020-09-11\",\"2020-09-14\",\"2020-09-15\",\"2020-09-16\",\"2020-09-17\",\"2020-09-18\",\"2020-09-21\",\"2020-09-22\",\"2020-09-23\",\"2020-09-24\",\"2020-09-25\",\"2020-09-28\",\"2020-09-29\",\"2020-09-30\",\"2020-10-01\",\"2020-10-02\",\"2020-10-05\",\"2020-10-06\",\"2020-10-07\",\"2020-10-08\",\"2020-10-09\",\"2020-10-12\",\"2020-10-13\",\"2020-10-14\",\"2020-10-15\",\"2020-10-16\",\"2020-10-19\",\"2020-10-20\",\"2020-10-21\",\"2020-10-22\",\"2020-10-23\",\"2020-10-26\",\"2020-10-27\",\"2020-10-28\",\"2020-10-29\",\"2020-10-30\",\"2020-11-02\",\"2020-11-03\",\"2020-11-04\",\"2020-11-05\",\"2020-11-06\",\"2020-11-09\",\"2020-11-10\",\"2020-11-11\",\"2020-11-12\",\"2020-11-13\",\"2020-11-16\",\"2020-11-17\",\"2020-11-18\",\"2020-11-19\",\"2020-11-20\",\"2020-11-23\",\"2020-11-24\",\"2020-11-25\",\"2020-11-27\",\"2020-11-30\",\"2020-12-01\",\"2020-12-02\",\"2020-12-03\",\"2020-12-04\",\"2020-12-07\",\"2020-12-08\",\"2020-12-09\",\"2020-12-10\",\"2020-12-11\",\"2020-12-14\",\"2020-12-15\",\"2020-12-16\",\"2020-12-17\",\"2020-12-18\",\"2020-12-21\",\"2020-12-22\",\"2020-12-23\",\"2020-12-24\",\"2020-12-28\",\"2020-12-29\",\"2020-12-30\",\"2020-12-31\",\"2021-01-04\",\"2021-01-05\",\"2021-01-06\",\"2021-01-07\",\"2021-01-08\",\"2021-01-11\",\"2021-01-12\",\"2021-01-13\",\"2021-01-14\",\"2021-01-15\",\"2021-01-19\",\"2021-01-20\",\"2021-01-21\",\"2021-01-22\",\"2021-01-25\",\"2021-01-26\",\"2021-01-27\",\"2021-01-28\",\"2021-01-29\",\"2021-02-01\",\"2021-02-02\",\"2021-02-03\",\"2021-02-04\",\"2021-02-05\",\"2021-02-08\",\"2021-02-09\",\"2021-02-10\",\"2021-02-11\",\"2021-02-12\",\"2021-02-16\",\"2021-02-17\",\"2021-02-18\",\"2021-02-19\",\"2021-02-22\",\"2021-02-23\",\"2021-02-24\",\"2021-02-25\",\"2021-02-26\",\"2021-03-01\",\"2021-03-02\",\"2021-03-03\",\"2021-03-04\",\"2021-03-05\",\"2021-03-08\",\"2021-03-09\",\"2021-03-10\",\"2021-03-11\",\"2021-03-12\",\"2021-03-15\",\"2021-03-16\",\"2021-03-17\",\"2021-03-18\",\"2021-03-19\",\"2021-03-22\",\"2021-03-23\",\"2021-03-24\",\"2021-03-25\",\"2021-03-26\",\"2021-03-29\",\"2021-03-30\",\"2021-03-31\",\"2021-04-01\",\"2021-04-05\",\"2021-04-06\",\"2021-04-07\",\"2021-04-08\",\"2021-04-09\",\"2021-04-12\",\"2021-04-13\",\"2021-04-14\",\"2021-04-15\",\"2021-04-16\",\"2021-04-19\",\"2021-04-20\",\"2021-04-21\",\"2021-04-22\",\"2021-04-23\",\"2021-04-26\",\"2021-04-27\",\"2021-04-28\",\"2021-04-29\",\"2021-04-30\",\"2021-05-03\",\"2021-05-04\",\"2021-05-05\",\"2021-05-06\",\"2021-05-07\",\"2021-05-10\",\"2021-05-11\",\"2021-05-12\",\"2021-05-13\",\"2021-05-14\",\"2021-05-17\",\"2021-05-18\",\"2021-05-19\",\"2021-05-20\",\"2021-05-21\",\"2021-05-24\",\"2021-05-25\",\"2021-05-26\",\"2021-05-27\",\"2021-05-28\",\"2021-06-01\",\"2021-06-02\",\"2021-06-03\",\"2021-06-04\",\"2021-06-07\",\"2021-06-08\",\"2021-06-09\",\"2021-06-10\",\"2021-06-11\",\"2021-06-14\",\"2021-06-15\",\"2021-06-16\",\"2021-06-17\",\"2021-06-18\",\"2021-06-21\",\"2021-06-22\",\"2021-06-23\",\"2021-06-24\",\"2021-06-25\",\"2021-06-28\",\"2021-06-29\",\"2021-06-30\",\"2021-07-01\",\"2021-07-02\",\"2021-07-06\",\"2021-07-07\",\"2021-07-08\",\"2021-07-09\",\"2021-07-12\",\"2021-07-13\",\"2021-07-14\",\"2021-07-15\",\"2021-07-16\",\"2021-07-19\",\"2021-07-20\",\"2021-07-21\",\"2021-07-22\",\"2021-07-23\",\"2021-07-26\",\"2021-07-27\",\"2021-07-28\",\"2021-07-29\",\"2021-07-30\",\"2021-08-02\",\"2021-08-03\",\"2021-08-04\",\"2021-08-05\",\"2021-08-06\",\"2021-08-09\",\"2021-08-10\",\"2021-08-11\",\"2021-08-12\",\"2021-08-13\",\"2021-08-16\",\"2021-08-17\",\"2021-08-18\",\"2021-08-19\",\"2021-08-20\",\"2021-08-23\",\"2021-08-24\",\"2021-08-25\",\"2021-08-26\",\"2021-08-27\",\"2021-08-30\",\"2021-08-31\",\"2021-09-01\",\"2021-09-02\",\"2021-09-03\",\"2021-09-07\",\"2021-09-08\",\"2021-09-09\",\"2021-09-10\",\"2021-09-13\",\"2021-09-14\",\"2021-09-15\",\"2021-09-16\",\"2021-09-17\",\"2021-09-20\",\"2021-09-21\",\"2021-09-22\",\"2021-09-23\",\"2021-09-24\",\"2021-09-27\",\"2021-09-28\",\"2021-09-29\",\"2021-09-30\"],\"y\":[null,-0.01685437582505367,0.059147470635090516,0.05792716880398108,0.09433939203448172,0.10768609557319286,0.09234061078573874,0.11844525574941467,0.09764476000350597,0.0992012627875618,0.13211566443788358,0.1044671037035827,0.07497354218897834,0.09631245199490945,0.09815426041673425,0.11029662391673023,0.12703890235405435,0.12553384214662944,0.15039246399088047,0.13693649058194968,0.10788785262905765,0.10910532694265718,0.11533179413009176,0.10513029337500779,0.11499559317714536,0.1362639974658144,0.13115832173519082,0.10980673370558658,0.08567195634385927,0.10329496088038304,0.10610067914234267,0.1486883830348582,0.13045171598845284,0.14768580005200782,0.1429326519076939,0.14251427052647725,0.16726271039808616,0.19309509278863568,0.18620087541766317,0.18538217228319587,0.1896743438631605,0.20217260972842976,0.22679454099403284,0.2273516531537172,0.26607313729759197,0.2876231076040976,0.2736067384667613,0.2604229364207149,0.17347659057208964,0.19576955951199237,0.20313040848233355,0.22773272954585222,0.21977646011408014,0.2179313681235342,0.2081880164152896,0.21535641177447595,0.22148054107010218,0.1883163145662483,0.20231033719423253,0.16821731679351126,0.1953147852441166,0.20545234761938103,0.20181397105588927,0.2061284891452062,0.22759491086980765,0.2090621753770474,0.2173326640933828,0.20046524520368703,0.21770726455831824,0.2181976108206729,0.24419946184132924,0.2548240869102272,0.24850148412745732,0.24557053420288355,0.24598709137925523,0.2534371439665204,0.2611631075366023,0.24465432731944703,0.23613446980079078,0.24149927382965664,0.23190295303192454,0.23938848640342636,0.22883810647172287,0.23419315100466753,0.2452180066165739,0.25288003180683605,0.27030127928749503,0.27896223905091766,0.2811337724984888,0.29785032964749747,0.292968848692333,0.3065084618934104,0.30276692654592985,0.3043686696101435,0.30034739244967157,0.29722599553927265,0.2932476784029021,0.29543553848383675,0.304336472394628,0.3219950489256307,0.3191920669709387,0.32309057514533746,0.3305788448241067,0.3381254890579184,0.3276732513468794,0.33774213240972695,0.3589829912052356,0.3212604416345213,0.31381558803106446,0.2842818027996261,0.3048100359724082,0.2858550882682567,0.29197556915419276,0.3072785499687567,0.3073845362702552,0.30910220755237283,0.30301255572831853,0.2915916652445476,0.2677878898519581,0.2743482777362827,0.24982868436248795,0.252271477070521,0.2690143027692986,0.28816580854550655,0.28202945707741844,0.2973954641693797,0.29903934636551455,0.2927773983938433,0.31453149722251217,0.2969779948905855,0.3217615507054621,0.3274611875336406,0.3349980722715311,0.34670189692677233,0.3393369434955298,0.33159364997941965,0.33066896054345385,0.33590451965904644,0.3167160737347259,0.32201037224632967,0.3174352664948945,0.32457283279219906,0.32326104708810943,0.2928974310726489,0.2825211714934073,0.23847218830974848,0.2449709180703099,0.2376152680837771,0.25739028707602984,0.28330758620211705,0.3004758164707648,0.32581128546151716,0.32269271606862815,0.3616668525835449,0.3739464874981324,0.37285889656950166,0.35803358379361927,0.37669665872255975,0.39867486111644546,0.3908718248916594,0.37476373126872375,0.37685636785674537,0.3665941210803205,0.38190175361723955,0.40314872349897923,0.39503374824568604,0.3968035917863728,0.3841139668328559,0.39276644404374883,0.39556231159954525,0.39956589397302,0.4111819743752134,0.40424844538982985,0.4091094952507297,0.40420274905846076,0.400954752331814,0.40315474337496804,0.39452379178124697,0.4102970526048699,0.4082062402216933,0.4151565518916518,0.40935092876197476,0.41109742248064474,0.40171362154736334,0.40705233944694474,0.4103231387341548,0.41985460904964467,0.4166649868780401,0.42011565276297413,0.4293117430176978,0.4114449335036303,0.41927688337521096,0.4397220240173001,0.4496097615390322,0.45226416200909325,0.4480947594152016,0.45089673805722885,0.45051292535782617,0.4472929301755513,0.4390149622193511,0.44444425188949044,0.45648628412300774,0.45590855844857425,0.4475479540128924,0.4458209792860648,0.4447487116781328,0.4151472484469423,0.42916598905057723,0.40017764106781484,0.41088544987764775,0.43309441418443484,0.43478116519442866,0.4502975779758658,0.4546117312242137,0.465703808784661,0.46524009591304427,0.4681341056895052,0.46780246524867164,0.4690961001145528,0.47210120396607835,0.4763167589425501,0.47072776013822515,0.4707735476798365,0.47205167680453464,0.4727830005269231,0.49260745547047735,0.4664626780002099,0.4445306279889043,0.4726970804787205,0.46597278778906626,0.4603020646076823,0.4441463592382904,0.47086603486548184,0.485162601867021,0.48657763756534145,0.508259315461661,0.517065481930751,0.5307508490989494,0.5389148954625749,0.5329601435868134,0.5418060777215259,0.5346577486156352,0.5237146173807881,0.5285353523146117,0.5141495816961488,0.5140052870929037,0.523318126457712,0.5444916720944375,0.5490912221907966,0.5442153050604095,0.5402266811666643,0.5482431493583237,0.5657079041245379,0.5611802276990745,0.561928516526522,0.5646048074547239,0.5784760610966346,0.575898094809582,0.5727164991392957,0.5752205851301231,0.589468537072541,0.5971592022788708,0.5914131394373854,0.5794427072440371,0.5942001595996831,0.5791904197139639,0.5898187844027944,0.5869272373028742,0.5870841189195504,0.5793996560096937,0.59060665847538,0.5819435096661432,0.5930757197331817,0.5940004091691478,0.5985446858587011,0.6134041112651865,0.6241090925575097,0.6224773413235947,0.6003575806337316,0.5685317732247053,0.5887895680292057,0.6056331810456734,0.6030955296856968,0.5906207048526868,0.5829329583741092,0.5917175992260275,0.5974939438679412,0.6061866447956679,0.6023797117044918,0.6028742536379903,0.609486448939915,0.6125129871983703,0.6146546036864824,0.6158253783560481,0.6147354159611189,0.6231110700867724,0.6172198005396194,0.6157992922267634,0.6086692051693234,0.609561058918078,0.6101851193955763,0.6061758819870817,0.601766414035579,0.5893603617252281,0.5795430385105158,0.5546347982944788,0.5820423815687459,0.5852464149586265,0.5819148696500756,0.5969793356811466,0.6080480634195766,0.6010164834237706,0.6014376923224971,0.6112550155372094,0.6173735810080581,0.6245102352029401,0.6147509217023011,0.6196272036736572,0.6074918633623148,0.6284240666980374,0.634309133948717,0.6292940299886511,0.631369427840887,0.6338813579125482,0.619910320265612,0.5860151348803384,0.6116975676326231,0.6250542130877397,0.6262381220321902,0.6373619407569415,0.6412267011417063,0.6372203824609639,0.6312619821755123,0.638435120467296,0.6314739547785095,0.6269296780889562,0.6399233067799042,0.6248053915468725,0.6374879933117359,0.6442249642250633,0.6392439728956001,0.64684762353082,0.6571354091750758,0.6578304312210475,0.6585555526469629,0.663693425593102,0.6505186533610385,0.6326518438469713,0.6295430339500032,0.6400951468763099,0.6501651224620641,0.6515918330713935,0.653424246838266,0.6444402203967816,0.6557732754172623,0.6531599195562152,0.6513335256653312,0.6490826393069995,0.6552137917912793,0.6517239055021762,0.6391575055859438,0.6359385137163334,0.6288545790414737,0.6161681464464355,0.6283992575121442,0.6147602251470106,0.6258196494407311,0.6228742882978813,0.6151015338735233,0.5864087982859045,0.5840444463862096,0.5998513637892242,0.6235047334923378,0.6250542130877403,0.6283872177601675,0.6017972430974607,0.6060343236911045,0.5804991042698171,0.6030335067209647,0.5879243476711893,0.6024829616987226,0.607261101449414,0.6230433920870202,0.6226375065089922,0.6109536568968046,0.6054562331757021,0.6054314239898091,0.6304040586368771,0.6482528085229784,0.6465645069388661,0.6558436897242828,0.6629434949812945,0.6626510749446297,0.6661041122958624,0.6690989093900135,0.6698335166811231,0.6574026551848793,0.668600719046825,0.6727606357755223],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Min-Variance\",\"x\":[\"2020-04-02\",\"2020-04-03\",\"2020-04-06\",\"2020-04-07\",\"2020-04-08\",\"2020-04-09\",\"2020-04-13\",\"2020-04-14\",\"2020-04-15\",\"2020-04-16\",\"2020-04-17\",\"2020-04-20\",\"2020-04-21\",\"2020-04-22\",\"2020-04-23\",\"2020-04-24\",\"2020-04-27\",\"2020-04-28\",\"2020-04-29\",\"2020-04-30\",\"2020-05-01\",\"2020-05-04\",\"2020-05-05\",\"2020-05-06\",\"2020-05-07\",\"2020-05-08\",\"2020-05-11\",\"2020-05-12\",\"2020-05-13\",\"2020-05-14\",\"2020-05-15\",\"2020-05-18\",\"2020-05-19\",\"2020-05-20\",\"2020-05-21\",\"2020-05-22\",\"2020-05-26\",\"2020-05-27\",\"2020-05-28\",\"2020-05-29\",\"2020-06-01\",\"2020-06-02\",\"2020-06-03\",\"2020-06-04\",\"2020-06-05\",\"2020-06-08\",\"2020-06-09\",\"2020-06-10\",\"2020-06-11\",\"2020-06-12\",\"2020-06-15\",\"2020-06-16\",\"2020-06-17\",\"2020-06-18\",\"2020-06-19\",\"2020-06-22\",\"2020-06-23\",\"2020-06-24\",\"2020-06-25\",\"2020-06-26\",\"2020-06-29\",\"2020-06-30\",\"2020-07-01\",\"2020-07-02\",\"2020-07-06\",\"2020-07-07\",\"2020-07-08\",\"2020-07-09\",\"2020-07-10\",\"2020-07-13\",\"2020-07-14\",\"2020-07-15\",\"2020-07-16\",\"2020-07-17\",\"2020-07-20\",\"2020-07-21\",\"2020-07-22\",\"2020-07-23\",\"2020-07-24\",\"2020-07-27\",\"2020-07-28\",\"2020-07-29\",\"2020-07-30\",\"2020-07-31\",\"2020-08-03\",\"2020-08-04\",\"2020-08-05\",\"2020-08-06\",\"2020-08-07\",\"2020-08-10\",\"2020-08-11\",\"2020-08-12\",\"2020-08-13\",\"2020-08-14\",\"2020-08-17\",\"2020-08-18\",\"2020-08-19\",\"2020-08-20\",\"2020-08-21\",\"2020-08-24\",\"2020-08-25\",\"2020-08-26\",\"2020-08-27\",\"2020-08-28\",\"2020-08-31\",\"2020-09-01\",\"2020-09-02\",\"2020-09-03\",\"2020-09-04\",\"2020-09-08\",\"2020-09-09\",\"2020-09-10\",\"2020-09-11\",\"2020-09-14\",\"2020-09-15\",\"2020-09-16\",\"2020-09-17\",\"2020-09-18\",\"2020-09-21\",\"2020-09-22\",\"2020-09-23\",\"2020-09-24\",\"2020-09-25\",\"2020-09-28\",\"2020-09-29\",\"2020-09-30\",\"2020-10-01\",\"2020-10-02\",\"2020-10-05\",\"2020-10-06\",\"2020-10-07\",\"2020-10-08\",\"2020-10-09\",\"2020-10-12\",\"2020-10-13\",\"2020-10-14\",\"2020-10-15\",\"2020-10-16\",\"2020-10-19\",\"2020-10-20\",\"2020-10-21\",\"2020-10-22\",\"2020-10-23\",\"2020-10-26\",\"2020-10-27\",\"2020-10-28\",\"2020-10-29\",\"2020-10-30\",\"2020-11-02\",\"2020-11-03\",\"2020-11-04\",\"2020-11-05\",\"2020-11-06\",\"2020-11-09\",\"2020-11-10\",\"2020-11-11\",\"2020-11-12\",\"2020-11-13\",\"2020-11-16\",\"2020-11-17\",\"2020-11-18\",\"2020-11-19\",\"2020-11-20\",\"2020-11-23\",\"2020-11-24\",\"2020-11-25\",\"2020-11-27\",\"2020-11-30\",\"2020-12-01\",\"2020-12-02\",\"2020-12-03\",\"2020-12-04\",\"2020-12-07\",\"2020-12-08\",\"2020-12-09\",\"2020-12-10\",\"2020-12-11\",\"2020-12-14\",\"2020-12-15\",\"2020-12-16\",\"2020-12-17\",\"2020-12-18\",\"2020-12-21\",\"2020-12-22\",\"2020-12-23\",\"2020-12-24\",\"2020-12-28\",\"2020-12-29\",\"2020-12-30\",\"2020-12-31\",\"2021-01-04\",\"2021-01-05\",\"2021-01-06\",\"2021-01-07\",\"2021-01-08\",\"2021-01-11\",\"2021-01-12\",\"2021-01-13\",\"2021-01-14\",\"2021-01-15\",\"2021-01-19\",\"2021-01-20\",\"2021-01-21\",\"2021-01-22\",\"2021-01-25\",\"2021-01-26\",\"2021-01-27\",\"2021-01-28\",\"2021-01-29\",\"2021-02-01\",\"2021-02-02\",\"2021-02-03\",\"2021-02-04\",\"2021-02-05\",\"2021-02-08\",\"2021-02-09\",\"2021-02-10\",\"2021-02-11\",\"2021-02-12\",\"2021-02-16\",\"2021-02-17\",\"2021-02-18\",\"2021-02-19\",\"2021-02-22\",\"2021-02-23\",\"2021-02-24\",\"2021-02-25\",\"2021-02-26\",\"2021-03-01\",\"2021-03-02\",\"2021-03-03\",\"2021-03-04\",\"2021-03-05\",\"2021-03-08\",\"2021-03-09\",\"2021-03-10\",\"2021-03-11\",\"2021-03-12\",\"2021-03-15\",\"2021-03-16\",\"2021-03-17\",\"2021-03-18\",\"2021-03-19\",\"2021-03-22\",\"2021-03-23\",\"2021-03-24\",\"2021-03-25\",\"2021-03-26\",\"2021-03-29\",\"2021-03-30\",\"2021-03-31\",\"2021-04-01\",\"2021-04-05\",\"2021-04-06\",\"2021-04-07\",\"2021-04-08\",\"2021-04-09\",\"2021-04-12\",\"2021-04-13\",\"2021-04-14\",\"2021-04-15\",\"2021-04-16\",\"2021-04-19\",\"2021-04-20\",\"2021-04-21\",\"2021-04-22\",\"2021-04-23\",\"2021-04-26\",\"2021-04-27\",\"2021-04-28\",\"2021-04-29\",\"2021-04-30\",\"2021-05-03\",\"2021-05-04\",\"2021-05-05\",\"2021-05-06\",\"2021-05-07\",\"2021-05-10\",\"2021-05-11\",\"2021-05-12\",\"2021-05-13\",\"2021-05-14\",\"2021-05-17\",\"2021-05-18\",\"2021-05-19\",\"2021-05-20\",\"2021-05-21\",\"2021-05-24\",\"2021-05-25\",\"2021-05-26\",\"2021-05-27\",\"2021-05-28\",\"2021-06-01\",\"2021-06-02\",\"2021-06-03\",\"2021-06-04\",\"2021-06-07\",\"2021-06-08\",\"2021-06-09\",\"2021-06-10\",\"2021-06-11\",\"2021-06-14\",\"2021-06-15\",\"2021-06-16\",\"2021-06-17\",\"2021-06-18\",\"2021-06-21\",\"2021-06-22\",\"2021-06-23\",\"2021-06-24\",\"2021-06-25\",\"2021-06-28\",\"2021-06-29\",\"2021-06-30\",\"2021-07-01\",\"2021-07-02\",\"2021-07-06\",\"2021-07-07\",\"2021-07-08\",\"2021-07-09\",\"2021-07-12\",\"2021-07-13\",\"2021-07-14\",\"2021-07-15\",\"2021-07-16\",\"2021-07-19\",\"2021-07-20\",\"2021-07-21\",\"2021-07-22\",\"2021-07-23\",\"2021-07-26\",\"2021-07-27\",\"2021-07-28\",\"2021-07-29\",\"2021-07-30\",\"2021-08-02\",\"2021-08-03\",\"2021-08-04\",\"2021-08-05\",\"2021-08-06\",\"2021-08-09\",\"2021-08-10\",\"2021-08-11\",\"2021-08-12\",\"2021-08-13\",\"2021-08-16\",\"2021-08-17\",\"2021-08-18\",\"2021-08-19\",\"2021-08-20\",\"2021-08-23\",\"2021-08-24\",\"2021-08-25\",\"2021-08-26\",\"2021-08-27\",\"2021-08-30\",\"2021-08-31\",\"2021-09-01\",\"2021-09-02\",\"2021-09-03\",\"2021-09-07\",\"2021-09-08\",\"2021-09-09\",\"2021-09-10\",\"2021-09-13\",\"2021-09-14\",\"2021-09-15\",\"2021-09-16\",\"2021-09-17\",\"2021-09-20\",\"2021-09-21\",\"2021-09-22\",\"2021-09-23\",\"2021-09-24\",\"2021-09-27\",\"2021-09-28\",\"2021-09-29\",\"2021-09-30\"],\"y\":[null,0.023760585037902127,0.01943124471480684,0.013311401716079585,0.006416980010258921,-0.00046501257732423085,-0.013607742257681132,-0.020080985646035665,-0.020225862081686308,-0.04167781174440477,-0.03620669632419604,-0.02803455510233499,-0.054380212838613495,-0.03668661473796786,-0.03978907776370777,-0.05160960086877531,-0.04092347857341927,-0.03998362217516771,-0.018973120951116806,-0.02522765870353616,-0.04450553660054879,-0.05478344679455549,-0.03208922853950191,-0.04927066893999743,-0.03671090323648363,-0.019220283582429776,-0.020028314549757065,-0.054743692612382655,-0.04899143064432143,-0.043311739214412115,-0.05633405013685244,-0.07636870706049037,-0.06719434692590909,-0.0691895557655805,-0.07652127533412523,-0.10074606749226911,-0.08171211850922755,-0.09232725583089241,-0.11205557894935547,-0.11745624003943123,-0.14405042722858896,-0.15052836549731685,-0.13243051107059223,-0.15772813710954503,-0.1581425209247358,-0.17413585427466727,-0.1439721221287109,-0.14483275392898187,-0.11937743343517682,-0.10837291470766153,-0.110461027793467,-0.09123357703334478,-0.08749128599554379,-0.0996468022564796,-0.1047902186946339,-0.05832032879397664,-0.07257503597329928,-0.06210819607598084,-0.04869542048609843,-0.05657693767987848,-0.0720574229009654,-0.06899411257996835,-0.05636651829787742,-0.0390047967167273,-0.04095980975708968,-0.03991721693056938,-0.05369215949076045,-0.04689626037182171,-0.03811899124381779,-0.042996766091042304,-0.05075604766695574,-0.04467457855509316,-0.032058560624197985,-0.030022712004205254,-0.0466251638167644,-0.03951725601072231,-0.05380298211993928,-0.04904714839587154,-0.04313038838499261,-0.04336579169927535,-0.039389221586622725,-0.025850204428575108,-0.03137674809005686,-0.03138580278908165,-0.018701979623101717,-0.023050022838924877,-0.022992527275843666,-0.029564993743597667,-0.021311470191257342,-0.025210196271431617,-0.013774048709473186,-0.029626178413063586,-0.0274526380584158,-0.031086809942515448,-0.008182001620986257,-0.006726963697754718,-0.0017161559960318096,-0.01534062334675701,-0.015650801799411695,0.006010685082741718,-0.014686816938505931,-0.006438161383755303,0.0009027459415578143,0.018278135356961656,0.02430136663915161,0.026467904179982016,0.023394601167536555,0.02340975952820812,0.02171695009480934,0.019621919764343465,0.014246561180959239,0.014625928029379898,0.02068611184428515,0.002161554923154174,-0.001842614795157016,0.006139378982793708,0.01922276358649766,0.01210958239406379,-0.003333193601579798,-0.0046690844469099435,-0.0026654688566160045,0.012137143109006931,0.012550081884854958,0.018598329881500453,0.010108441717946004,0.01723727534408237,-0.00028901055833907563,0.009149505224066434,-0.003521777022388206,0.01674065908538047,0.01279177627146888,0.008976686597867767,0.02186667280608523,0.025282753553946824,0.04079989369898618,0.04845319079748189,0.05605233724261982,0.061152462476779634,0.06447459522264531,0.059832663570899,0.07217533522328057,0.0822539539715057,0.08051282403200433,0.0838643160254573,0.08911183661310385,0.09533710914304327,0.09042635403687704,0.09587199708921768,0.09422500846627946,0.08067689642505171,0.07179183775677456,0.07744874127382206,0.07973170428744014,0.07923553419552132,0.0869503406300185,0.0878274059578239,0.08364814028694645,0.06954974016268256,0.0729247955322081,0.08219135882330719,0.08692565120753626,0.09828244007327203,0.09432662019555016,0.09808145598573681,0.10324142688100779,0.0998561320375917,0.09568967152683228,0.09813529913411778,0.08591649434200188,0.0861669871271622,0.08711426485763196,0.09472886626996435,0.10086587675593894,0.09973177244099363,0.10814169848757693,0.10645198248997856,0.10868698489583228,0.10737311066771449,0.11702136453008127,0.11657457649851266,0.12351915716048345,0.12331841591357406,0.12193694111921038,0.11705901701401111,0.11858086478725549,0.11705790109514602,0.1231582614285398,0.12942467981029093,0.13053010454223424,0.11764506596928914,0.11947289425552765,0.12152269746806454,0.13272983953724626,0.13427444282549095,0.1373147479244936,0.14369846380092688,0.14454118952549844,0.14143029239305394,0.14868903045939041,0.15615959690178793,0.14814703093936754,0.1530185027177553,0.1486708457474466,0.14792192203544952,0.15231131643931595,0.1418463326011985,0.13083686768346614,0.12991167509618307,0.12624490429896928,0.14320686080848488,0.12429358959567427,0.1305298960333472,0.12476374133219825,0.1349293273685115,0.1548809501515518,0.15888407354292733,0.1770747164812274,0.17752889728470334,0.18168471411595588,0.17752905776666972,0.18490023827122748,0.1948830031770259,0.19721521682650933,0.19766477726965048,0.19500954340087429,0.19459601862579934,0.20965260052275814,0.21404983271131117,0.2153295788411429,0.20455760147158397,0.202738239487676,0.21606914337617966,0.21198704857683093,0.2051966715503708,0.20471696249805893,0.20677051755394094,0.19764816234239446,0.20676539122265147,0.21440664575194268,0.2189774096360304,0.22002578691449393,0.21025110713156758,0.20749856818397205,0.19397674408313237,0.19715641700447994,0.20399344642211514,0.20968636945197927,0.21216090014706457,0.2160959826938138,0.2207368329531647,0.2203936976866352,0.21952412721454362,0.2056447474111016,0.21813252436318753,0.21028059026653678,0.20244294806113006,0.19966517558248653,0.1999152494089531,0.20493662222873166,0.2070809338749935,0.21340802326311747,0.21219134672392714,0.20050747521608225,0.21807909847463836,0.20545118181917443,0.190824504665573,0.18000078664341013,0.1831109817669303,0.18350774008402926,0.18846742831815688,0.1796997976127337,0.17429187475853336,0.18512518789243115,0.19455609881075597,0.18897374507942333,0.16155408348535483,0.16161863617208305,0.15295994712175376,0.16498587818244537,0.1617636119855388,0.1671912455514486,0.1641185639998861,0.18005808564199088,0.18575914522362913,0.192305259359846,0.19126969150303075,0.18860360075434168,0.18160953378460576,0.19128012597147226,0.18568668795618448,0.1827099686800906,0.1893603764085816,0.18787289325285972,0.1872383813465497,0.18825401913976214,0.1940091929454537,0.1968852287453946,0.1968454091848768,0.19549924873182234,0.199845790780667,0.19934119499805147,0.20562486719932282,0.21034650327255222,0.21296279788548667,0.22307449493215925,0.2262102916482458,0.2283130983533892,0.23690369043713222,0.2228091418721816,0.22606304349139483,0.22546989727183164,0.22895970168417668,0.23405804967441401,0.2279583178605955,0.23587185709798497,0.23717470553568365,0.23284256176318952,0.22561904079855233,0.22783436502703025,0.2334873763518579,0.231684932735158,0.23561615000967406,0.23729617027501382,0.23053360074590534,0.22909408923058994,0.24007918077768098,0.2370049791939981,0.23063309405689658,0.23087645785669642,0.2320839251507021,0.22884744467045737,0.21670253042908438,0.22242360871227906,0.22941589028454423,0.2156111299492134,0.2273606066774958,0.2129201332709203,0.21311044099135223,0.18100629800875123,0.16969950798320665,0.2033486517226626,0.20159424520072067,0.21718753160004556,0.2095761463169057,0.1996917180793325,0.20413620784237851,0.19965469597657814,0.19459932257596102,0.1558687072356162,0.15978138151989252,0.15164460198880425,0.14735466427088073,0.12745502055687052,0.15045648288546887,0.1453880681414712,0.13974851072015437,0.16888537276072157,0.17097893184152513,0.14262212183724565,0.13586775846441213,0.1499901911481425,0.14527706466541823,0.16411611510467683,0.16562593668995085,0.16526072666344005,0.18428007400223345,0.18225420585578833,0.18594753607560643,0.18433463122298255,0.18306119886731453,0.17232088572006354,0.17442224929547967,0.16101838841995852,0.14854147590375044,0.15497675904409647,0.13808593405801428,0.12679812714389915,0.12461480804064262,0.12243787723888411,0.12707254994487527,0.1495389030901788,0.16492548899710857,0.16703494852838352,0.16986987018635635,0.18057626542572702,0.18106869733270003,0.18124105548343095,0.1634798330102536,0.16813393078341887,0.17217536711559278,0.1619248747656017,0.17378478039115142,0.1826081502077701,0.19038134229694936,0.19302924780948394,0.18865568288765378,0.1860550223524451,0.18773402424556163,0.204479990792499,0.20003330940374475,0.20640688674527308,0.20656657670955147,0.2098074681469444,0.21838015757104334,0.21615733786310276,0.19345602329883427,0.19661343322059333,0.19489607297042544,0.1923923243037482,0.20377076041563114,0.20549755409725567,0.1910704285985767,0.18775465583071504,0.19023566551963977,0.1814178065403842,0.18598200513075924,0.1769482830947604,0.19071857459010588,0.1783403393343277,0.17825062070188635,0.20289643198835194,0.2043433443644036,0.21436186166802473,0.20910709452758725,0.2136297610476816,0.21887868275533684,0.22440220357383822,0.23104377943073984,0.2323073829514346,0.24158577902536704,0.2445674262595643,0.2449878517991666,0.25796038013607614,0.2587260199947401,0.2595347049864538,0.2519400437083963,0.2665886443428631,0.26063600169018186,0.26431510246920675,0.2579443053696011,0.2545580923750672,0.2589375994181813,0.25589332384665675,0.2744881868983251,0.27698959605159335,0.27461771425017334,0.2788187499676087,0.280985918098287,0.2773173084110314,0.2827929608319779,0.28536312988513046,0.28847824767143404,0.2984135299759283,0.2835313863973601,0.2964925249844108,0.3025684078149433,0.3008372875080112,0.30378657594772696,0.3030535613308898,0.2961291321255779,0.2978543685949857,0.3010318479081535,0.3032689429622306,0.3108729498476137,0.314257402980999,0.32873371123255546,0.3257330241124661,0.3199977092696664,0.31649571763316064,0.3145522904228548,0.3129908681277471,0.30563767144217424,0.30716428280992636,0.2883494107216569,0.29144739334185266,0.3078654892772874,0.31121835687718513,0.30795087497818074,0.29155851665360166,0.30237822674761894,0.29099125195918707,0.28775634062561495,0.28156289309949645,0.30395203434338014,0.3121323849356823,0.3119043951519924,0.3079699661766093,0.3097000094047271,0.3121463258103836,0.312202543318721,0.3166526159117855,0.3194600479668559,0.3271365025110957,0.32426015061881097,0.3298218400825772,0.32921850579870937,0.32889803332808243,0.33049289451233177,0.3315295379112366,0.332752855115642,0.3293663046023869,0.3308504977385105,0.33245330019171737,0.3305559285855899,0.33208053559769635,0.34142684150955094,0.3408510300138905,0.3408260303771955,0.33535123563393476,0.3307445104540572,0.32740838500975666,0.32598884789607774,0.3351028069978319,0.32948736022016845,0.3317044690852553,0.3292494347956445,0.33477948291883375,0.3388317845976918,0.3385678436360031,0.3464241901122582,0.3504801393322521,0.34816655620201087,0.34893973359314634,0.3295776615225472,0.3318540231778846,0.3445349338222099,0.34114644389509063,0.3420316081152881,0.3439155985922089,0.3439737062549233,0.35555232455032604,0.35853393735131744,0.3547953427829711,0.357123163850277,0.350499095526714,0.3516592605277826,0.3518618107420346,0.3583427070634124,0.36523179085353763,0.34783791988311363,0.3413705398026794,0.3330892344974512,0.33629390581272434,0.34838042417565807,0.33903872753757236,0.33994838618944145,0.35501692022118303,0.34902249077364544,0.341787380024684,0.35054107011556424,0.35874215090524353,0.346911703512939,0.3471705755154939,0.3349441555203705,0.32127198511860167,0.2956359570488938,0.3088570037683127,0.31605706085737006,0.3312202819269874,0.3309219265143297,0.3341807440898015,0.3440304250719617,0.3454040430620491,0.34406944471765066,0.3549531495328966,0.3639023198404543,0.3609976392784535,0.3666973333617014,0.3729875120332098,0.3677790059071935,0.3720179126158738,0.3695668615494656,0.36753087247293137,0.3728167472765367,0.37360584747115055,0.37487049313411314,0.3798566319930028,0.3878378599646921,0.3754030193395028,0.3753454910989411,0.3907475403542282,0.3945841243112307,0.3964163898133015,0.40464283439855087,0.41988614193788676,0.42528768607764844,0.42781292070368737,0.43400718028436724,0.44037498990925705,0.43732526704988817,0.4248540820566873,0.4277753139105325,0.42961441360196906,0.43914953959388736,0.4347248463313882,0.44637222088996986,0.4393594939333545,0.4389925416821545,0.43910067517779083,0.4425880953225976,0.4446132954283486,0.4332893974724126,0.42583136791880816,0.42389826216163584,0.4194717102559562,0.41704330539763346,0.4231045080259317,0.4355465811106818,0.4155643488635645,0.40840664088442513,0.40133216117753956,0.39705399023279475,0.39610129203425437,0.3983486110639489,0.4050967000928527,0.3886761171470383,0.39421708777404163,0.3999206752538327,0.38229008063081404,0.39004913808872255,0.3958941389887176,0.39999449377764407,0.40368000132127646,0.3963440190583718,0.38769534329759403,0.3751860848479329,0.3828271770592957,0.39719749333702126,0.40485249253147093,0.4139912604088294,0.4318387230690437,0.42929424558193885,0.4336908545227549,0.43933114222924163,0.43621171163777017,0.42530491000749016,0.4214378916983337,0.4240102661284453,0.42071877338972197,0.4191621809042201,0.40939179072490184,0.42823388856020306,0.42966698749868115,0.4416238110215909,0.442375314200979,0.43067474392184524,0.4285432137829315,0.41255337245055235,0.4067363864868414,0.39904137603232503,0.3935468443102379,0.3744616570241954,0.3792449900591366,0.34059358407567597,0.35004241932131874,0.2931195992773685,0.33449896181606475,0.28200075970938676,0.32820903102711885,0.33341002037869494,0.3581129408942674,0.35982392632476357,0.3646609555851894,0.3360337786376566,0.32869272244867775,0.33579468830781933,0.36821395383284883,0.3785110618088101,0.3580681207695733,0.3704800772135013,0.39235988177079917,0.3953655735280823,0.39598118499660684,0.3885431176978502,0.3679614820946078,0.3658790215976153,0.38578754493042866,0.37996850532848936,0.35197363045589203,0.3598979410326646,0.3673862017269609,0.3805316445681468,0.39983256384953947,0.41268344432907633,0.4084531431748857,0.4154553757757413,0.3917945906758902,0.3632286009233139,0.3689179228005601,0.3931047927633817,0.4026118922854329,0.384717312671335,0.39368234968236737,0.37748125755747863,0.3538224073183811,0.36322673832340113,0.37142165447318276,0.38191392688286907,0.38583401532437867,0.41408175660587054,0.4135769974207988,0.4151077217492054,0.41934419150426683,0.4321994127886193,0.41934885375955644,0.42722208209810075,0.41962154780731065,0.4166739470419052,0.44145698193594707,0.4452414664028066,0.42404574316960986,0.43299342673035457,0.4567662157723493,0.451874823400787,0.43633449724770523,0.41002121189315477,0.41850486738935677,0.4333586874383579,0.42841354344584515,0.4432286514458321,0.4545077792086567,0.421356255778079,0.4290843512516078,0.4481244886408686,0.43525977105301794,0.43938945376033756,0.4227144675465091,0.41530787145999537,0.4180396775257478,0.39317866607308494,0.3963507770484376,0.3838599186669407,0.3831584967256878,0.4097404686641908,0.41687854409024383,0.4557641487899762,0.4564922788093022,0.45152201583852714,0.4580944778624396,0.46241269650874206,0.4700313900504596,0.4603686612136244,0.4752424675553426,0.46238875073875096,0.45792968642479037,0.4521594446359296,0.46334338486831017,0.46886291867184404,0.4589546215591511,0.48764777313372587,0.4948000401242889,0.49806966908595696,0.5205327149482206,0.5153825498189013,0.506397748003643,0.5183779133398587,0.5112817303848336,0.5145391042471399,0.5084376076982791,0.5084585739524352,0.5080165309294176,0.507549149770941,0.5169157408041671,0.5152438699338193,0.5140399964434106,0.5080771470137366,0.517572477255277,0.5284258411681035,0.5273621895260576,0.5340198814445463,0.5284876218101955,0.5227285370948351,0.5395415959910677,0.531312025321407,0.5270700953383438,0.5288486304603612,0.5286112703667416,0.5346914875873281,0.5332030036608864,0.5386369626103473,0.5428324388002905,0.5440606335283507,0.5404737344938728,0.5480138289994987,0.5470939367624339,0.5582231758074103,0.5606619459040902,0.5501167221213545,0.5621351307777442,0.566253062500716,0.5578663172305207,0.5547205189835656,0.5628337088137387,0.5649297491694538,0.5622906745984928,0.5716173782423992,0.5732691575107911,0.5683579571387196,0.5702482219579224,0.5743275313913154,0.5617570805323227,0.5656222913447253,0.5727418594607319,0.5786598444718969,0.5881764101259381,0.599365383335378,0.6051938833485397,0.6086763411966993,0.6058957459103478,0.6116699658439342,0.6087637161132808,0.6052875048288344,0.6021821816074049,0.6013162043232734,0.6177099488782036,0.6192988143112541,0.6202474205060984,0.6153755501680949,0.6168086180502139,0.6299735283744572,0.6276630870196553,0.6149601670436544,0.617054573188506,0.6080489245002163,0.5902597897147908,0.5993706063715365,0.6015895007601766,0.5846160213062297,0.5880080371294432,0.620601880446153,0.614070245100321,0.6054941756723125,0.6173035955394421,0.5996492504824869,0.5987715277652736,0.62196215225725,0.6355196552819524,0.6382288511358121,0.630714049122802,0.630905938971756,0.6322411074325063,0.6299018404449761,0.6138730359001083,0.6148551099475663,0.6151495621266048,0.6041195559763852,0.6108862104045549,0.6092096825393889,0.5981571622376798,0.5978313748073005,0.599170328398442,0.5920327212089731,0.583273671875044,0.5944108482521757,0.5921807153524161,0.5925768018068867,0.5993231539382955,0.5953500719609615,0.604040003888068,0.5937912715983653,0.5919901036162769,0.5638490796761786,0.5736505821941644,0.5717181684763106,0.5950070518864037,0.5952823777811909,0.607908873250504,0.5953869811649091,0.6083823699714466,0.6078783884235661,0.6317406909233474,0.6399391600345921,0.6440440313830942,0.6366161414623173,0.624787829329142,0.6097277751836498,0.6213598335114654,0.6108055573835978,0.6160352115661107,0.626528114024212,0.6224273465282499,0.650160303351085,0.6592864888738903,0.6660551719522199,0.6660083546773543,0.6605494282933981,0.6684440890319179,0.6669639747795484,0.6657912698419497,0.6770841740825615,0.6987633654183096,0.6938643219558902,0.7074849504590031,0.7146809567172749,0.7344477460695622,0.7205378745000801,0.7062084010489023,0.6954919167808089,0.6990361267986482,0.7245908178412559,0.7565183278431236,0.7624228224967406,0.7590789973247061,0.7539564819826345,0.7412281753384984,0.7591219049747371,0.761966827257144,0.755433677933461,0.7545533933730415,0.7544956769861035,0.7606451798094744,0.756091289762397,0.7614358785799167,0.7592680049777563,0.755001503525611,0.7551059583232489,0.759760381891744,0.7465885919495039,0.7462941706339512,0.7374461747245782,0.7522097593829078,0.7515284051360263,0.7477012503564673,0.7482394973694098,0.739358445085722,0.748312180734559,0.754997264436496,0.756831239673071,0.7785701957248703,0.7731874496189794,0.7733590539412112,0.7753629135533258,0.780810715541232,0.8034192137545202,0.7895841540569479,0.7940477002390818,0.7997979847279708,0.8029313718057047,0.807041270051924,0.8046736891710302,0.8071431503299149,0.8016391370614437,0.7975326894313657,0.8086725926349618,0.7986266689655213,0.809345982537867,0.8054624899885652,0.8084387845958485,0.8214668126472955,0.8239657453797866,0.8185507519106257,0.8069528566088735,0.8009242887171037,0.7974916009973496,0.7974221002484834,0.8141194750892204,0.8221559096123252,0.8215169767607007,0.8257598128126657,0.7957888783052931,0.7948501865438042,0.7703041814841927,0.7713803168745601,0.779254778925152,0.7753583932765495,0.7745820894549933,0.7865715786159835,0.7717093095577716,0.7671686343874708,0.7793643634000909,0.7479786685791727,0.7230756945430694,0.7226866766073547,0.7207997438652718,0.717956439579214,0.7028693603770391,0.6937831963746393,0.6992025405058642,0.7283488015670976,0.7318998305493558,0.737712890452884,0.7607295156493479,0.7516583546705338,0.742308700594265,0.7601011491072946,0.7686583418872777,0.7710929924333423,0.7659709018118812,0.763696798430185,0.7707438812690963,0.7787503681386403,0.7890061469346381,0.7890779602572502,0.7989044181364524,0.7936774507031235,0.7813991279637327,0.7756987265385429,0.7838601784052184,0.7914580863337428,0.7738434290959475,0.778516384718881,0.7697357097388751,0.7646217159027797,0.7546165727942447,0.7552838888362627,0.7354352850970767,0.7513075548296588,0.7847645095178195,0.7804245214807286,0.7817667872872365,0.781881157382585,0.7742208116400988,0.7805753450851731,0.7894137925247722,0.7937287552256678,0.7929389730632641,0.7942126648566301,0.7919203365357419,0.8007086588443411,0.8086114207334438,0.8157077589408457,0.8205143444947376,0.8232126586507988,0.8379043538769417,0.8361438683078195,0.8517637192101748,0.8482882746592566,0.8474276241383822,0.8576818389999803,0.8420714045220041,0.8629193131516215,0.8674307292458434,0.8660764113666986,0.8695210257212813,0.8691960653151847,0.8667286726963659,0.8623499607264675,0.858617266055675,0.8610712131751661,0.8671877750580392,0.8649044423687688,0.8690230567872643,0.8801726072524045,0.8628439309858842,0.870988390310995,0.8871820997320838,0.8822582786095778,0.8902655412312099,0.9015229685846133,0.909275626012024,0.9138116909558842,0.9153640376084029,0.9228746070902025,0.9286115421341397,0.9349121625207659,0.9405876471064509,0.9480737994892148,0.940558434836565,0.9344577631566604,0.944986550067245,0.958575000747578,0.950968700520588,0.972519638283516,0.9694050244541115,0.9868833269313799,0.981182452881781,0.9918843785515665,0.997171412303147,1.0218847368206716,1.0096618794535615,1.0195685734559703,1.0159452669894904,1.026624780512119,1.0291292439764508,1.0448921586403714,1.060256925920641,1.066276732213617,1.0412669893790376,1.0688395555025783,1.0543754086600545,1.0439899332151712,1.0518507082074762,1.0494576434503466,1.069287171373551,1.0478827110450215,1.0555210730096158,1.059033446466024,1.0694287626506491,1.0680861452239436,1.0476668761171988,1.0596173747781026,1.0724730810268817,1.0621005604830822,1.0760637433975044,1.0815251447263883,1.0739598727119692,1.0887272246303712,1.0852934780985195,1.1024708837900747,1.116499980613456,1.1036959509113906,1.112797270928099,1.1004681813492883,1.1087274723718736,1.096247540864269,1.0932777228019277,1.0987613062375412,1.1059851444695359,1.0769851033118356,1.0757429541892165,1.0447769452426305,1.0665170947314921,1.0624003437540965,1.038139081664037,1.0518690184648216,1.0768324955720208,1.0820054194377708,1.0673487965543536,1.0525274742651751,1.0769144538803985,1.0724961753407292,1.0827771073143686,1.102367194546165,1.0703706993896698,1.0206954639786856,1.0317459586725253,1.0226283839340202,1.0287843101436716,1.0525631319468851,1.0659726203132012,1.0490555980716367,1.0559530305979474,1.056439988908521,1.0653227009764663,1.0790958984616106,1.0957268742254995,1.1030693205922644,1.1055644884080853,1.126120688340991,1.1249957781570417,1.1239112120591144,1.1200336089021987,1.1215485507098237,1.1348706595226226,1.1381311121056017,1.1371206921374641,1.1339088090479574,1.1328486759992775,1.1357955155584496,1.1392034073028108,1.1383694614714277,1.1362473056247078,1.1332816965071086,1.153377983344491,1.1596708581279427,1.158154902193008,1.145873874179907,1.1388746139784605,1.1409925981315787,1.130719981367743,1.1337108442402761,1.1345189342271165,1.1175617229059989,1.0831712594553893,1.07681630579581,1.0758267950035099,1.0749670162740381,1.0647085067477429,1.0727866993279638,1.0804994346425527,1.071336518123946,1.048513864477865,1.0482080825812967,1.0586408985550864,1.0545734876608135,1.054225402739776,1.0668450028290954,1.0665559352541774,1.064422307351054,1.0824115599373947,1.0977915611259839,1.1127222905643714,1.114141030058637,1.1221159421963995,1.1376352493184658,1.1402830098145165,1.1617663065162285,1.1579153086990823,1.13665602533314,1.140846176404951,1.1323360350720963,1.1213254826858141,1.1279380467242555,1.1159321843459211,1.1010325437205224,1.112675033821645,1.1059469927448746,1.0946190189294294,1.0999791466313624,1.0855969126208342,1.070939055063595,1.072023718896097,1.1117086180584628,1.1239776909195847,1.1267572115825382,1.1114974101527113,1.1385934666963742,1.13563207603179,1.133252424584413,1.130591201733743,1.144011779248455,1.1369924892998595,1.1433052161584616,1.1472177923335058,1.1504606556114627,1.1653134263512426,1.1564321046420756,1.153923539256715,1.1581059867914645,1.1666874598614791,1.1628967490794824,1.1848073167050894,1.170493442063024,1.1899845903314152,1.1947203418815286,1.1960378359996762,1.2034519555230414,1.2033211322201387,1.2086684750570091,1.2096135584726504,1.2142799490351304,1.2094337460714901,1.2202245378835515,1.2291928494851807,1.235694455247268,1.2340870704777163,1.2396818164002288,1.241700141808272,1.2282980267895356,1.2285864629589915,1.2200399709479064,1.2065497124408813,1.2304705159393796,1.233127047266763,1.222789399806922,1.2012248787405775,1.1800665936623913,1.1739801702243202,1.1851971217092427,1.1726468961981569,1.2107191357580294,1.2058661303805098,1.2131146988138921,1.2257678982630758,1.2321169281352757,1.2455828217944922,1.2458682207430698,1.2461319080967894,1.2507950190805923,1.2353113531757178,1.2332574791154824,1.2277523061163182,1.247469579313182,1.2339266143411525,1.2286150452592999,1.2279004192978622,1.2231941738653518,1.235601956825863,1.2477639498560475,1.2439643725514102,1.2303082120037558,1.227656670155096,1.2183583215005989,1.2103794751497006,1.1842535961282232,1.184361842048153,1.172045594029167,1.1503565761102466,1.1657035947661494,1.1548254632679087,1.115562547662285,1.1256795384481002,1.1282643917473805,1.1467402482584035,1.1703945295131866,1.174574761179731,1.200553990854107,1.1963188029154863,1.2072981157525056,1.2181559429655349,1.2097047464687232,1.2020188769051563,1.2134112943412432,1.2052873603283318,1.2085119805892592,1.2111471702944043,1.2175548577643514,1.2306240991608695,1.2359463786500133,1.2222051362725534,1.2454000112793713,1.2380344331156956,1.2425622877509537,1.242856501648078,1.2411155932919193,1.2471286169973412,1.2495656406691058,1.2252283627189646,1.2179211262894372,1.2338204250564058,1.2462107149503,1.2342466839788053,1.2470995858134013,1.2448828437074462,1.2493070277815628,1.270175928855592,1.2640862652783715,1.262343916422437,1.270771945204093,1.2850475091271445,1.2905797241304184,1.295236416535484,1.2927475203725152,1.2812996280657183,1.2657798731603238,1.2778073923915527,1.2984809163597273,1.2720244032828059,1.2601042848193904,1.2736006532782191,1.281597968722704,1.2927298382583916,1.2967971914340874,1.3054130337041765,1.3130280661780365,1.304977117441668,1.3295897654422748,1.3274694891289158,1.3503904715840824,1.359808543591312,1.3590682192211294,1.3604124999223601,1.3528130018221165,1.3549737563781434,1.3359637733913008,1.3476155996616526,1.3436968847671773,1.351298417548103,1.358115461724648,1.3619493017588447,1.3558067570965049,1.3374929095566106,1.3530387390004575,1.3512836172683804,1.3388198041191481,1.356439026313498,1.3569837250793642,1.3641715280145759,1.3692818602866699,1.3624550002265376,1.378244514228868,1.385474659363679,1.3873211652779007,1.3852712874787025,1.3897673206287715,1.3980414736422824,1.4002867486031363,1.4023384944567852,1.406822516037335,1.3983829763418658,1.3841153310192573,1.3869630580083352,1.3947212056380613,1.3972077854875922,1.4131092754577117,1.4206692530914298,1.4196449711785073,1.4215766421314178,1.4116191033737628,1.4186119360724851,1.411870633124218,1.4135386382542432,1.4116297704101357,1.4268844093939665,1.4316683430660015,1.4401735223404768,1.4362016241438536,1.4285104307884522,1.444071363363927,1.4408836193515704,1.4387924373668608,1.4477396070643005,1.4463843494117805,1.4564287458444936,1.437987190409681,1.4556671750095407,1.4477771458269593,1.4427580306911816,1.4448513009368256,1.4490901677076247,1.443756005872392,1.4441620597404934,1.4374563885804705,1.4268645083468305,1.3835881498920575,1.3827451641579391,1.3873781771877538,1.3653187013484365,1.3798617347307016,1.3668662774643727,1.3888399573876509,1.3947563010325301,1.3972927356612423,1.4096396762052028,1.4181860788308662,1.418395896197103,1.4306241408771538,1.4529981535175933,1.4624142040637662,1.470636948988418,1.4676599695895107,1.477944243196382,1.480879995545135,1.4897172330425446,1.489569927919693,1.4962567967329488,1.4850729376366911,1.4801430676944651,1.48011642233162,1.4956771989665167,1.4821595958949851,1.4667544995594408,1.4804754120893113,1.4804169179345892,1.4673070164025468,1.4750957870771315,1.4868910039775516,1.4894613747143173,1.4997289111165197,1.5097007238705444,1.5039182513934057,1.4906191987561046,1.511801344772242,1.4765247305201314,1.4955664824878085,1.4952643150204805,1.492329374481756,1.4712429691994573,1.4724609935093675,1.4971995191377192,1.4973766450625594,1.4747473386488457,1.5115905093214392,1.4807714673319197,1.4765101600261108,1.4390895070330294,1.4365957039255943,1.4015389826212052,1.3857686303608867,1.414746490879181,1.4291375611498056,1.4422040205915798,1.4361287973929477,1.4536509081219,1.47169564601983,1.4764435671174487,1.494154909876817,1.4970262704367352,1.5090049188717,1.528050430361175,1.524224082164308,1.5333590304218698,1.543941590397388,1.550983242974897,1.5626175688902664,1.5652208766847777,1.5684701518126736,1.57201227644298,1.5922481732364133,1.5989986388691544,1.600854808964741,1.6058523588790896,1.614283044944976,1.6177455255794757,1.6269526727977812,1.6278313926742127,1.6225652041251646,1.633282418170086,1.6460499193603728,1.6302996905166176,1.6342699029045473,1.6289743785056832,1.6236937991593678,1.6183944469653144,1.596704829875172,1.57139095505031,1.538368788616185,1.5496607177413941,1.5162109526245429,1.4971585014143427,1.4861313657877617,1.5374329551210764,1.5921762970791002,1.5959323878920393,1.6185717150716314,1.630241701907556,1.6267833938836413,1.636528640896214,1.633545193571094,1.6256902023145563,1.5991666283294221,1.5942246944597303,1.5646195766022526,1.570430383963401,1.602912812192126,1.6483760361654225,1.6265272223342913,1.617501481358143,1.6148538771001548,1.5918955963626504,1.580073397982403,1.610717953784782,1.6170644811737982,1.6121377810891193,1.6506844739411362,1.6272476888047578,1.6297012853386033,1.5825033332308314,1.5602445342089455,1.6003537583411447,1.55209692146263,1.585533963788503,1.619130577237335,1.6134653612280951,1.6314458034284232,1.6299906590191213,1.610762409843204,1.6414796576633153,1.644324059903981,1.6612359841354998,1.6676888411485185,1.6626058070827314,1.6649136674836997,1.6544239888351822,1.662547006428504,1.6598853827721518,1.6719691857644583,1.6729967720071688,1.6837775307704335,1.6835957924553386,1.6938599107079897,1.6864952432803633,1.6690373795056574,1.6717418529462735,1.6304223364546808,1.6453148232662698,1.6044215519226421,1.590254223062257,1.62648188907428,1.6107916137929008,1.6499477538690832,1.6412424754559298,1.6697405927720124,1.6512236636470625,1.6809822725550805,1.6850641883409607,1.6706300408070547,1.6356585408307045,1.6271743353308472,1.6234447491727106,1.6622008573398959,1.6369328777801782,1.6226395953232626,1.6319541263928294,1.6492615345472967,1.6460338272778938,1.6510602216260062,1.656252073874784,1.6651645450254224,1.6555378023397642,1.661305216971614,1.664569366282652,1.659933250261071,1.6230453519197727,1.6532345323317865,1.6374097996521693,1.651233161513336,1.653443281801695,1.6605089101366488,1.6487675555200796,1.66229213999859,1.6482964352356122,1.6292251262991817,1.6484895323577433,1.6477601528911108,1.6329389366445155,1.6262589141680541,1.6317315525667735,1.662564807211269,1.6435232254974501,1.6406882225282287,1.6405886359642352,1.6636899082834833,1.6704541917759146,1.6690316836766432,1.665309172368326,1.6598618560862821,1.6584062874011392,1.6430835223097473,1.6186864717647849,1.6295838960763644,1.6238334853167378,1.6088334714637997,1.6121044508171671,1.6095578511647668,1.6131397557752076,1.5875288350186683,1.5654489930357451,1.5561758724930228,1.556932857887348,1.5807720717396485,1.5875304762208176,1.5680731609258545,1.5510595539699104,1.5706205221704517,1.5809416472349591,1.6086691529927823,1.5929234995645576,1.603074448586236,1.6004467072526554,1.5814991054890015,1.5707262555116999,1.5799563457871901,1.5345768294197306,1.531283004141887,1.5615484178113226,1.563277595292167,1.5605846912590309,1.5921305893091926,1.5643657407097566,1.5706197378839022,1.5979603975701129,1.6220198073494325,1.6304739118533549,1.6278705073188275,1.641890090923067,1.6290977916711786,1.6328226721018608,1.61420139794309,1.61042561501572,1.603519940081907,1.5796990288505843,1.566359623999345,1.5866472660697273,1.6071093452007648,1.5978521057882142,1.5941301592959847,1.5910278036232772,1.5853444016620126,1.5780779005076169,1.5639347170627254,1.5485117381695348,1.575537799519228,1.5640889948841288,1.563693170393746,1.5674789634421424,1.5719374477402308,1.5765264028233474,1.5611539235535532,1.5397076870810373,1.4986588233890101,1.4321323409612048,1.344148742530034,1.3064115872819464,1.387252228980485,1.4304527859488143,1.4214636813471695,1.4058917575007852,1.3538688109739292,1.389423301206845,1.3938313177150259,1.35665645905708,1.4126126577100155,1.3739550600711907,1.374950656613379,1.391087143996967,1.3843011130296476,1.4152568380941664,1.4326476428777744,1.423207558980919,1.3870259836259229,1.4014684718805506,1.3812879305864838,1.3726242073885122,1.3682427805392932,1.3776216158092969,1.353001552611952,1.3688019122570538,1.3909278558260674,1.3775916846514558,1.4012061389761867,1.446629660385383,1.443674420282743,1.4617660093037745,1.4860491747610065,1.4875496650279616,1.4940234306484026,1.4857820823752008,1.45009740097822,1.4748928282809182,1.4844785086568142,1.4859993699850422,1.4880296062509566,1.484715126543945,1.540635698569814,1.5591425745180438,1.5581946575522676,1.5527051492805586,1.5658276189270035,1.570117455425017,1.5548940965043268,1.5709147214293795,1.5731215436155512,1.5675451615623692,1.5685412087512556,1.5658577519280534,1.5475768305306223,1.5573375831105567,1.5536493985165518,1.5172869410804952,1.4954389701150501,1.5292658579065508,1.533712452650323,1.5684302267764685,1.5833236168034412,1.5828568900223692,1.5832897781157103,1.5784245864747475,1.5771008352410334,1.5725838510155916,1.55504570223252,1.5769169937927487,1.5580766635696488,1.5328325736214667,1.5847172798061355,1.5863219940236721,1.5639718241314209,1.5497985021639966,1.5577126750914583,1.528621988565095,1.549683385976731,1.5759277635577416,1.609639863767288,1.5767690958459095,1.5285128731174455,1.5433406880772225,1.5696906642782977,1.592009318011987,1.589158236675149,1.5890561918572796,1.6130608766314243,1.6000920221505863,1.5731369295561053,1.5348982343965272,1.5441987564929391,1.52010488430688,1.4903799763322656,1.469688391294338,1.480439253127808,1.4922264457829693,1.4473308435818844,1.4762489460325554,1.4339121620420463,1.453527883184956,1.4235244310765056,1.4449121153260989,1.4433830130862106,1.4339814533456723,1.480244740110578,1.479220683678942,1.4929083639948644,1.5429536087797469,1.5584723971365895,1.5256045465297747,1.5417302784858324,1.5428069389100698,1.5167989984544437,1.5092188933325104,1.5101575936053857,1.4932815880375285,1.465427919134537,1.5072038702471944,1.5268444463420985,1.5477665623847416,1.5458171505325558,1.549268637869611,1.5757891828676711,1.5612004265833548,1.5675997876468473,1.5941473503531207,1.5723762283952647,1.561636495201733,1.602882259923358,1.6084385814462436,1.6118335898018197,1.6203572339326646,1.6295457409710976,1.6356520399777965,1.6388009772263339,1.63910955902154,1.6604889647050536,1.664206267543495,1.670187101768767,1.676311946441583,1.6909258606938034,1.6995530891077717,1.7040800769213797,1.6964777307016696,1.6926612992939143,1.695282492163753,1.6999092204033794,1.7121579930049453,1.7250598502626433,1.7226427828685709,1.7387456444194807,1.7338672241132342,1.7182294512652803,1.7276725059302924,1.702991148321766,1.7076052634124816,1.696158238416745,1.7171068456548246,1.723608041954138,1.722160076432964,1.7277760733774161,1.7478250644884779,1.7659691737082763,1.7523160040235877,1.7127353146664746,1.7263881709696043,1.7363394418568645,1.7250794574999153,1.7374140547204004,1.7209733920856296,1.7094932598308539,1.730016280465649,1.7180683102697034,1.7177265835501316,1.7212793714078676,1.739706077520021,1.7432310631556174,1.76582578419205,1.7342575537675877,1.7422435698213183,1.713591736890868,1.7308081847845314,1.6966500168178476,1.6818417007457933,1.6904429670867454,1.6969482160143268,1.6909790905742699,1.7225408294997275,1.7335859003586194,1.7355775807644935,1.7423638703667796,1.7364471213205563,1.7379273954180752,1.7497888405343853,1.7510695808571612,1.7634377652319535,1.767031806268378,1.7767609624655547,1.7815200368991349,1.7772807883185897,1.7587393131892717,1.7523975150712872,1.7491936952007028,1.7664638161189354,1.7560924408451202,1.7722333149238327,1.7748139929923488,1.766106810714557,1.7944481508952421,1.7332750293040333,1.7055369547453276,1.7392114691609,1.7774131420866044,1.8147092153135769,1.8165041045198396,1.8194228482679393,1.8262975325230597,1.8170336828376206,1.844336943840275,1.8525770075316936,1.8534076495045784,1.8617389962648794,1.8702484213413086,1.8708169515419826,1.8713438828072397,1.8839188629784314,1.882579786718527,1.873674214552532,1.8895578754913673,1.8821311957142504,1.8544293305753374,1.8366033301822804,1.8399358937700345,1.840001821636069,1.8408807246240277,1.8305863734522951,1.8281650111769836,1.8287443423166345,1.8422498352326215,1.8354868494728138,1.8350080662640016,1.8412571394915291,1.855065914019994,1.853496129528637,1.8479821824416085,1.8250514312407642,1.8361489994929694,1.8395598892229703,1.82510924440699,1.8187016304519203,1.8227110217931162,1.8137405165006975,1.8070222867844539,1.7945338658360375,1.8116728791276908,1.803687877822139,1.8019211252154594,1.8094476817686407,1.8180316098128806,1.8289559805868558,1.822331163051834,1.8157237833971438,1.758722321414257,1.8022735438814417,1.7660120188566415,1.7639247427588303,1.7898077300402537,1.788449402545334,1.7827157429124383,1.7883802556870618,1.805722074644632,1.823810640741046,1.8075812827317943,1.7855753149197136,1.8079031128157217,1.8002861945160298,1.7716660637929196,1.7967462298554477,1.7834419534055201,1.7680711201786634,1.7707167382332734,1.7499885823234744,1.745417880054723,1.749145781786852,1.7193404894895812,1.727230247900994,1.7278597665599729,1.7231642391857478,1.716297196256194,1.7279189542213542,1.7317049455050793,1.7467462099760698,1.7473283473888963,1.755657439020189,1.748356682477949,1.747141572210479,1.7507949171378523,1.7449810228597018,1.7452854213812024,1.7275446199133193,1.7203157915096683,1.7204479254280636,1.7092151568016778,1.7559190659049886,1.7718046007198724,1.784684952130608,1.77623653961103,1.7839336871415998,1.7897752295932552,1.8066052720089543,1.8088760043675682,1.8031339563311426,1.7915173137449365,1.8025648474597737,1.8137403950087787,1.8261531895297103,1.8424903273616584,1.8404700083627241,1.8430787512295996,1.8194372713042744,1.8213839071811972,1.8231717832820684,1.8221428876078707,1.827097079537055,1.8679517569518085,1.8668611137370634,1.8931030251760075,1.9083330475494216,1.9196001012321444,1.900699437593314,1.9083571396778205,1.9199416209667546,1.9242384299438768,1.9292897510079663,1.923314653953185,1.920630637955782,1.9245273236505533,1.923460513040674,1.9066167754033962,1.910854794832915,1.9005605562829717,1.9149675868923972,1.923528892533648,1.9266356750577374,1.9253129350509464,1.9159303504309264,1.9082410804926586,1.91249399225627,1.909976872665598,1.9034359681575723,1.919664026368113,1.9173996367946415,1.9087721920349274,1.9202925558405761,1.9124646397761986,1.9057781689681565,1.9089025608791514,1.9013706557853336,1.9086498604788065,1.9096009117802795,1.9084904359196777,1.9106910993425488,1.9100803255939227,1.919120095439328,1.911972746808523,1.9194361696640452,1.9310015698938705,1.9446954136288164,1.944302785172316,1.9522387376746537,1.9624632265685298,1.9815299235024741,1.9916603393837664,1.9924878766784437,2.0171127323398212,2.02350653009952,2.035768573982999,2.050110514907594,2.04477782366669,2.041948381363749,2.0762022121464945,2.06935009039106,2.0685307682272365,2.063282018503823,2.0584250627975544,2.0572245472191026,2.0633662891667965,2.0757146328609184,2.078290382552612,2.0752867357839455,2.0954857326643914,2.091665756995823,2.0895702287173963,2.0916676026783687,2.0802585223129944,2.0789614709275965,2.0712709984306104,2.067334371297776,2.061703924141076,2.075809277724965,2.068086761802044,2.075150286191231,2.071175737501034,2.0735905739356397,2.0756252162645064,2.076499149837003,2.0744888693426087,2.0773424150729385,2.076481628286693,2.081981129723006,2.08624266532239,2.071583351107695,2.0916292284917786,2.09214556239704,2.082544268435664,2.0985926502019026,2.091412590774848,2.109344706524827,2.139525536050121,2.1380712633938916,2.1366692234328446,2.1282458541806184,2.1271252446035165,2.1276040375857734,2.1248542554926346,2.1289812823851557,2.143859970454066,2.1488000155523372,2.1457935234155916,2.141949344809521,2.13622005596788,2.1380326393450804,2.1485514066023987,2.139554844074571,2.1127287563797066,2.1341233514327818,2.153811075948113,2.1610175996742704,2.1581887302049836,2.1663887497261376,2.1813634973189635,2.179780567247271,2.1840923288079535,2.1911121830473514,2.217017262382043,2.2231960129002704,2.22049906206665,2.212112981990564,2.2186459784113626,2.199612764157644,2.211019849401886,2.2061428089019763,2.2142447946522346,2.226138588951606,2.2230979391395875,2.215836275712298,2.2286154939667973,2.219671386951751,2.2186365089376845,2.21636749757829,2.2110878543481083,2.216347159744353,2.1980863977373244,2.2112509491707124,2.1803065189454616,2.190087788346491,2.2040376018245356,2.1982049800310466,2.1781206948464664,2.1925523554343775,2.176627709668245,2.1710156437189867,2.1893290836973587,2.190784182639782,2.207845627526911,2.2068503912758026,2.212941378896928,2.225386616660316,2.229500065788179,2.2246601465068796,2.214926985138191,2.2380806673600295,2.236578767107824,2.2577649941285416,2.2622464192331915,2.27003689229949,2.282760005403858,2.290876503834994,2.2965519531316656,2.2911355621138454,2.2928864123796706,2.2935701856047723,2.2909525122535697,2.271915346039393,2.270542252624143,2.282033215736383,2.286392935215974,2.297405130580523,2.264346712618232,2.2506214030022913,2.2598861011625666,2.281727522181905,2.2666698267060705,2.2586526796185438,2.269375226203682,2.264033165160734,2.2700165748760086,2.266597599713359,2.27074788170435,2.2726014057412733,2.2610342274598354,2.2733736156987034,2.269751963437104,2.268611137659943,2.3048220328933597,2.2975614448818793,2.306203702423308,2.30353341789842,2.313481492322715,2.3121328103813967,2.3175589218088164,2.321095819631741,2.301792649102589,2.2990913741012613,2.298893692522792,2.290275900080846,2.277723571259441,2.28425698960239,2.2856531056239286,2.3035877914676672,2.3220225567896575,2.3288920482210833,2.336117829826923,2.3320687534698763,2.3365523258017986,2.3554496068300166,2.3693835891065085,2.3671628807928426,2.3746901733731614,2.3831145668140583,2.4035775875919883,2.4125573108339027,2.4219658902621966,2.4261828002386006,2.4205101689420165,2.426493723693255,2.422249175980648,2.424803750637379,2.4090558624727487,2.390974388948846,2.39792819912681,2.4045486442767547,2.4100258062703785,2.4180647957882146,2.421733190362471,2.4380451626982995,2.4452344428700212,2.4413274854886144,2.4491637230566132,2.4588184810674267,2.4626966927903657,2.440368860543215,2.4692250425628526,2.44880971581059,2.4507856907098304,2.474084677529414,2.4684695553746274,2.473536595122167,2.480570764306781,2.51374874880287,2.5284701211662655,2.5629988583541254,2.5693964130103835,2.585625541269611,2.576405099225287,2.5714262273357487,2.5610499161199405,2.565658655340735,2.581542846332648,2.582018004249865,2.6029626705625524,2.599489893607027,2.620542103561562,2.6235013905412847,2.6253001759980963,2.6152730787597394,2.616655158862901,2.6107200627957505,2.6171052517688485,2.619474830623693,2.622428721381817,2.610465456013255,2.6230527523445355,2.6346183468007114,2.6550614311740643,2.6714889961537067,2.668623478263256,2.676246624174898,2.6712509768414243,2.69502730740856,2.7199601036935386,2.7186940055248283,2.75600997803565,2.748540933615848,2.763776232611491,2.7816733709447337,2.7679154012273868,2.7697350211029224,2.7808427627623207,2.820897372228429,2.7844950425431922,2.731646577733632,2.7194137081598098,2.721371041884384,2.643374147048796,2.4916521303063455,2.5256998224862217,2.5223224215100957,2.397587501000551,2.4333931180065433,2.478344285069428,2.477767940050827,2.4922838599153248,2.541735375887674,2.551876100097322,2.491699961823593,2.467025077724881,2.4751235714575883,2.520063399324621,2.5650614836123258,2.508714137878711,2.4617098354348284,2.4394501250633582,2.4425248035765175,2.469440910264404,2.4778957520032385,2.4728560584691692,2.5012477901526498,2.5485173335780806,2.5400765738694733,2.5321243116420984,2.514549123318122,2.5251396013676612,2.5314776801622703,2.486789221901606,2.489250957922118,2.474544896390318,2.413974773641589,2.355994230329921,2.4268038201717483,2.4015611167546886,2.419419016639547,2.4338113596289928,2.373049966866281,2.4216450736715074,2.467805399203229,2.4871425938215075,2.4255296540363425,2.447340412893822,2.488771737670512,2.4753331836073937,2.488341683003436,2.490212770844174,2.515914962194969,2.547117800867022,2.5219889274427194,2.4914611394707116,2.4696728522849636,2.4770119413045335,2.438855131482015,2.43432257192181,2.453209450911092,2.4633991747553248,2.4630889018102904,2.441375067218374,2.405245348411557,2.3996843497347085,2.449486869950417,2.444599800347213,2.435248330475623,2.4491457327931436,2.480256589544551,2.5024761547451604,2.494380181577715,2.480775761286219,2.4993938023189064,2.4933653750992204,2.4853847189213134,2.503387878351944,2.4923431894242465,2.5050333872126953,2.495597761327003,2.4895851913239926,2.451245581396774,2.4978094958265427,2.462654942560035,2.4857105232304373,2.51380749697651,2.5064673414935337,2.5367575441975734,2.5736716146530987,2.594168149419139,2.5921333197182324,2.5951124832931476,2.5893540209607546,2.5904882858477634,2.5974165081029827,2.569841203111917,2.561613764301068,2.544951311251596,2.520685390417659,2.544713738054559,2.5177141215908243,2.521510668738899,2.4972907483212174,2.512928390058995,2.525682439301834,2.5327425177676526,2.525428965014123,2.5574112398111555,2.577545764570147,2.592933134458404,2.621182784389943,2.5988908494979017,2.624208569301567,2.6339868910345574,2.6315283154316753,2.646875379809827,2.6466317002890922,2.633373587299735,2.6457340382917356,2.642654369486225,2.6602528479687497,2.696765962211968,2.706383659338827,2.704689462637842,2.703180810511927,2.7111163146082835,2.7046186521161313,2.712792239515532,2.7355771952925942,2.7516856153156257,2.760648368400256,2.7528166006838553,2.746750572951899,2.7342255774547253,2.7237530245769546,2.7463751997107693,2.746366300570237,2.7998778232828605,2.8118677310389346,2.8185932394192466,2.8158236739472033,2.7999111755108443,2.800605674749078,2.817388310425003,2.8320180684137495,2.8371614217458263,2.848965448717443,2.833223337096984,2.828076872104071,2.813863947082624,2.8272296764221934,2.8322303433809233,2.824542180219152,2.8290867085148412,2.8339783377472174,2.8502453458950003,2.8765579571921074,2.8642318390880805,2.856917557629621,2.859705476117012,2.8545787866635113,2.897404230822348,2.9141470885467182,2.902135036098807,2.9003254015761755,2.8960000587902544,2.913794242811245,2.9227170447769826,2.9388399733543893,2.9493383079803763,2.9358805292544394,2.921022471340743,2.9108423902197735,2.9185921398849275,2.933339276360898,2.8288538713120364,2.7445442844560053,2.7914766493138914,2.782464719545455,2.841386081559465,2.8596204526461975,2.831835672767934,2.8843097331596668,2.871982968370782,2.900207396413312,2.8387244914939957,2.857066553130355,2.81649410702999,2.816393026961654,2.889066253196978,2.8962697546112537,2.902710868028738,2.905682506481014,2.957764074277341,2.983998518100128,3.036797330648348,3.0449271302075847,3.0492556359297813,3.0039042555130724,2.99860427847301,2.9813211137028937,3.006091354561814,3.040815337287559,3.0138642427810307,2.9276468829638045,2.9241386988147458,2.9032132639588077,2.9349545088805398,2.967492012705246,3.035636298901956,3.036146896323583,3.0775109641449117,3.063570444786742,2.9957880420235385,2.997020075975595,2.9398352028772394,2.9541282481363207,2.9568563592939126,2.957617782580352,2.987280629061749,2.9224438852211034,2.8481828980809256,2.832608298231353,2.8044373416909805,2.7364628283198873,2.7090253172288143,2.5925183151785816,2.7329846107051825,2.7845611655434,2.7772233918305655,2.8202649124100807,2.8048824822446603,2.755685486754811,2.8435593665608203,2.8507772621014045,2.8786601935665197,2.8657756129847347,2.884132686995462,2.891283955715193,2.8755851007386255,2.8970820587710318,2.877807463220775,2.8963910567740894,2.932806248669354,2.912149000871765,2.960566172889941,2.9435952371597374,2.9296002099329237,2.9126272687049553,2.90366664344047,2.919856874284103,2.9478185057810786,2.965844360596678,2.9895682935985297,2.9959660513675375,2.986531117097844,2.971834402897883,2.976445642373143,2.9633751653335674,3.000287206991695,3.021342685581075,2.979970121956996,3.0373112466796695,3.0430012459053515,3.052647923808312,3.0661888303996268,3.081951132272648,3.068510699924368,3.065191516735692,3.055693776672152,3.067974088259363,3.0842827102093784,3.067324135090405,3.072668553877844,3.066075845425342,3.0456302623604703,3.0330208452047867,3.08633676698266,3.092680629995609,3.108121714929161,3.1155846824218862,3.134220904095735,3.131643887334996,3.1190518096333495,3.1107285032163867,3.1337055913235865,3.1163359469043534,3.1151342333964944,3.1559886966360677,3.147811625185307,3.1538415448130745,3.1705419682811673,3.1950973457016056,3.1803387187518224,3.1835402773050214,3.202973976717672,3.213404199137514,3.22183715355673,3.2143475560811154,3.2165862873199034,3.223925695555324,3.3005585490868734,3.3073609750824176,3.3147294895940256,3.3045613725506637,3.327611287027895,3.3249883983016106,3.3418995338302455,3.342582106154543,3.3418025722504066,3.3629017585083574,3.3658590803510595,3.406940374402118,3.356900595276511,3.3593037103330365,3.388414015936176,3.384361773348118,3.3348222345597938,3.331163717445829,3.325885676134389,3.367449661056522,3.3168127934447513,3.3335012201212386,3.352267613621642,3.3921968993911937,3.386102467281768,3.3907938018278854,3.3950690990210077,3.409366847254371,3.3929093063917293,3.404127560632393,3.3617665377995047,3.3203284991442503,3.330216201746995,3.283311860179799,3.3277850382750778,3.3726112977126066,3.4204799231322847,3.455038499480567,3.483273221963504,3.4756823419663156,3.486240436635387,3.5049710970123815,3.524537866650901,3.5433062061728604,3.5307273287762495,3.5396673414352184,3.561198304502555,3.5843865219863407,3.578625848287694,3.5874889890170456,3.5800786150606045,3.5346912934457375,3.5394548386533646,3.5531526208549717,3.578839796059502,3.6153101629904194,3.655827642822337,3.6427714990176687,3.636743802343471,3.6262316476955165,3.6455388718281947,3.6470423370470018,3.6560134206873416,3.668545197954053,3.6627778423187065,3.644544432029484,3.65305168796994,3.608534163920245,3.5949668023882557,3.6247953634393326,3.622020030892558,3.6234929012239867,3.655914390077492,3.6704143929006916,3.6682363540334517,3.608944501254099,3.574419963607096,3.592810624505124,3.498902325176033,3.5478063110883094,3.5486158666656253,3.6087363580518534,3.610262637452486,3.5607446524592,3.6136691461575197,3.5091406260810274,3.565023822730229,3.6088753510727223,3.642217182213362,3.5988500358634807,3.627124066771705,3.627464055803726,3.5383455607521332,3.594293428873403,3.6013017158247855,3.6328477395745837,3.6600836448232528,3.660111095558178,3.6540612403898436,3.6878995018838543,3.702257081538086,3.714072835944939,3.6892924750736755,3.6747117757276637,3.697154920108585,3.721681383856912,3.71584387860005,3.6815726911937663,3.703531876070042,3.7150625607753884,3.7161915838298905,3.7177131772658667,3.7296916034847483,3.723926433138982,3.7188884583501407,3.7078961701605335,3.701400798263778,3.7184219468581787,3.6738313174807837,3.5959906148320346,3.616886806399517,3.6915376758935405,3.6716047271473506,3.627530708335539,3.6500565265576093,3.666406127057413,3.682915894126223,3.6708721386260885,3.703035211258145,3.7032730462296195,3.7088866302568304,3.7007547121116255,3.720146267836249,3.681869770578139,3.6996596152364525,3.678568811009751,3.6675818197243846,3.664084307913817,3.667388384823356,3.712126465526185,3.707076483428608,3.7055183571565022,3.670791632410215,3.6748269575320416,3.696105031694735,3.7120054018095274,3.7170146185872284,3.7008689801202275,3.70100417469299,3.7437634644262783,3.740101008909404,3.7611800275334835,3.7766733609504772,3.7676394573486496,3.7760269651497333,3.77413345968065,3.7877724990125934,3.7913948778767086,3.82163014006618,3.8309329303909427,3.8234758532825985,3.818728667986039,3.797631584992814,3.8398023178692977,3.840625471565499,3.8726320117213024,3.8627819022085923,3.8625018849260098,3.8554005863864216,3.8937954563755994,3.8985242722607367,3.9279109661243163,3.935884440943096,3.9105661786108667,3.931780248633996,3.9612694070188557,3.951002905569376,3.9498115919402306,3.958530966729116,3.9679986992065333,3.9401881192868933,3.9526270678236504,3.9637308075550353,3.9289155450367943,3.935939157191921,3.9022947661254976,3.9148593819060773,3.944910986767592,3.925425295206102,3.922876794570521,3.9356098395899934,3.95953985757357,3.989632572940784,3.9906341910249346,3.9713195814873616,3.971012494114877,3.964793221314534,3.924060580120716,3.892523052242427,3.9196068235224937,3.91309343288993,3.9420938286244622,3.858536502137535,3.8652522596440075,3.903684239679383,3.9876314267076536,3.992481351078223,3.969874646894512,3.9912425935432285,3.983457496910251,3.9866657943299666,3.9902927541631854,3.9949581327905213,3.9791979079841786,3.981613719023252,3.975961257737059,3.9792741071229933,3.8572939344851784,3.761734665765699,3.724759892418457,3.533858550888028,3.438193555270079,3.6648500360282226,3.556059504706897,3.7654055585738027,3.6431365456553415,3.633635878485504,3.354001444854509,3.5334872850358714,3.3083863405738985,2.9418666242037417,3.2254909543080563,2.7954620318242838,3.0400007756669654,2.9711764779900176,2.9192324688535107,2.7259641151119918,2.547729369347659,2.824425704703842,2.770870658791672,2.9753968338806898,2.9069848667473193,3.0938247713570792,3.0227634342402734,2.9089825962864286,3.034420227942565,3.017970488864332,3.237621554551531,3.1951656172351948,3.2919233649546786,3.3238274692622163,3.287515144437803,3.4374301081523972,3.3494334225717024,3.386777584965782,3.468636802946844,3.388231402932706,3.299804443916571,3.3711483448832045,3.3652429689052976,3.394423676000849,3.454800562558848,3.434777159067618,3.429223480534758,3.369166668952853,3.2978689300598703,3.2868033171477578,3.301815331030057,3.249525406725512,3.2325898340877277,3.306468771496079,3.310418186575494,3.238942511113546,3.1798625043437365,3.2034515546844595,3.224543359493601,3.323704184856455,3.252479441368229,3.2814312949048006,3.247394313360954,3.2463263275360488,3.2901389325083548,3.344208381294953,3.3703719295472316,3.407377151471419,3.3904247616067265,3.4092389534775007,3.4519995531434153,3.435267821671604,3.5036969072256623,3.540572644254672,3.501099085657125,3.4925514757068523,3.291303247418976,3.3028543409120674,3.3127934014128293,3.3881287244388583,3.3749998308204043,3.388045101321101,3.4051968419958953,3.3852242867368796,3.379399916412238,3.2984528717067185,3.326383221896241,3.243140005995076,3.304608344965102,3.350789206459301,3.3838877063618646,3.4069202619975245,3.4493764396106235,3.4461760819101936,3.43927291210811,3.391662483733814,3.428814707232231,3.4322093312447475,3.5060786873112972,3.521175436864561,3.533577060234231,3.556550207202748,3.53983073021859,3.5486635752846887,3.5819885811982966,3.560664974275678,3.555976342956087,3.589853073455915,3.5743049853444315,3.565707858790031,3.5458461057624797,3.537006155673419,3.559923167387458,3.584841804380355,3.594434100156704,3.6048436792938565,3.6289090372857986,3.6469511920318034,3.6237002083356673,3.680817412234205,3.684775611725809,3.6950435385165967,3.7198233609900546,3.7359719266994658,3.7115274305390473,3.7067105439415977,3.716291441923799,3.741330713452234,3.7677773578248885,3.808357452483844,3.840683146451698,3.8801333777024993,3.8551584551752143,3.86639917851487,3.968541625099987,3.8776918730814405,3.8598040318098157,3.779069747052076,3.83407309102832,3.7763648771228544,3.820370488877546,3.857698980783854,3.8697250620175208,3.8837333936566827,3.8866688629075234,3.867318030308528,3.7736309481954082,3.8018506457306094,3.7485977407655655,3.7614741355559627,3.7837402551005574,3.8142249726475113,3.7941181546984906,3.845474633047667,3.842699293682407,3.8125401829583803,3.8776219215278553,3.835212398416619,3.891660824787051,3.8849701922794013,3.899228054503287,3.92495003708248,3.9030064205597492,3.8812201885426134,3.8812834320888854,3.8944314893193885,3.8242072663648434,3.846398596559533,3.8334672829303154,3.855092103281116,3.865396290014246,3.8038452583899955,3.771999674753598,3.6314337396333354,3.627436000326706,3.615588806317115,3.6810016818322815,3.7363548858494733,3.7569723809861815,3.806973361260595,3.825553558765429,3.868960844558239,3.9557733342301846,3.972155384511545,3.9296232285816,3.9866954300754154,4.013540370924599,3.984879958357963,3.926591058415002,3.9394076308173274,3.9220363691802698,3.929919475420192,3.9517041414374807,3.946929428098769,3.9493211775407353,3.932850776539092,3.955340172375422,3.9481114946978506,3.9635994768114005,3.9876403364013813,3.9603636361494887,3.9924051796893103,3.9984385820889123,3.9638505931403056,3.9693364965583084,3.942501923792647,3.981729855973785,3.9557216000646642,3.994858831439042,3.9943865792301843,3.968909419781969,3.9336425032111153,3.932692880371479,3.9435616582027677,3.974870941841343,3.9764950856270147,3.9705727571215172,4.012046025106576,3.963030982078153,3.969531607309192,4.003751110130364,4.006514396940968,4.018522454145242,4.010391254875381,3.9861542219353048,3.9768077314619017,3.964164852739408,3.961999729974618,3.966330434525105,3.9982397238829943,3.983816030119761,3.981490707280436,4.01700569102909,4.043485413818095,3.954437037160755,3.9717982369790814,3.8784200771482613,3.8747117794790906,3.8990304124664927,3.888014550979501,3.9112173245336965,3.951229055054812,3.9509359230327803,3.958239083120376,3.9558784586672786,3.9462505102056156,3.9539914230272952,3.932333783246592,3.981837858721372,3.9665938328069323,3.9100700224008538,3.9002428026745513,3.8893459631207685,3.8971642623617315,3.8652708679072205,3.7676492984911194,3.805782853489082,3.7968977597442404,3.7667893379912867,3.7256637239038666,3.812480377339499,3.85646566930155,3.8425907881960315,3.912328748800472,3.900652795786036,3.92014770721104,3.995446834507227,4.00470956598017,4.023345620402356,4.003942022493518,3.9875473604136173,4.0235224608565066,4.016959105179924,4.020199827993515,4.029971785007691,4.105893414243213,4.148655375615489,4.102746479121391,4.095974089243938,4.10175397896628,4.172052504301339,4.171642413705763,4.172573455861753,4.15538492487302,4.177702055989559,4.1773782701323485,4.159850356655953,4.1559919385381425,4.198213841680116,4.231714757708489,4.2237177109072075,4.246002261882649,4.262543674576046,4.2164223064723565,4.227771915539451,4.181673758776752,4.167142664796377,4.119586494364842,4.146408993620736,4.15528559297196,4.207359848110294,4.206652034033468,4.222063558998307,4.260419036680635,4.277094588695713,4.307188055715475,4.255075966092715,4.182419145059314,4.240235163271324,4.2644096231596,4.265533111797049,4.248046472259313,4.2346305956739165,4.2653397443787435,4.255474995910644,4.2663020877653315,4.2459824930994525,4.241733895517485,4.226014342111516,4.240167554393643,4.198251128602726,4.212448225750161,4.230568181064177,4.255925759161069,4.229513081754913,4.20872011237031,4.214762193749768,4.263356850629337,4.265231307568791,4.256543252513075,4.238538584054028,4.201506312793392,4.20040043525671,4.123359932967034,4.1814701341438445,4.190608957355757,4.163223599397031,4.18943500199494,4.26929805615397,4.265998753016342,4.260974544214319,4.296608688277097,4.314231265687509,4.3512453697922755,4.323666976930883,4.351255080830436,4.32377445161291,4.362701328680678,4.367113935727354,4.367048430458282,4.396229941046226,4.399572932714798,4.376654308191733,4.315593257293868,4.352879081480676,4.376651035149624,4.386289676778984,4.435395055841923,4.43945333650318,4.4479727404905045,4.412730213634214,4.423787420983388,4.427392008240428,4.415493298456563,4.452597415238917,4.4069219000338915,4.4364001924749505,4.43578906339395,4.430488983269186,4.452132052970373,4.473053664543534,4.486532341424021,4.509097198313414,4.5470685898067575,4.53513031004031,4.475742370833805,4.490014621344755,4.515083282983924,4.516687258869035,4.4885334283994816,4.478509199691599,4.4498978388133565,4.455309151596939,4.467015821180127,4.462985099710336,4.471313880251821,4.497011862051915,4.498974273431107,4.4251930230872665,4.432793260192257,4.390384674018177,4.370403837374274,4.380882385404191,4.354569443231495,4.373836276369163,4.363694083985369,4.341004249249125,4.290917661053576,4.29032054040363,4.3127134289651305,4.36894169696688,4.36778585646528,4.354694483692107,4.289477858896285,4.317168452816634,4.252775295846506,4.311549929731784,4.295951583995307,4.3208403560772295,4.343106382475265,4.380847026631321,4.358202634233045,4.333390705866189,4.311249622748648,4.320850123581582,4.378675786778161,4.407640768192288,4.3916843344547845,4.43720475407647,4.463451356574131,4.4710108323653674,4.467997376729015,4.480630075672109,4.499764300298888,4.488575577356788,4.551161817044603,4.578683526992103],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"geo\":{\"bgcolor\":\"white\",\"lakecolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"white\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"light\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"ternary\":{\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2}}},\"legend\":{\"font\":{\"family\":\"sans-serif\",\"size\":15,\"color\":\"black\"},\"x\":0,\"y\":1,\"traceorder\":\"normal\",\"bgcolor\":\"White\",\"bordercolor\":\"white\",\"borderwidth\":2},\"title\":{\"y\":0.85,\"x\":0.5,\"xanchor\":\"center\",\"yanchor\":\"top\"},\"xaxis\":{\"type\":\"date\",\"tick0\":\"2020-04-02\",\"tickmode\":\"linear\",\"dtick\":6912000000.0,\"showline\":true,\"linecolor\":\"black\",\"showgrid\":true,\"gridwidth\":1,\"gridcolor\":\"LightSteelBlue\",\"mirror\":true},\"paper_bgcolor\":\"rgba(1,1,0,0)\",\"plot_bgcolor\":\"rgba(1, 1, 0, 0)\",\"yaxis\":{\"title\":{\"text\":\"Cumulative Return\"},\"showline\":true,\"linecolor\":\"black\",\"showgrid\":true,\"gridwidth\":1,\"gridcolor\":\"LightSteelBlue\",\"mirror\":true,\"zeroline\":true,\"zerolinewidth\":1,\"zerolinecolor\":\"LightSteelBlue\"}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('b9a7cf10-3b7f-44aa-8ba0-bf9e188fa221');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ],
      "source": [
        "fig = go.Figure()\n",
        "fig.add_trace(trace0_portfolio)\n",
        "\n",
        "fig.add_trace(trace1_portfolio)\n",
        "\n",
        "fig.add_trace(trace2_portfolio)\n",
        "# fig.add_trace(trace3_portfolio)\n",
        "# fig.add_trace(trace4_portfolio)\n",
        "\n",
        "\n",
        "\n",
        "fig.update_layout(\n",
        "    legend=dict(\n",
        "        x=0,\n",
        "        y=1,\n",
        "        traceorder=\"normal\",\n",
        "        font=dict(\n",
        "            family=\"sans-serif\",\n",
        "            size=15,\n",
        "            color=\"black\"\n",
        "        ),\n",
        "        bgcolor=\"White\",\n",
        "        bordercolor=\"white\",\n",
        "        borderwidth=2\n",
        "        \n",
        "    ),\n",
        ")\n",
        "#fig.update_layout(legend_orientation=\"h\")\n",
        "fig.update_layout(title={\n",
        "        #'text': \"Cumulative Return using FinRL\",\n",
        "        'y':0.85,\n",
        "        'x':0.5,\n",
        "        'xanchor': 'center',\n",
        "        'yanchor': 'top'})\n",
        "#with Transaction cost\n",
        "#fig.update_layout(title =  'Quarterly Trade Date')\n",
        "fig.update_layout(\n",
        "#    margin=dict(l=20, r=20, t=20, b=20),\n",
        "\n",
        "    paper_bgcolor='rgba(1,1,0,0)',\n",
        "    plot_bgcolor='rgba(1, 1, 0, 0)',\n",
        "    #xaxis_title=\"Date\",\n",
        "    yaxis_title=\"Cumulative Return\",\n",
        "xaxis={'type': 'date', \n",
        "       'tick0': time_ind[0], \n",
        "        'tickmode': 'linear', \n",
        "       'dtick': 86400000.0 *80}\n",
        "\n",
        ")\n",
        "fig.update_xaxes(showline=True,linecolor='black',showgrid=True, gridwidth=1, gridcolor='LightSteelBlue',mirror=True)\n",
        "fig.update_yaxes(showline=True,linecolor='black',showgrid=True, gridwidth=1, gridcolor='LightSteelBlue',mirror=True)\n",
        "fig.update_yaxes(zeroline=True, zerolinewidth=1, zerolinecolor='LightSteelBlue')\n",
        "\n",
        "fig.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "wLsRdw2Ctj1h",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 294
        },
        "outputId": "4587818e-3946-4c3c-b333-113cd21c6cf0"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f6daf6ee590>"
            ]
          },
          "metadata": {},
          "execution_count": 37
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "%matplotlib inline\n",
        "df_account_value.account_value.plot()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "NHzYxPbFxXY0"
      },
      "outputs": [],
      "source": [
        ""
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "vgBM1BNCxVs9"
      },
      "outputs": [],
      "source": [
        ""
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Lr2zX7ZxNyFQ"
      },
      "source": [
        "<a id='6.1'></a>\n",
        "## 7.1 BackTestStats\n",
        "pass in df_account_value, this information is stored in env class\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Nzkr9yv-AdV_",
        "scrolled": true,
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "6829d704-3e98-46f6-a74e-50885ee37714"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "==============Get Backtest Results===========\n",
            "Annual return          0.279845\n",
            "Cumulative returns     0.447892\n",
            "Annual volatility      0.173241\n",
            "Sharpe ratio           1.515386\n",
            "Calmar ratio           2.974223\n",
            "Stability              0.927834\n",
            "Max drawdown          -0.094090\n",
            "Omega ratio            1.318154\n",
            "Sortino ratio          2.218242\n",
            "Skew                        NaN\n",
            "Kurtosis                    NaN\n",
            "Tail ratio             1.107845\n",
            "Daily value at risk   -0.020785\n",
            "dtype: float64\n"
          ]
        }
      ],
      "source": [
        "print(\"==============Get Backtest Results===========\")\n",
        "now = datetime.datetime.now().strftime('%Y%m%d-%Hh%M')\n",
        "\n",
        "perf_stats_all = backtest_stats(account_value=df_account_value)\n",
        "perf_stats_all = pd.DataFrame(perf_stats_all)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "DiHhM1YkoCel",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e29c312a-1326-4420-c134-7cc460adad48"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "==============Get Baseline Stats===========\n",
            "\r[*********************100%***********************]  1 of 1 completed\n",
            "Shape of DataFrame:  (377, 8)\n",
            "Annual return          0.372568\n",
            "Cumulative returns     0.606034\n",
            "Annual volatility      0.186411\n",
            "Sharpe ratio           1.797259\n",
            "Calmar ratio           4.017616\n",
            "Stability              0.944437\n",
            "Max drawdown          -0.092733\n",
            "Omega ratio            1.387034\n",
            "Sortino ratio          2.756135\n",
            "Skew                        NaN\n",
            "Kurtosis                    NaN\n",
            "Tail ratio             1.064240\n",
            "Daily value at risk   -0.022156\n",
            "dtype: float64\n"
          ]
        }
      ],
      "source": [
        "#baseline stats\n",
        "print(\"==============Get Baseline Stats===========\")\n",
        "baseline_df = get_baseline(\n",
        "        ticker=\"^DJI\", \n",
        "        start = df_account_value.loc[0,'date'],\n",
        "        end = df_account_value.loc[len(df_account_value)-1,'date'])\n",
        "\n",
        "stats = backtest_stats(baseline_df, value_col_name = 'close')"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "9U6Suru3h1jc"
      },
      "source": [
        "<a id='6.2'></a>\n",
        "## 7.2 BackTestPlot"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "HggausPRoCem",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "749a26b5-6bbd-493d-a0a9-ee983235c7ba"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "==============Compare to DJIA===========\n",
            "[*********************100%***********************]  1 of 1 completed\n",
            "Shape of DataFrame:  (377, 8)\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\"><th>Start date</th><td colspan=2>2020-04-02</td></tr>\n",
              "    <tr style=\"text-align: right;\"><th>End date</th><td colspan=2>2021-09-30</td></tr>\n",
              "    <tr style=\"text-align: right;\"><th>Total months</th><td colspan=2>18</td></tr>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Backtest</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Annual return</th>\n",
              "      <td>27.984%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Cumulative returns</th>\n",
              "      <td>44.789%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Annual volatility</th>\n",
              "      <td>17.324%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sharpe ratio</th>\n",
              "      <td>1.52</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Calmar ratio</th>\n",
              "      <td>2.97</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Stability</th>\n",
              "      <td>0.93</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Max drawdown</th>\n",
              "      <td>-9.409%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Omega ratio</th>\n",
              "      <td>1.32</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sortino ratio</th>\n",
              "      <td>2.22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Skew</th>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Kurtosis</th>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Tail ratio</th>\n",
              "      <td>1.11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Daily value at risk</th>\n",
              "      <td>-2.078%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Alpha</th>\n",
              "      <td>-0.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Beta</th>\n",
              "      <td>0.80</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th>Worst drawdown periods</th>\n",
              "      <th>Net drawdown in %</th>\n",
              "      <th>Peak date</th>\n",
              "      <th>Valley date</th>\n",
              "      <th>Recovery date</th>\n",
              "      <th>Duration</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>9.41</td>\n",
              "      <td>2020-06-08</td>\n",
              "      <td>2020-06-26</td>\n",
              "      <td>2020-08-05</td>\n",
              "      <td>43</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8.93</td>\n",
              "      <td>2020-10-12</td>\n",
              "      <td>2020-10-30</td>\n",
              "      <td>2020-11-09</td>\n",
              "      <td>21</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>8.93</td>\n",
              "      <td>2020-09-02</td>\n",
              "      <td>2020-09-23</td>\n",
              "      <td>2020-10-12</td>\n",
              "      <td>29</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>6.35</td>\n",
              "      <td>2021-09-02</td>\n",
              "      <td>2021-09-30</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4.62</td>\n",
              "      <td>2020-05-11</td>\n",
              "      <td>2020-05-13</td>\n",
              "      <td>2020-05-26</td>\n",
              "      <td>12</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th>Stress Events</th>\n",
              "      <th>mean</th>\n",
              "      <th>min</th>\n",
              "      <th>max</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>New Normal</th>\n",
              "      <td>0.10%</td>\n",
              "      <td>-6.97%</td>\n",
              "      <td>5.36%</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1008x5184 with 13 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1008x432 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "print(\"==============Compare to DJIA===========\")\n",
        "%matplotlib inline\n",
        "# S&P 500: ^GSPC\n",
        "# Dow Jones Index: ^DJI\n",
        "# NASDAQ 100: ^NDX\n",
        "backtest_plot(df_account_value, \n",
        "             baseline_ticker = '^DJI', \n",
        "             baseline_start = df_account_value.loc[0,'date'],\n",
        "             baseline_end = df_account_value.loc[len(df_account_value)-1,'date'])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "MkdWMUWKoCem"
      },
      "outputs": [],
      "source": [
        ""
      ]
    }
  ],
  "metadata": {
    "colab": {
      "collapsed_sections": [],
      "name": "Copy of FinRL_Ensemble_StockTrading_ICAIF_2020.ipynb",
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.6.10"
    },
    "pycharm": {
      "stem_cell": {
        "cell_type": "raw",
        "metadata": {
          "collapsed": false
        },
        "source": []
      }
    },
    "accelerator": "TPU"
  },
  "nbformat": 4,
  "nbformat_minor": 0
}
